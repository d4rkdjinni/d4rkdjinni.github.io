%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: 144.eps
%%Creator: Adobe Illustrator(R) 23.0
%%For: Rushi
%%CreationDate: 3/27/2021
%%BoundingBox: 0 0 3000 1500
%%HiResBoundingBox: 0 0 3000 1500
%%CropBox: 0 0 3000 1500
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 23.0.5%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 23.0.5 x625 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c145 79.163499, 2018/08/13-16:40:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Black and white pixel background</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Black and white pixel background</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>black</rdf:li>
               <rdf:li>gradient</rdf:li>
               <rdf:li>texture</rdf:li>
               <rdf:li>white</rdf:li>
               <rdf:li>monochrome</rdf:li>
               <rdf:li>geometric</rdf:li>
               <rdf:li>background</rdf:li>
               <rdf:li>square</rdf:li>
               <rdf:li>abstract</rdf:li>
               <rdf:li>digital</rdf:li>
               <rdf:li>element</rdf:li>
               <rdf:li>pixel</rdf:li>
               <rdf:li>mosaic</rdf:li>
               <rdf:li>design</rdf:li>
               <rdf:li>simple</rdf:li>
               <rdf:li>illustration</rdf:li>
               <rdf:li>grid</rdf:li>
               <rdf:li>halftone</rdf:li>
               <rdf:li>wallpaper</rdf:li>
               <rdf:li>computer</rdf:li>
               <rdf:li>shape</rdf:li>
               <rdf:li>horizontal</rdf:li>
               <rdf:li>isolated</rdf:li>
               <rdf:li>light</rdf:li>
               <rdf:li>explosion</rdf:li>
               <rdf:li>effect</rdf:li>
            </rdf:Bag>
         </dc:subject>
         <xmp:MetadataDate>2021-03-27T23:38:27+05:30</xmp:MetadataDate>
         <xmp:ModifyDate>2021-03-27T23:38:27+05:30</xmp:ModifyDate>
         <xmp:CreateDate>2021-03-27T23:38:27+05:30</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 23.0 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>128</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAgAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYqtEkZkMYYeoByKVFQD3piq7FXYq7FXYq7FXYq0JEZmQMC6U5KDuK9KjFW8V&#xA;dirsVU4Li3uI/Ut5UmjqV5xsGFVNCKjwOKqmKuxV2Kqa3Fu0zwLKhmj4l4gwLLyBK1XqK8TTFVk1&#xA;9YwXFvbT3EUVzdsy2kDuqvKyKXcRqTVyqKWNOg3xVda3drdwLcWsyXFu9eE0TB0ahINGUkGhFMVV&#xA;BIjMyBgXSnJQdxXpUYq3irsVdirsVdirsVdirsVYLdfmf5Sl46vaeYo10jSLhrTXbVbZ3cSTFoYf&#xA;VLBZLdUkjY8+PFgOtN8VTTzF5nv9B0PU9Wuo7WSNZIo9DjjkkrOZ+EcSzfAeLNM5+wGAX4vHFUvs&#xA;/OfmmSawE2h+og1GXS9dS0Msr2zkI1vMhkSFXhCyVmcbL+zyxVAaT521PzV5Pi1LTNasNEvNWv7i&#xA;LQ3vIBye2glZBGYXnYSylULFo2pTeg6YpXz+eta1f6nofl+SDSfOXorfXFhr1u8Ye2WSaB6RQyl1&#xA;Z3iEi0Y0jIJ64oSzzj5i0iLzxD6KvaqqyLqOsadMGvp5NLT64dOjgjWViFRuUquFqrDia4pU7/zD&#xA;54W9v9Z0rXoNS0q/jtL3y5pFpbx3N1LYq/8Apvpwq0fORGkReRkpStaHFU2n84eevQ0zUl0O6V7q&#xA;a8aLQkhoz2q8Ft2v7qT4LKVORdlHLlQha0xQh/M3nTy/qlva2sy2x1rTRDqAmWQ3lvpupkRxW/qJ&#xA;AY55053gUOkfChq3HFKJg/My5t9Furu6Fle6hLqB0zQNOim+pzXsyPHDIlLvjxcSsx/l48fHFCV+&#xA;UPzF84RXF5D5h0LUJFuNcntoyqIz2FpMImtfVRArvGzSOFcLsq1JxSyC1ll0671a10PzRbavfmaM&#xA;R6Nqt2jm2nmnd5VaWMSXCho6rFEVoOFB3OKEB5L17QNO0/U5ZL23vNb/AEgdKe7ku0lur+aKQw2f&#xA;1gpHGInct6YXhRfE4qwSz/Nr8zLXzXcaBeWhS4gM5VJrea5XncgmFXaCCMyR2s37sujKGT4qnjup&#xA;ZRpnmnzrq3mFdEvL99B1OCO5MF69pCdNvuF4kS+jHJN6z/uv7tgw5cixG3HFWQWXni/vrbzJZM8F&#xA;jqOim5U6xJDcLpMRjYhFlmnEPKSNOLShTxoahqYoYpp35qeTdD1pdI0O+g1GPUoaxW9oqxWMF/Vh&#xA;+7KI0kn1y4k+NhyEdAzUBrilW1HXtW0jRL8aTqmnWesDUYLy50Swf65dy3N7G809gHuWmT1Z50k9&#xA;MpGPhUhVBxVlyfmTZvqosE0jUvSjkSO81WSARWEIYVLG5kZFcA0HwV64oYtqf5teZIdX1Xy9YaSd&#xA;V1S2v/qtvd2SNHarFdwGWyT1pTKhuKU9QuEi9+xUq8+h2cP6R1DzpBDLqWliDUIdclRbK0umgt+M&#xA;AufSlIlkt5ebfZCpyHHFUB5L866D5x8nWl3f3Ns3m3y+8clvPq8qJEt/cxO8Th7ZlRo2AdVUfFxX&#xA;4hXFWQ+U9Q81fpDVNHhhghbTNVhFxaXEH1a3j0yeEsWsHt0Kys0qllEu435U2xQlnmO40eHzDqXl&#xA;/wAw6a98nma6gJvEtntYEt7WP1YS9yW4XEkEkY2Uht1FDilMPL35weQZFs9MGty38q2ltLJqU0Wz&#xA;Geb6uvr+koEUnqU58kVVrvTFCXyeer3UPOET6HLNL68CfVLBobpQ8Fu1w90s8U5t4IppmtvTt5V5&#xA;EftjiVqpTDUvzIRtb0m1tnubZo2uRq2nLarM8tzBaCf9Hxs7Rky/HVWhDK1KVGKGNah/zkroqeZN&#xA;OsLHTLySwMk0WrGSCl4rLGSgt7cPybi28hI2UbVJFVNPRL3z7oNnq+h6bN6qnzBG8lhdMoSEcIxI&#xA;qS+oySI7qfhUp2NaYoSzQfPui2tprFtqN9dTweWXEWp+YryJIraSWVuQjR4zRmRZErRehXxxVIfP&#xA;/mTVZLO4u7W8li0K5gtLvQtTgvrfSIzJLb3LBPrU7OJ/VYRfumj2qDuK4pVdH/Nm8hklsdU0i4iF&#xA;ja2scj8zdXa301qZ1t7mKKMfFKqEpIvwfzFSQMVYH5x8/wB5peiXN9rmkQSeXfMN2s622lTWVxaM&#xA;8KOLiwurqGL42nmj5NJ8TDfpSmKsOvvzEuta1u9vbi5aGfVP9Es7RCtzCZfTl+qT2S3LmGD0J4Y1&#xA;MiyVDuWAG1FU80nzr5+e+sEW61VJbySW3tLea7T0rprRLaadILq4P1ejyhhHJVyI+S1JeuKpf5Su&#xA;rbUPKF3FFodxLe3STwpdSajbx241Gxc3XO1huEAEwV+bemvELsBXbFU/vvNWpx6OySNceXfOWtXY&#xA;vNS1DWppLc28YkjdINPVVkufqjySCEcFpRXDE7VVSyzs9CHl641ebzFB5Z8zaXeXOky20t1SFy14&#xA;895LC9vG0qmaCb01kjTlRV+L4q4qpfpK+u2uJ11W3sbe2s4rXyxI7XdrcnSfWlma4WC2LK8zxW54&#xA;9HfuO2Kst0nzJ5e8v3WmeZofLeqvb66tzY3PmC7mmf1lEkdtZ3N3CRFCZblweQ4q4X4hyGKsL078&#xA;zdV07VJLi8tWtbrSTYPb6BaBdKjt4o1MV1bSTenJO8JlVCtvV+dQQPhFVWQXfnnyG+o3Gs3AMGpa&#xA;Rq9xqFn5ctmM8tzdOYws9vdQIiQRyvC3rxyKxNTzIqAVUo8pecri8lZX1iTyxPq2sNPpupLD6l1/&#xA;oysa6u1xOivapHdJGgqQTsPskBVl/kOXSfNvmnzdot09jHrNjqEl3pWt21uEvHmt550iug+0MwgW&#xA;XglVPctWuKsCsNO1GwvpLbzZaXlhfGa3j1K9vVummvbKVnikd7lZmRYOb2yyJbsXWnw1Csyqsk/x&#xA;l+W2nx2M2ooNC8w6FewSXslmpu4tVtZxO5Wzla5LNaylufJ2KpUbb1CqzyXqvlLVvzNjufK1hNd6&#xA;Hpds8mj6VPCqxJqctqJFX6xMzrAP9GCQ0rR+RUAHkyrItT/N/RPLnmttL83C2ku9USf/ABPaRNc3&#xA;VvaRQxM9hAkMvKFpZUbhPw+EsQenRV5H5q882TatYaloq2KWVoZ7jy5YSQzz3FsZQZec31hXjaRp&#xA;TGBSSSOMo3Dj3Ups/nKHWfLWneW9FikuL+69e/1TTLJbhjfXzTm4liN18DcUt1diUBo9ACyVxQzL&#xA;SPN/l+y0rVNI1q1e9u9Lsh6nkeye2l0hRNdpEIYniMxlk58ZyZKmMOQTsQFUtjuND8zTWwtNXu/P&#xA;EGnJIdT0OZGtHilNv6VveWEdvJZsYw1I/Tj505kgLyUqqlPmz849T1C3itZF0XWdW0W6jOlSQR3X&#xA;70zxBedspkdJhGS8TpKDzqpAqMVpAal500/X9AhOux6PYvqLm+uhZRLbXL3iiaFXvEaPjKt363NJ&#xA;aMYR8dGOKs28t6z5n1fy95oh8tiDUJri/jTV763umudT9GQ+lGU4R2AkX0owFm9TdeTBm4iqqG/L&#xA;TzZ5M0bV/MFj5h+oPoU17Bd+XIxbPclpYZXty8TyxLK5t6IOTAkblWIDHFURZzeRLu+uPK2manbS&#xA;Xuu3MjahdQ2729lZaBEjX8aWoIFtG6BVZZXRvi5Bv2aKsW0/zN5oudTsPPlzqMk2saaUSyS5s3aO&#xA;TTpDdyShJWhhjjdozxVmfeu70piqL0m8mufPE58lXM95q1iEubrVr64l9aS0uIhHdfWxcOlqt1ac&#xA;2YfAg+H7LMN1UNoXmbU5fMAXX9bjs7fWrR7LVfO9vcQuhnif1I/RIiSOqxUhoRzTmWDgDjiqZWXl&#xA;LyTpul+WLHXNF1TWrOWG5vrm9iRZbkC0dligkhiM3C1k5l4xHLy+IVNOWKt+TPP13p9tqEet6rLc&#xA;+UdYt7bTdMitmEDwS3NILc2g5Sw2S28MchZHm5gqr8dwSqjNc16xuPMusakb6+8xeXLG3Ol6douo&#xA;q8mm3N/bxRQ+p9Ylc27SMrtMrcQXHIg+KqU6JLq3nV9f0zUdPmiur+C0vp9VnkubKwWzDK8NtIrT&#xA;TosVx8TRKvA8hvWhoq8UuJ7u6iULbRW9pa20fN0jZo6iILzbeULJMeIZhxq1Ps4pZH5d826f5e07&#xA;Tr7TpjFrFXi1O2hhDQy20bCWJZZZgZI7iSRTV4TQJxpxZTVVLJvM9xLo1raRx2rWNnP66WbwRmRJ&#xA;miSJ5OQQN6TrHGjK0jcigL9TVVZJr/1zREs5r28SYXzvHptvx+ow28+8higqAWL7BKhafM4qh4vM&#xA;V0yyWrSrHazX4v3REWMJItV5xzKDMlEZhxFR3oWAxVU03U9Ws5k1bRy4vJJJYJZZTHMWkmjYMFje&#xA;v96jkUZWJI2YmoCrrfzXrlrZW0MGpXS29ilxBaxxXToIvrg/eLGjDkIn4Dmo2PehOKqr+atQltYN&#xA;OkvZ7mzsrdJNORnk9O3ukiQl0illMdVCNHUD3Va4qpWfmPUrPTLiNbgRzXMQBkVLeWWVGuVmZXmJ&#xA;9WJlkgR1Iq4I7KcVR1n59uGN/Lqb3Esl16p4W3oRetJcqqTPdu8cgmHFPsFPtMSClMVSyLVv0ZfS&#xA;vYmymETxNHL6UsiOYx8PAXC8wA1GZWoCR3G2Ko6w83X9tZ6a1tcpZXml8ktb20U2+o/GJAF+sfEP&#xA;RX1iGFVqDuDSuKoUecNakvba5vruW+ltrg3SvLKXHLdhxSb1IVKtVl/dnc/RiqEvtZMl9IbdJIdP&#xA;EkjQadO63CRBuQCAOip8KtQHht1GKo7Udf1GXXPr1zeS22rWMdtbW93ZSEt/o0aQNIJFbkzsq8q8&#xA;xUk79sVRnmbzZfa9ptnDqd+5tYIydPskT1/R9IeilZZn9ak7KzP8Wx34brRVjEmoXsno+pMz/Vox&#xA;Db8jX00DFwqV+zRmJ27nFV9vqN3ayrc2kzwXg5UuYS0UihwyuoZCuzq5De23TFUbBLLY6ZBc2rRT&#xA;1lWedGt0Z4JIyyRcpnQko/xHgrcSQCwqBirV7PqNtc2V1HOkdxaJELWaBRC4EQDxyF1ji5NyrxZq&#xA;v8NK0C1VS71mq03Meq3JWBqWPIUZjyBG9T3xVEWepSon1SaR/qEs8M1wkZAesPJVZCQeLKkrgdt8&#xA;VZPp3nXUfL8OkSaLcR2z6dI7xTRRRRmS4jcv6txx9SWcPDN6YWQgLuANjiqFsfNl5BoN/oj2dtqc&#xA;MqwyRz3EMJa0SOT1JUikUFkSUmhCSLuSR8bYqgtG1pYLqZpbmWGKZ1lEEUKzo80VTbtKrunMI55f&#xA;Fyr3Briqf6d+Z3mq4m0aylvI5LLTopLZLG6gSey9GVKOGtVUepsvwoQQCAFpiqBl8xTJ5mi1W4iN&#xA;3dPJK2sBb140vfrJb1j8HpSW4kSquP2dqhemKoZ/MJur659SOGzF0D6UcPFra1EjB5DCWFxJFTip&#xA;5ITIaEEnkwxVH3Wv2Onahq81nFa3EV7ay28DWxnS3jW/RhySAFEV4Y5pE4vty3VagnFXDzNf6VI6&#xA;WMcdzod3FaJqtsVjeylna1RpQQ6vCswZWZX48lavWgxVKZ9cvb4WtmyRTLblFFpDawojFKB3Uxhm&#xA;5OsSBmVfiA32GKpjr3nvUNSvrxLpgNOu5YBeWdjWzjlt7EvFa26IqBEjihbigaM0pU74qxm41O9n&#xA;t7e3dwIbWMxQpGiRjiXMhL8AvNix+01W2ArRRRVZZXc1ndw3cAQzW7rJH6saTJyU1HKOVXRx7MpG&#xA;KtXNzLczPPMeU0jFpJO7MSSTTp37Yqo4q7FXYq7FXYq7FXYq7FVysysGUlWHQjY4qtxV2KuxVskn&#xA;cmvb7tsVaxVdHJJG6yRsUdTVXUkEH2IxVokk1PXFWsVdirsVVrW6mtbiK4hIWaFxJGxAajKagkEE&#xA;HcdDtiqjirYJFQDSux9++KthiOlPpAP68VXRTPHz4hTzUo3JVfY+HIHifcb4qp4q7FURDqF5Dbtb&#xA;xSskLuspUdpEqFdT1VgGO4xVTaQk86n1eRZnr1rT2rWvvirjKxZHqSyUoWPLZfsihHQDFVPFXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:cfe626f8-ff3b-8842-8dbb-82760ac4ec17</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:cfe626f8-ff3b-8842-8dbb-82760ac4ec17</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:107ce775-37d2-4b0d-a9b2-2c99e4ac2c92</stRef:instanceID>
            <stRef:documentID>xmp.did:cfdc8171-d42d-bc48-9be4-2a9b9e5f920e</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:cfdc8171-d42d-bc48-9be4-2a9b9e5f920e</stEvt:instanceID>
                  <stEvt:when>2021-03-27T18:54:31+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:cfe626f8-ff3b-8842-8dbb-82760ac4ec17</stEvt:instanceID>
                  <stEvt:when>2021-03-27T23:38:27+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>3000.000000</stDim:w>
            <stDim:h>1500.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -1500 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1500 li
3000 1500 li
3000 0 li
cp
clp
3000 1500 mo
0 1500 li
0 0 li
3000 0 li
3000 1500 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
gsave
3000 1500 mo
0 1500 li
0 0 li
3000 0 li
3000 1500 li
cp
clp
613.14 798.303 mo
613.605 798.308 li
613.78 781.809 li
597.281 781.634 li
597.217 787.64 li
596.752 787.635 li
596.742 788.6 li
589.626 788.523 li
589.712 780.504 li
573.213 780.328 li
573.038 796.827 li
581.176 796.914 li
581.091 804.935 li
591.478 805.045 li
591.382 814.088 li
607.881 814.264 li
607.987 804.255 li
613.076 804.309 li
613.14 798.303 li
cp
.137255 .121569 .12549 rgb
f
607.336 753.389 mo
623.835 753.564 li
624.011 737.065 li
607.512 736.89 li
607.336 753.389 li
cp
f
1152.35 733.042 mo
1135.85 732.866 li
1135.67 749.365 li
1151.85 749.537 li
1151.75 758.869 li
1150.55 758.856 li
1150.38 775.355 li
1166.88 775.531 li
1167.05 759.162 li
1168.25 759.175 li
1168.42 742.676 li
1152.25 742.504 li
1152.35 733.042 li
cp
f
1351.69 733.576 mo
1368.19 733.751 li
1368.37 717.252 li
1362.86 717.194 li
1362.92 711.945 li
1346.42 711.77 li
1346.24 728.269 li
1351.75 728.328 li
1351.69 733.576 li
cp
f
1566.27 745.5 mo
1582.77 745.675 li
1582.94 729.176 li
1566.44 729.001 li
1566.27 745.5 li
cp
f
2175.18 753.472 mo
2158.68 753.296 li
2158.51 769.795 li
2175 769.971 li
2175.18 753.472 li
cp
f
2922.06 834.232 mo
2922.2 821.624 li
2930.36 821.711 li
2930.53 805.212 li
2914.03 805.037 li
2913.92 816.136 li
2904.96 816.041 li
2905.1 802.423 li
2888.6 802.248 li
2888.43 818.747 li
2900.96 818.88 li
2900.82 832.498 li
2904.72 832.54 li
2904.71 834.041 li
2905.56 834.05 li
2905.56 834.058 li
2922.06 834.232 li
cp
f
127.27 762.219 mo
116.062 762.1 li
115.887 778.599 li
118.735 778.629 li
118.726 779.489 li
135.225 779.665 li
135.298 772.73 li
143.658 772.819 li
143.833 756.32 li
127.334 756.146 li
127.27 762.219 li
cp
f
422.352 755.063 mo
438.851 755.238 li
439.025 738.739 li
425.341 738.594 li
425.344 738.319 li
426.913 738.336 li
427.088 721.837 li
410.589 721.662 li
410.43 736.623 li
408.861 736.606 li
408.686 753.105 li
422.371 753.25 li
422.352 755.063 li
cp
f
2886.5 738.716 mo
2886.5 738.744 li
2886.43 738.743 li
2886.42 739.601 li
2876.75 739.499 li
2876.58 755.998 li
2892.14 756.163 li
2892.07 762.673 li
2908.57 762.849 li
2908.75 746.349 li
2902.92 746.288 li
2903 738.891 li
2886.5 738.716 li
cp
f
14.1733 755.89 mo
30.6724 756.064 li
30.7114 752.386 li
44.2764 752.53 li
44.4512 736.031 li
27.9521 735.856 li
27.9131 739.535 li
23.4473 739.487 li
23.5576 729.093 li
7.05859 728.918 li
6.88379 745.417 li
14.2837 745.496 li
14.1733 755.89 li
cp
f
1876.8 812.461 mo
1860.31 812.286 li
1860.13 828.785 li
1876.63 828.96 li
1876.8 812.461 li
cp
f
1120.23 697.737 mo
1103.73 697.562 li
1103.55 714.061 li
1120.05 714.236 li
1120.23 697.737 li
cp
f
895.936 767.158 mo
908.934 767.296 li
908.828 777.239 li
925.327 777.414 li
925.502 760.915 li
912.504 760.777 li
912.609 750.834 li
910.364 750.81 li
910.373 749.98 li
924.598 750.131 li
924.773 733.632 li
908.274 733.457 li
908.201 740.362 li
893.976 740.211 li
893.801 756.71 li
896.046 756.734 li
895.936 767.158 li
cp
f
2131.99 793.333 mo
2115.49 793.158 li
2115.31 809.657 li
2131.81 809.832 li
2131.99 793.333 li
cp
f
338.596 822.366 mo
338.653 816.966 li
346.133 817.045 li
346.309 800.546 li
329.809 800.371 li
329.752 805.771 li
328.493 805.758 li
328.499 805.263 li
312 805.088 li
311.824 821.587 li
322.102 821.696 li
322.097 822.191 li
338.596 822.366 li
cp
f
1370.86 741.787 mo
1354.36 741.612 li
1354.19 758.11 li
1370.69 758.286 li
1370.86 741.787 li
cp
f
551.272 672.411 mo
534.773 672.235 li
534.598 688.734 li
551.097 688.91 li
551.272 672.411 li
cp
f
23.3638 791.786 mo
39.8628 791.961 li
40.0381 775.462 li
23.5386 775.287 li
23.3638 791.786 li
cp
f
1709.75 790.342 mo
1726.25 790.517 li
1726.42 774.018 li
1709.92 773.843 li
1709.75 790.342 li
cp
f
195.171 778.859 mo
195.346 762.36 li
178.847 762.185 li
178.708 775.264 li
172.133 775.194 li
171.958 791.693 li
182.399 791.804 li
182.262 804.811 li
194.786 804.943 li
194.621 820.49 li
204.45 820.595 li
204.315 833.332 li
220.814 833.507 li
220.949 820.842 li
222.101 820.854 li
222.264 805.533 li
228.434 805.599 li
228.609 789.1 li
212.11 788.925 li
211.947 804.245 li
211.294 804.238 li
211.295 804.167 li
198.771 804.034 li
198.936 788.486 li
188.494 788.376 li
188.596 778.789 li
195.171 778.859 li
cp
f
1171.06 800.621 mo
1177.15 800.687 li
1177.33 784.187 li
1160.83 784.012 li
1160.78 788.385 li
1154.69 788.32 li
1154.51 804.819 li
1171.01 804.994 li
1171.06 800.621 li
cp
f
591.4 716.136 mo
607.899 716.311 li
608.074 699.812 li
598.708 699.713 li
598.765 694.38 li
614.706 694.549 li
614.881 678.05 li
598.382 677.875 li
598.308 684.846 li
582.367 684.677 li
582.192 701.176 li
591.558 701.275 li
591.4 716.136 li
cp
f
131.638 697.781 mo
115.139 697.606 li
114.964 714.105 li
131.463 714.28 li
131.638 697.781 li
cp
f
212.396 700.408 mo
195.897 700.233 li
195.722 716.732 li
212.222 716.907 li
212.396 700.408 li
cp
f
1267.45 743.051 mo
1283.95 743.226 li
1284.12 726.727 li
1267.62 726.552 li
1267.45 743.051 li
cp
f
2028.2 741.377 mo
2028.03 757.876 li
2043.93 758.045 li
2043.88 762.608 li
2060.38 762.783 li
2060.55 746.284 li
2044.65 746.115 li
2044.7 741.552 li
2028.2 741.377 li
cp
f
1683.37 770.368 mo
1687.05 770.407 li
1687.22 753.908 li
1670.72 753.732 li
1670.66 760.236 li
1666.98 760.198 li
1666.81 776.697 li
1683.3 776.872 li
1683.37 770.368 li
cp
f
1708.85 818.484 mo
1709.03 801.985 li
1704.14 801.934 li
1704.26 790.718 li
1687.76 790.542 li
1687.59 807.041 li
1692.47 807.093 li
1692.36 818.31 li
1708.85 818.484 li
cp
f
1382.22 828.814 mo
1382.4 812.315 li
1377.5 812.264 li
1377.5 812.046 li
1361.01 811.87 li
1360.83 828.37 li
1365.72 828.422 li
1365.72 828.64 li
1382.22 828.814 li
cp
f
391.759 789.998 mo
375.26 789.823 li
375.234 792.254 li
360.516 792.098 li
360.401 802.831 li
354.868 802.772 li
354.692 819.271 li
371.191 819.446 li
371.306 808.714 li
376.839 808.772 li
376.865 806.341 li
391.584 806.497 li
391.759 789.998 li
cp
f
2093.4 797.965 mo
2076.9 797.79 li
2076.72 814.289 li
2093.22 814.464 li
2093.4 797.965 li
cp
f
1488.14 756.71 mo
1504.64 756.886 li
1504.69 752.322 li
1520.59 752.491 li
1520.6 750.771 li
1529.89 750.869 li
1530.06 734.37 li
1513.56 734.195 li
1513.55 735.916 li
1504.26 735.817 li
1504.21 740.38 li
1488.32 740.211 li
1488.14 756.71 li
cp
f
1800.92 782.488 mo
1817.42 782.664 li
1817.59 766.165 li
1801.09 765.989 li
1800.92 782.488 li
cp
f
962.463 762.167 mo
978.962 762.342 li
979.138 745.843 li
962.639 745.668 li
962.463 762.167 li
cp
f
934.855 708.693 mo
918.356 708.518 li
918.181 725.017 li
934.681 725.192 li
934.855 708.693 li
cp
f
742.54 710.989 mo
726.041 710.814 li
725.866 727.313 li
742.365 727.488 li
742.54 710.989 li
cp
f
387.727 783.128 mo
404.226 783.304 li
404.308 775.61 li
414.002 775.713 li
414.177 759.214 li
397.678 759.038 li
397.597 766.732 li
387.902 766.629 li
387.727 783.128 li
cp
f
252.628 699.065 mo
236.129 698.89 li
235.954 715.389 li
252.453 715.564 li
252.628 699.065 li
cp
f
66.7119 725.021 mo
66.5366 741.52 li
78.0791 741.642 li
77.9912 749.915 li
76.4375 749.898 li
76.2622 766.397 li
92.7612 766.573 li
92.8911 754.353 li
94.4453 754.369 li
94.6201 737.87 li
83.0776 737.748 li
83.2109 725.195 li
66.7119 725.021 li
cp
f
642.75 704.764 mo
647.511 704.814 li
647.686 688.315 li
631.187 688.141 li
631.171 689.65 li
626.41 689.599 li
626.235 706.098 li
642.734 706.273 li
642.75 704.764 li
cp
f
812.653 712.682 mo
796.154 712.507 li
795.979 729.006 li
812.478 729.181 li
812.653 712.682 li
cp
f
2739.18 679.508 mo
2722.68 679.333 li
2722.5 695.832 li
2739 696.007 li
2739.18 679.508 li
cp
f
665.893 840.398 mo
665.936 836.307 li
671.167 836.362 li
671.196 833.612 li
676.917 833.674 li
677.093 817.174 li
660.594 816.999 li
660.574 818.891 li
645.185 818.728 li
645.01 835.227 li
649.446 835.273 li
649.394 840.223 li
665.893 840.398 li
cp
f
869.134 725.057 mo
852.635 724.882 li
852.459 741.381 li
868.958 741.556 li
869.134 725.057 li
cp
f
550.744 723.337 mo
550.569 739.836 li
561.987 739.957 li
561.815 756.136 li
578.314 756.312 li
578.49 739.813 li
567.072 739.691 li
567.243 723.512 li
550.744 723.337 li
cp
f
371.404 826.948 mo
387.903 827.124 li
388.078 810.624 li
371.579 810.449 li
371.404 826.948 li
cp
f
569.792 762.881 mo
553.292 762.705 li
553.118 779.204 li
569.617 779.38 li
569.792 762.881 li
cp
f
181.458 726.159 mo
164.958 725.984 li
164.783 742.483 li
181.283 742.658 li
181.458 726.159 li
cp
f
67.3413 685.097 mo
50.8423 684.922 li
50.667 701.421 li
67.1665 701.596 li
67.3413 685.097 li
cp
f
521.33 788.316 mo
521.486 773.654 li
524.909 773.69 li
525.04 761.346 li
535.277 761.454 li
535.428 747.264 li
536.231 747.272 li
536.406 730.773 li
519.907 730.598 li
519.756 744.789 li
518.953 744.78 li
518.822 757.125 li
508.584 757.017 li
508.56 759.325 li
501.167 759.247 li
500.992 775.746 li
504.962 775.788 li
504.831 788.141 li
521.33 788.316 li
cp
f
1092.99 768.561 mo
1109.49 768.735 li
1109.66 752.236 li
1107.61 752.215 li
1107.69 745.41 li
1091.19 745.234 li
1091.01 761.733 li
1093.06 761.755 li
1092.99 768.561 li
cp
f
1326.53 732.981 mo
1343.03 733.156 li
1343.2 716.657 li
1326.7 716.482 li
1326.53 732.981 li
cp
f
1457.49 719.003 mo
1440.99 718.829 li
1440.82 735.328 li
1457.32 735.502 li
1457.49 719.003 li
cp
f
1668.89 696.928 mo
1678.9 697.034 li
1679.07 680.535 li
1662.58 680.359 li
1662.51 686.85 li
1652.5 686.744 li
1652.32 703.243 li
1668.82 703.418 li
1668.89 696.928 li
cp
f
1823.12 775.044 mo
1821.78 775.03 li
1821.61 791.529 li
1833.21 791.652 li
1833.09 802.538 li
1849.59 802.713 li
1849.76 786.214 li
1838.17 786.091 li
1838.19 784.377 li
1839.52 784.391 li
1839.66 770.831 li
1854.94 770.993 li
1854.99 766.45 li
1858.58 766.488 li
1858.76 749.989 li
1842.26 749.813 li
1842.21 754.357 li
1838.62 754.319 li
1838.47 767.879 li
1823.2 767.717 li
1823.12 775.044 li
cp
f
2191.87 687.938 mo
2175.37 687.762 li
2175.2 704.261 li
2191.7 704.437 li
2191.87 687.938 li
cp
f
2423.27 689.178 mo
2406.77 689.002 li
2406.6 705.501 li
2423.1 705.677 li
2423.27 689.178 li
cp
f
18.6348 798.435 mo
2.13574 798.259 li
1.96045 814.759 li
18.4595 814.934 li
18.6348 798.435 li
cp
f
311.287 692.052 mo
294.788 691.876 li
294.613 708.375 li
311.112 708.551 li
311.287 692.052 li
cp
f
1002.4 728.275 mo
1004.05 728.292 li
1003.93 739.271 li
1020.43 739.446 li
1020.61 722.947 li
1009.91 722.833 li
1010.03 711.855 li
993.527 711.68 li
993.526 711.841 li
986.077 711.762 li
985.902 728.261 li
1002.4 728.437 li
1002.4 728.275 li
cp
f
1723.17 737.806 mo
1737.84 737.961 li
1737.88 734.402 li
1743.04 734.457 li
1743.21 717.958 li
1726.71 717.783 li
1726.68 721.342 li
1721.51 721.288 li
1721.5 722.767 li
1706.83 722.611 li
1706.66 739.11 li
1723.16 739.285 li
1723.17 737.806 li
cp
f
1877.91 708.703 mo
1861.41 708.528 li
1861.23 725.027 li
1877.73 725.202 li
1877.91 708.703 li
cp
f
2134.89 824.316 mo
2151.39 824.491 li
2151.57 807.992 li
2135.07 807.817 li
2134.89 824.316 li
cp
f
2362.36 829.81 mo
2365.48 829.843 li
2365.66 813.344 li
2349.16 813.169 li
2349.13 815.495 li
2346.01 815.462 li
2345.83 831.961 li
2362.33 832.136 li
2362.36 829.81 li
cp
f
1362.06 799.401 mo
1373.49 799.523 li
1373.59 789.415 li
1375.7 789.438 li
1375.81 779.046 li
1376.45 779.053 li
1376.62 762.554 li
1360.12 762.379 li
1360.01 772.771 li
1359.38 772.764 li
1359.33 777.204 li
1344.59 777.047 li
1344.42 793.546 li
1357.05 793.681 li
1357.04 793.971 li
1345.62 793.85 li
1345.44 810.349 li
1361.94 810.524 li
1362.06 799.401 li
cp
f
408.11 825.335 mo
409.705 825.353 li
409.88 808.854 li
393.381 808.678 li
393.312 815.215 li
391.717 815.198 li
391.542 831.697 li
408.041 831.872 li
408.11 825.335 li
cp
f
499.342 829.357 mo
499.517 812.858 li
497.404 812.836 li
497.542 799.828 li
481.043 799.653 li
481.036 800.367 li
475.47 800.308 li
475.578 790.082 li
459.286 789.909 li
459.378 781.219 li
463.113 781.259 li
463.288 764.76 li
446.789 764.585 li
446.669 775.931 li
442.934 775.891 li
442.758 792.39 li
459.051 792.563 li
458.904 806.406 li
471.967 806.545 li
471.859 816.771 li
482.974 816.889 li
482.843 829.182 li
499.342 829.357 li
cp
f
674.091 750.895 mo
673.916 767.394 li
685.851 767.521 li
685.812 771.194 li
700.622 771.352 li
700.587 774.657 li
717.086 774.832 li
717.261 758.333 li
702.451 758.176 li
702.486 754.87 li
690.551 754.744 li
690.59 751.07 li
674.091 750.895 li
cp
f
1057.96 669.392 mo
1041.46 669.217 li
1041.28 685.716 li
1057.78 685.891 li
1057.96 669.392 li
cp
f
837.175 728.496 mo
820.676 728.321 li
820.501 744.82 li
837 744.995 li
837.175 728.496 li
cp
f
1168.15 655.273 mo
1151.65 655.099 li
1151.48 671.598 li
1167.98 671.772 li
1168.15 655.273 li
cp
f
1204.63 884.279 mo
1221.12 884.454 li
1221.3 867.955 li
1204.8 867.78 li
1204.63 884.279 li
cp
f
2174.98 849.923 mo
2178.42 849.959 li
2178.55 837.266 li
2181.24 837.295 li
2181.25 837.076 li
2186.14 837.128 li
2186.31 820.629 li
2169.81 820.454 li
2169.81 820.672 li
2164.92 820.62 li
2164.78 833.313 li
2162.09 833.285 li
2161.95 846.683 li
2158.52 846.646 li
2158.34 863.146 li
2174.84 863.32 li
2174.98 849.923 li
cp
f
2518.74 866.009 mo
2535.24 866.184 li
2535.42 849.685 li
2518.92 849.51 li
2518.74 866.009 li
cp
f
1634.84 803.923 mo
1651.34 804.099 li
1651.52 787.6 li
1635.02 787.425 li
1634.84 803.923 li
cp
f
2941.23 761.656 mo
2924.73 761.481 li
2924.55 777.98 li
2941.05 778.155 li
2941.23 761.656 li
cp
f
2186.35 737.185 mo
2202.85 737.36 li
2203.02 720.861 li
2186.52 720.686 li
2186.35 737.185 li
cp
f
1779.95 762.112 mo
1785.02 762.166 li
1785.19 745.667 li
1780.12 745.613 li
1768.7 745.492 li
1763.63 745.438 li
1763.45 761.937 li
1768.52 761.991 li
1779.95 762.112 li
cp
f
1622.54 661.964 mo
1606.04 661.789 li
1605.87 678.288 li
1622.37 678.463 li
1622.54 661.964 li
cp
f
1523.89 756.128 mo
1507.39 755.953 li
1507.22 772.452 li
1523.72 772.627 li
1523.89 756.128 li
cp
f
1390.06 745.139 mo
1373.56 744.964 li
1373.39 761.463 li
1389.88 761.639 li
1390.06 745.139 li
cp
f
809.985 779.305 mo
826.484 779.48 li
826.659 762.981 li
810.16 762.806 li
809.985 779.305 li
cp
f
641.633 810.023 mo
642.486 810.032 li
642.502 808.531 li
646.41 808.573 li
646.488 801.235 li
651.419 801.287 li
651.595 784.788 li
635.096 784.613 li
635.018 791.951 li
630.086 791.898 li
630.07 793.4 li
626.163 793.358 li
626.162 793.366 li
625.309 793.357 li
625.134 809.856 li
641.633 810.031 li
641.633 810.023 li
cp
f
646.216 714.94 mo
646.185 717.847 li
637.525 717.755 li
637.351 734.254 li
653.85 734.429 li
653.88 731.551 li
655.778 731.571 li
655.769 732.429 li
672.268 732.604 li
672.443 716.105 li
662.776 716.002 li
662.785 715.145 li
662.714 715.144 li
662.715 715.116 li
646.216 714.94 li
cp
f
517.877 709.297 mo
503.383 709.144 li
503.208 725.643 li
519.707 725.818 li
519.806 716.501 li
534.3 716.655 li
534.476 700.156 li
517.976 699.98 li
517.877 709.297 li
cp
f
1661.3 800.617 mo
1669.3 800.702 li
1669.2 810.54 li
1670.61 810.556 li
1670.44 826.772 li
1686.94 826.947 li
1687.12 810.448 li
1685.7 810.433 li
1685.87 794.216 li
1677.87 794.131 li
1677.97 784.293 li
1663.26 784.137 li
1663.4 770.555 li
1646.9 770.38 li
1646.73 786.879 li
1661.44 787.034 li
1661.3 800.617 li
cp
f
2518.34 801.411 mo
2518.51 784.912 li
2502.01 784.737 li
2501.97 788.486 li
2491.22 788.372 li
2491.04 804.871 li
2507.32 805.044 li
2507.16 819.66 li
2523.66 819.835 li
2523.83 803.336 li
2507.56 803.163 li
2507.58 801.297 li
2518.34 801.411 li
cp
f
3132.71 944.262 mo
3132.75 940.486 li
3134.87 940.509 li
3134.83 944.607 li
3124.4 944.496 li
3124.4 944.174 li
3132.71 944.262 li
cp
3144.21 974.885 mo
3144.19 976.876 li
3131.66 976.743 li
3131.55 986.481 li
3120.1 986.359 li
3120.15 981.833 li
3126.74 981.902 li
3126.83 973.747 li
3133.45 973.817 li
3133.44 974.771 li
3144.21 974.885 li
cp
3135.31 953.893 mo
3136.06 953.9 li
3136.01 958.056 li
3137.61 958.072 li
3137.6 958.313 li
3135.26 958.289 li
3135.31 953.893 li
cp
3118.88 947.325 mo
3116.23 947.297 li
3116.24 945.69 li
3118.89 945.719 li
3118.88 947.325 li
cp
3116.56 997.067 mo
3116.01 997.062 li
3115.99 999.212 li
3114.02 999.19 li
3114.09 992.318 li
3116.61 992.345 li
3116.56 997.067 li
cp
3108.03 931.86 mo
3105.87 931.837 li
3105.88 930.436 li
3106.64 930.443 li
3106.7 924.6 li
3116.97 924.708 li
3117 921.908 li
3118.77 921.928 li
3118.71 927.612 li
3116.38 927.588 li
3116.37 929.19 li
3108.06 929.103 li
3108.03 931.86 li
cp
3104.37 1010.9 mo
3102.19 1010.88 li
3102.15 1010.88 3102.11 1010.87 3102.08 1010.87 cv
3102.11 1008.06 li
3102.56 1008.06 li
3102.58 1006.75 li
3104.42 1006.77 li
3104.37 1010.9 li
cp
3099.71 948.916 mo
3086.1 948.771 li
3086.16 943.027 li
3079.6 942.957 li
3079.74 930.275 li
3084.41 930.325 li
3084.27 942.779 li
3093.77 942.881 li
3093.71 948.209 li
3099.72 948.273 li
3099.71 948.916 li
cp
3087.66 988.517 mo
3086.18 988.501 li
3086.21 985.359 li
3076.49 985.257 li
3076.63 971.741 li
3076.31 971.737 li
3076.38 965.272 li
3060.39 965.104 li
3060.41 963.328 li
3060.78 963.332 li
3060.77 964.284 li
3077.27 964.459 li
3077.32 959.435 li
3082.23 959.486 li
3082.19 963.853 li
3081.43 963.844 li
3081.4 966.412 li
3079.19 966.389 li
3079.01 982.888 li
3081.11 982.91 li
3081.11 983.113 li
3087.71 983.184 li
3087.66 988.517 li
cp
3069.67 989.796 mo
3068.79 989.787 li
3068.66 1001.56 li
3065.29 1001.53 li
3065.36 995.164 li
3062.66 995.135 li
3062.72 989.06 li
3063.87 989.071 li
3063.88 988.106 li
3069.68 988.168 li
3069.67 989.796 li
cp
3059.1 920.219 mo
3059.59 920.225 li
3059.48 930.521 li
3063.23 930.561 li
3063.22 931.541 li
3058.98 931.495 li
3059.1 920.219 li
cp
3057.6 943.776 mo
3055.77 943.757 li
3055.85 936.275 li
3057.68 936.295 li
3057.6 943.776 li
cp
3042.98 999.231 mo
3040.95 999.21 li
3040.98 996.578 li
3026.88 996.429 li
3026.9 994.694 li
3027.52 994.701 li
3027.58 988.878 li
3031.63 988.921 li
3031.66 986.627 li
3033.73 986.649 li
3033.65 994.065 li
3035.61 994.086 li
3035.59 995.51 li
3043.02 995.589 li
3042.98 999.231 li
cp
3012.26 957.99 mo
3012.27 957.656 li
3015.58 957.691 li
3015.75 941.854 li
3027.76 941.981 li
3027.94 925.482 li
3022.37 925.424 li
3022.42 920.346 li
3037.47 920.506 li
3037.49 918.789 li
3041.7 918.834 li
3041.76 912.726 li
3045.07 912.761 li
3045.13 907.131 li
3056.46 907.252 li
3056.33 919.779 li
3042.61 919.634 li
3042.53 926.78 li
3028.16 926.628 li
3027.99 943.127 li
3039.27 943.247 li
3039.24 946.592 li
3042.04 946.621 li
3041.98 952.582 li
3031.98 952.476 li
3031.88 962.099 li
3024.09 962.016 li
3024.13 958.116 li
3012.26 957.99 li
cp
3023.54 1010.53 mo
3022.43 1010.57 3021.32 1010.61 3020.21 1010.65 cv
3020.22 1009.27 li
3023.56 1009.31 li
3023.54 1010.53 li
cp
3015.27 975.763 mo
3010.27 975.71 li
3010.27 975.338 li
3013.57 975.373 li
3013.58 974.645 li
3015.29 974.662 li
3015.27 975.763 li
cp
3008.53 929.417 mo
3011.4 929.447 li
3011.36 933.244 li
3008.49 933.214 li
3008.53 929.417 li
cp
3003.69 892.581 mo
2994.73 892.485 li
2994.69 896.182 li
2993.96 896.174 li
2993.82 910.06 li
2986.56 909.982 li
2986.52 913.387 li
2983.06 913.35 li
2983.07 912.303 li
2977.56 912.244 li
2977.59 910.008 li
2971.43 909.942 li
2971.56 898.413 li
2977.22 898.474 li
2977.11 908.699 li
2993.61 908.874 li
2993.79 892.375 li
2981.48 892.244 li
2981.55 885.586 li
2985.4 885.627 li
2985.5 876.982 li
2990.45 877.035 li
2990.53 869.5 li
2994.87 869.546 li
2994.74 881.899 li
3010.03 882.062 li
3009.96 888.974 li
3003.73 888.907 li
3003.69 892.581 li
cp
2999.12 953.315 mo
2995.81 953.28 li
2995.74 960.183 li
2993.93 960.163 li
2993.97 956.063 li
2987.68 955.997 li
2987.69 954.724 li
2979.85 954.641 li
2979.88 951.396 li
2991.49 951.52 li
2991.57 944.106 li
2997.15 944.166 li
2997.1 949.594 li
2999.16 949.615 li
2999.12 953.315 li
cp
2988.21 985.995 mo
2982.46 985.934 li
2982.46 985.616 li
2988.21 985.677 li
2988.21 985.995 li
cp
2975.01 949.319 mo
2963.4 949.196 li
2963.33 956.564 li
2961.89 956.55 li
2961.72 973.049 li
2962.19 973.054 li
2962.18 973.727 li
2964.12 973.747 li
2964.12 974.193 li
2960.58 974.156 li
2960.71 961.388 li
2958.38 961.362 li
2958.38 960.516 li
2960.72 960.541 li
2960.85 947.926 li
2972.13 948.045 li
2972.14 946.527 li
2975.04 946.559 li
2975.01 949.319 li
cp
2956.09 913.66 mo
2961.05 913.712 li
2961 918.083 li
2956.04 918.03 li
2956.09 913.66 li
cp
2953.32 985.616 mo
2952.41 985.606 li
2952.43 983.802 li
2949.46 983.771 li
2949.5 979.91 li
2934.92 979.756 li
2934.99 973.282 li
2941.75 973.354 li
2941.71 976.511 li
2944.05 976.536 li
2944.04 977.711 li
2953.4 977.811 li
2953.32 985.616 li
cp
2931.03 950.837 mo
2929.32 950.819 li
2929.3 952.467 li
2926.71 952.439 li
2926.77 947.252 li
2923.56 947.218 li
2923.63 940.271 li
2932.71 940.367 li
2932.88 923.868 li
2931.26 923.851 li
2931.37 914.107 li
2932.77 914.122 li
2932.84 907.925 li
2939.65 907.997 li
2939.56 916.268 li
2933.31 916.201 li
2933.13 932.7 li
2939.13 932.764 li
2939.13 933.11 li
2940.52 933.125 li
2940.42 942.516 li
2931.12 942.417 li
2931.03 950.837 li
cp
2944.57 898.254 mo
2951.57 898.329 li
2951.51 903.651 li
2944.52 903.577 li
2944.57 898.254 li
cp
2971.07 928.677 mo
2978.07 928.751 li
2978.06 929.798 li
2981.54 929.835 li
2981.54 930.126 li
2971.05 930.015 li
2971.07 928.677 li
cp
3063.26 898.849 mo
3069.75 898.918 li
3069.71 902.527 li
3086.21 902.703 li
3086.37 887.663 li
3087.34 887.673 li
3087.18 902.993 li
3071.26 902.824 li
3071.25 903.848 li
3063.21 903.762 li
3063.26 898.849 li
cp
3087.75 924.23 mo
3090.2 924.256 li
3090.19 925.772 li
3089.43 925.765 li
3089.43 926.334 li
3087.73 926.315 li
3087.75 924.23 li
cp
2918.35 982.036 mo
2916.31 981.454 2914.25 980.848 2912.13 980.341 cv
2912.19 974.709 li
2912.67 974.714 li
2912.68 974.276 li
2918.43 974.338 li
2918.35 982.036 li
cp
2896.23 969.579 mo
2890.47 969.518 li
2890.49 967.776 li
2896.06 967.836 li
2896.11 963.748 li
2896.29 963.75 li
2896.23 969.579 li
cp
2879.18 992.392 mo
2877.23 991.495 2875.43 990.427 2873.79 989.067 cv
2871.51 987.192 2868.81 985.579 2865.62 984.465 cv
2865.62 984.376 li
2865.36 984.373 li
2861.91 983.21 2857.91 982.632 2853.25 982.953 cv
2850.55 983.139 2847.84 983.265 2845.12 983.353 cv
2845.15 980.103 li
2841.7 980.065 li
2841.71 978.989 li
2839.17 978.962 li
2839.2 975.673 li
2836.66 975.646 li
2836.67 974.561 li
2828.22 974.471 li
2828.22 974.06 li
2843.95 974.227 li
2843.91 978.047 li
2860.41 978.222 li
2860.47 972.732 li
2860.79 972.736 li
2860.69 982.517 li
2867.6 982.59 li
2867.58 983.543 li
2867.71 983.545 li
2867.7 984.312 li
2875.61 984.396 li
2875.56 988.962 li
2879.21 989.001 li
2879.18 992.392 li
cp
2830.43 957.525 mo
2831.67 957.538 li
2831.67 957.595 li
2830.43 957.582 li
2830.43 957.525 li
cp
2845.56 958.16 mo
2845.52 961.563 li
2844.48 961.552 li
2844.52 958.149 li
2845.56 958.16 li
cp
2840.12 920.312 mo
2845.5 920.369 li
2845.47 922.624 li
2840.09 922.566 li
2840.12 920.312 li
cp
2857.46 950.381 mo
2857.4 956.199 li
2852.92 956.152 li
2852.97 951.189 li
2853.64 951.197 li
2853.65 950.34 li
2857.46 950.381 li
cp
2852.71 928.096 mo
2854.81 928.117 li
2854.75 933.171 li
2852.65 933.149 li
2852.71 928.096 li
cp
2862.01 919.375 mo
2865.28 919.41 li
2865.23 924.16 li
2861.96 924.126 li
2862.01 919.375 li
cp
2803.37 964.472 mo
2802.82 964.466 li
2802.82 964.31 li
2803.37 964.316 li
2803.37 964.472 li
cp
2787.8 968.607 mo
2787.46 968.604 li
2787.4 974.245 li
2783.64 974.205 li
2783.79 960.235 li
2768.53 960.073 li
2768.69 944.824 li
2758.41 944.715 li
2758.49 936.788 li
2762.4 936.829 li
2762.55 922.549 li
2766.83 922.594 li
2766.78 927.177 li
2777.21 927.287 li
2777.16 932.042 li
2775.69 932.027 li
2775.51 948.526 li
2778.7 948.56 li
2778.68 950.041 li
2785.41 950.113 li
2785.28 962.702 li
2786.33 962.713 li
2786.31 965.315 li
2787.84 965.331 li
2787.8 968.607 li
cp
2767.26 963.047 mo
2764.7 963.02 li
2764.71 961.283 li
2767.28 961.311 li
2767.26 963.047 li
cp
2769.6 902.838 mo
2769.57 906.063 li
2772.24 906.091 li
2772.24 906.15 li
2762.4 906.046 li
2762.54 893.66 li
2763.49 893.67 li
2763.39 902.772 li
2769.6 902.838 li
cp
2756.35 868.089 mo
2764.67 868.177 li
2764.58 876.803 li
2776.6 876.93 li
2776.59 877.551 li
2770.11 877.482 li
2770.01 886.342 li
2764.19 886.279 li
2764.29 877.178 li
2756.25 877.092 li
2756.35 868.089 li
cp
2755.94 918.173 mo
2744.48 918.051 li
2744.45 920.874 li
2740.83 920.836 li
2740.71 932.673 li
2738.54 932.649 li
2738.68 920.121 li
2723.41 919.959 li
2723.43 918.332 li
2726.62 918.366 li
2726.73 908.293 li
2734.6 908.376 li
2734.78 891.877 li
2731.28 891.84 li
2731.3 889.782 li
2715.42 889.613 li
2715.45 886.764 li
2731.23 886.932 li
2731.4 870.433 li
2725.47 870.37 li
2725.49 868.807 li
2727.02 868.823 li
2727.19 852.324 li
2721.78 852.267 li
2721.83 847.939 li
2732.54 848.054 li
2732.41 860.218 li
2734.47 860.239 li
2734.47 860.692 li
2749.28 860.85 li
2749.23 865.686 li
2739.88 865.587 li
2739.7 882.086 li
2747.73 882.171 li
2747.64 890.969 li
2746.06 890.952 li
2745.97 899.333 li
2744.27 899.315 li
2744.1 915.814 li
2755.97 915.94 li
2755.94 918.173 li
cp
2744.94 974.213 mo
2743.2 974.194 li
2743.21 972.993 li
2744.96 973.012 li
2744.94 974.213 li
cp
2733.37 964.01 mo
2729.58 963.969 li
2729.6 962.813 li
2731.32 962.83 li
2731.31 963.976 li
2733.37 963.998 li
2733.37 964.01 li
cp
2730.74 981.898 mo
2730.17 982.031 2729.55 982.222 2728.87 982.474 cv
2728.89 980.463 li
2730.76 980.482 li
2730.74 981.898 li
cp
2724.28 951.749 mo
2710.13 951.6 li
2710.11 954.157 li
2709.99 954.155 li
2710.06 948.098 li
2706.97 948.064 li
2706.97 947.405 li
2712.99 947.469 li
2712.96 950.217 li
2724.29 950.338 li
2724.28 951.749 li
cp
2705.04 914.038 mo
2704.99 914.037 li
2705 913.115 li
2703.75 913.102 li
2703.82 906.004 li
2705.12 906.018 li
2705.04 914.038 li
cp
2716.19 930.657 mo
2716.18 930.885 li
2713.84 930.86 li
2713.84 930.632 li
2716.19 930.657 li
cp
2709.72 893.298 mo
2714.76 893.352 li
2714.68 901.279 li
2709.63 901.226 li
2709.72 893.298 li
cp
2697.34 930.387 mo
2690.64 930.315 li
2690.46 946.814 li
2690.48 946.814 li
2690.44 950.47 li
2686.68 950.43 li
2686.85 934.341 li
2675.34 934.219 li
2675.35 933.623 li
2672.93 933.598 li
2672.99 928.256 li
2687.16 928.406 li
2687.31 914.982 li
2688.48 914.995 li
2688.33 929.438 li
2697.35 929.535 li
2697.34 930.387 li
cp
2693.47 956.564 mo
2690.93 956.537 li
2690.98 952.031 li
2693.52 952.058 li
2693.47 956.564 li
cp
2692.33 974.628 mo
2691.14 974.413 2689.93 974.194 2688.7 973.969 cv
2688.15 974.862 2687.61 975.73 2687.07 976.598 cv
2687.13 971.752 li
2678.58 971.661 li
2678.63 966.846 li
2688.97 966.955 li
2688.9 973.017 li
2692.35 973.054 li
2692.33 974.628 li
cp
2674.41 958.994 mo
2673.18 958.98 li
2673.2 956.588 li
2672.07 956.576 li
2672.13 950.686 li
2674.5 950.711 li
2674.41 958.994 li
cp
2670.69 925.507 mo
2661.88 925.413 li
2661.9 923.287 li
2662.96 923.298 li
2662.94 924.627 li
2670.7 924.709 li
2670.69 925.507 li
cp
2665.12 983.708 mo
2664.35 983.529 2663.58 983.351 2662.8 983.171 cv
2662.85 978.487 li
2665.18 978.512 li
2665.12 983.708 li
cp
2656.35 941.278 mo
2652.38 941.236 li
2652.39 939.765 li
2656.37 939.807 li
2656.35 941.278 li
cp
2653.29 972.646 mo
2649.46 972.606 li
2649.48 970.519 li
2652.52 970.551 li
2652.51 972.22 li
2653.3 972.228 li
2653.29 972.646 li
cp
2631.15 973.342 mo
2630.07 972.832 2629.01 972.297 2627.97 971.739 cv
2627.98 970.75 li
2631.18 970.784 li
2631.15 973.342 li
cp
2610.92 961.603 mo
2610.48 961.598 li
2610.55 954.889 li
2608.84 954.871 li
2608.88 951.307 li
2611.03 951.329 li
2610.92 961.603 li
cp
2600.82 926.655 mo
2601.59 926.663 li
2601.72 914.228 li
2609.67 914.313 li
2609.51 929.21 li
2600.8 929.117 li
2600.82 926.655 li
cp
2593.93 966.102 mo
2592.95 965.674 2591.98 965.249 2590.99 964.828 cv
2591.01 963.566 li
2593.96 963.598 li
2593.93 966.102 li
cp
2570.84 950.565 mo
2566.42 950.519 li
2566.46 946.363 li
2570.88 946.41 li
2570.84 950.565 li
cp
2560.1 974.132 mo
2559.76 974 2559.43 973.87 2559.09 973.738 cv
2560.36 973.752 li
2560.28 973.88 2560.19 974.004 2560.1 974.132 cv
cp
2538.77 925.763 mo
2538.71 931.308 li
2537.14 931.291 li
2537.19 927.189 li
2520.69 927.015 li
2520.62 933.018 li
2514.44 932.952 li
2514.49 928.442 li
2501.33 928.303 li
2501.35 926.692 li
2497.82 926.655 li
2497.84 924.487 li
2512.33 924.641 li
2512.35 923.059 li
2515.87 923.096 li
2515.9 920.294 li
2519.01 920.327 li
2518.99 922.313 li
2535.49 922.488 li
2535.55 917.262 li
2539.79 917.307 li
2539.76 920.05 li
2551.67 920.177 li
2551.67 920.298 li
2560.24 920.389 li
2560.18 926.285 li
2555.27 926.233 li
2555.27 925.938 li
2538.77 925.763 li
cp
2532.19 953.421 mo
2517.82 953.268 li
2517.77 958.092 li
2510.23 958.013 li
2510.21 959.983 li
2501.8 959.895 li
2501.94 947.245 li
2507.93 947.309 li
2507.91 949.384 li
2514.63 949.455 li
2514.6 952.972 li
2531.1 953.146 li
2531.1 952.84 li
2532.2 952.852 li
2532.19 953.421 li
cp
2495.88 920.396 mo
2484.42 920.274 li
2484.52 911.116 li
2490.04 911.175 li
2490.07 909.185 li
2496 909.248 li
2495.88 920.396 li
cp
2481.35 923.397 mo
2472.63 923.305 li
2472.51 934.559 li
2471.9 934.553 li
2471.92 933.092 li
2470.07 933.072 li
2470.17 924.048 li
2453.67 923.873 li
2453.67 923.963 li
2450.69 923.931 li
2450.78 915.056 li
2465.76 915.215 li
2465.88 904.017 li
2469.27 904.053 li
2469.45 887.554 li
2454.29 887.393 li
2454.34 883.222 li
2454.12 883.219 li
2454.24 871.978 li
2463.92 872.081 li
2464.06 859.371 li
2467.73 859.41 li
2467.57 874.67 li
2476.59 874.766 li
2476.48 885.78 li
2489.79 885.922 li
2489.77 888.608 li
2486.2 888.57 li
2486.16 892.134 li
2470.99 891.973 li
2470.84 906.508 li
2468.07 906.479 li
2467.89 922.978 li
2481.36 923.12 li
2481.35 923.397 li
cp
2464.84 964.519 mo
2464.71 964.502 2464.57 964.484 2464.43 964.467 cv
2464.45 963.146 li
2464.85 963.149 li
2464.84 964.519 li
cp
2456.92 950.523 mo
2454.63 950.499 li
2454.66 947.901 li
2455.26 947.907 li
2455.24 949.416 li
2456.93 949.435 li
2456.92 950.523 li
cp
2450.33 931.354 mo
2443.67 931.283 li
2443.6 938.52 li
2442.28 938.506 li
2442.29 937.139 li
2425.79 936.964 li
2425.62 953.463 li
2436.25 953.576 li
2436.24 954.942 li
2438.08 954.962 li
2438.08 955.365 li
2439.39 955.379 li
2439.33 960.492 li
2436.97 960.093 2434.6 959.706 2432.24 959.329 cv
2432.25 957.628 li
2419.84 957.496 li
2419.91 950.393 li
2422.53 950.42 li
2422.7 933.921 li
2422.39 933.917 li
2422.46 927.376 li
2421.36 927.364 li
2421.38 925.171 li
2422.48 925.183 li
2422.42 930.72 li
2438.92 930.895 li
2438.96 926.92 li
2450.37 927.041 li
2450.33 931.354 li
cp
2414.19 977.456 mo
2414.21 975.861 li
2416.51 975.886 li
2415.85 976.507 2415.08 977.025 2414.19 977.456 cv
cp
2408.8 915.239 mo
2408.81 914.468 li
2415.99 914.544 li
2416.09 905.045 li
2427.79 905.169 li
2427.91 894.172 li
2437.6 894.274 li
2437.65 889.734 li
2437.77 889.735 li
2437.66 899.545 li
2449.43 899.67 li
2449.31 910.528 li
2436.54 910.393 li
2436.56 908.831 li
2420.06 908.656 li
2419.92 921.035 li
2413.35 920.966 li
2413.41 915.289 li
2408.8 915.239 li
cp
2404.88 943.493 mo
2403.49 943.479 li
2403.33 957.609 li
2402.25 957.599 li
2402.14 967.463 li
2397.31 967.412 li
2397.35 963.514 li
2391.1 963.448 li
2391.16 957.417 li
2400.62 957.517 li
2400.79 941.018 li
2394.89 940.955 li
2394.92 937.574 li
2398.87 937.616 li
2398.93 931.636 li
2402.11 931.67 li
2402.02 939.96 li
2404.91 939.99 li
2404.88 943.493 li
cp
2385.81 912.711 mo
2388.66 912.741 li
2388.63 915.286 li
2392.3 915.325 li
2392.29 916.635 li
2396.89 916.684 li
2396.85 921.094 li
2391.69 921.039 li
2391.74 915.719 li
2385.78 915.655 li
2385.81 912.711 li
cp
2384.18 951.32 mo
2374.18 951.215 li
2374.18 951.08 li
2369.23 951.027 li
2369.26 948.64 li
2381.82 948.772 li
2381.87 943.602 li
2384.26 943.628 li
2384.18 951.32 li
cp
2370.82 930.794 mo
2371.55 930.802 li
2371.7 917.133 li
2375.23 917.171 li
2375.17 923.173 li
2371.81 923.138 li
2371.72 932.165 li
2370.81 932.155 li
2370.82 930.794 li
cp
2393.02 874.462 mo
2393.09 868.026 li
2398.85 868.087 li
2398.78 874.523 li
2393.02 874.462 li
cp
2503.71 898.826 mo
2504.24 898.832 li
2504.19 903.669 li
2503.66 903.663 li
2503.71 898.826 li
cp
2520.67 905.683 mo
2523.84 905.717 li
2523.83 905.863 li
2520.67 905.83 li
2520.67 905.683 li
cp
2550.68 899.278 mo
2553.64 899.31 li
2553.81 882.834 li
2563.96 882.941 li
2564.09 870.021 li
2567.02 870.053 li
2566.98 874.428 li
2566.81 874.426 li
2566.63 890.533 li
2556.01 890.421 li
2555.87 903.72 li
2550.63 903.664 li
2550.68 899.278 li
cp
2365.36 944.417 mo
2361.02 944.371 li
2361.03 943.118 li
2365.38 943.164 li
2365.36 944.417 li
cp
2350.87 915.276 mo
2345.11 915.215 li
2345.13 914.118 li
2350.88 914.18 li
2350.87 915.276 li
cp
2344.77 931.897 mo
2343.45 931.884 li
2343.48 929.209 li
2337.85 929.149 li
2337.89 924.976 li
2344.06 925.041 li
2343.99 931.704 li
2344.78 931.713 li
2344.77 931.897 li
cp
2344.37 957.817 mo
2331.05 957.676 li
2331.04 958.041 li
2330.91 958.04 li
2330.92 957.617 li
2338.78 957.701 li
2338.81 955.184 li
2344.4 955.243 li
2344.37 957.817 li
cp
2328.53 922.981 mo
2327.01 922.966 li
2327.02 921.496 li
2328.54 921.512 li
2328.53 922.981 li
cp
2322.92 941.031 mo
2322.46 941.026 li
2322.38 948.262 li
2321.39 948.252 li
2321.42 944.677 li
2314.84 944.606 li
2314.94 934.709 li
2317.84 934.739 li
2317.87 931.669 li
2321.32 931.705 li
2321.24 939.405 li
2322.94 939.424 li
2322.92 941.031 li
cp
2299.25 907.582 mo
2291.83 907.503 li
2291.94 897.73 li
2284.9 897.656 li
2284.91 896.754 li
2283.65 896.74 li
2283.66 896.034 li
2290.72 896.109 li
2290.72 895.988 li
2298.69 896.073 li
2298.67 898.405 li
2315.17 898.58 li
2315.3 886.407 li
2319.62 886.453 li
2319.79 870.652 li
2331.11 870.772 li
2331.01 879.732 li
2324.8 879.666 li
2324.62 896.165 li
2341.12 896.34 li
2341.24 885.425 li
2343.39 885.447 li
2343.3 893.871 li
2342.42 893.861 li
2342.26 908.521 li
2335.88 908.454 li
2335.92 905.089 li
2319.42 904.914 li
2319.39 907.526 li
2315.98 907.49 li
2315.99 907.037 li
2315.76 907.035 li
2315.8 903.209 li
2299.3 903.033 li
2299.25 907.582 li
cp
2294.91 932.344 mo
2293.29 932.326 li
2293.31 930.236 li
2291.54 930.218 li
2291.61 924.002 li
2295 924.038 li
2294.91 932.344 li
cp
2292.48 966.607 mo
2290.62 966.803 2288.76 967.04 2286.91 967.303 cv
2286.93 965.477 li
2292.49 965.535 li
2292.48 966.607 li
cp
2280.52 947.474 mo
2271.49 947.378 li
2271.36 959.831 li
2270.72 959.824 li
2270.88 945.5 li
2266.96 945.459 li
2266.97 944.201 li
2276.66 944.305 li
2276.64 946.561 li
2280.53 946.602 li
2280.52 947.474 li
cp
2270.4 968.567 mo
2269.39 968.557 li
2269.38 970.104 li
2267.45 970.399 2265.5 970.665 2263.53 970.904 cv
2262.03 970.889 li
2262.05 969.068 li
2265.66 969.106 li
2265.67 968.137 li
2269.68 968.179 li
2269.75 961.989 li
2270.47 961.997 li
2270.4 968.567 li
cp
2259.08 943.03 mo
2264.63 943.09 li
2264.62 943.772 li
2259.07 943.714 li
2259.08 943.03 li
cp
2258.82 912.279 mo
2255.72 912.246 li
2255.73 911.8 li
2254.3 911.784 li
2254.35 907.126 li
2267.76 907.268 li
2267.79 904.05 li
2268.33 904.056 li
2268.26 910.197 li
2258.84 910.098 li
2258.82 912.279 li
cp
2251 937.225 mo
2248.44 937.198 li
2248.53 928.225 li
2251.1 928.252 li
2251 937.225 li
cp
2243.64 957.793 mo
2233.27 957.683 li
2232.49 957.455 2231.72 957.228 2230.94 956.996 cv
2233.99 957.029 li
2234.08 948.357 li
2236.92 948.388 li
2236.87 953.576 li
2241.72 953.628 li
2241.68 957.173 li
2243.65 957.194 li
2243.64 957.793 li
cp
2227.98 940.464 mo
2218.67 940.365 li
2218.76 931.47 li
2210.02 931.377 li
2210.08 926.04 li
2223.97 926.188 li
2224.12 912.896 li
2226.46 912.921 li
2226.42 917.035 li
2237.02 917.147 li
2236.95 923.4 li
2232.08 923.35 li
2232 930.667 li
2228.08 930.626 li
2227.98 940.464 li
cp
2225.15 957.543 mo
2225.15 956.936 li
2225.76 956.941 li
2225.56 957.142 2225.35 957.345 2225.15 957.543 cv
cp
2212.66 969.114 mo
2211.84 968.906 2211.03 968.673 2210.21 968.453 cv
2212.67 968.479 li
2212.66 969.114 li
cp
2236.7 896.574 mo
2237.96 896.588 li
2237.92 900.656 li
2236.65 900.643 li
2236.7 896.574 li
cp
2275.3 914.055 mo
2291.58 914.228 li
2291.57 915.33 li
2275.29 915.157 li
2275.3 914.055 li
cp
2205 909.06 mo
2204.18 909.051 li
2204.06 920.82 li
2200.83 920.785 li
2200.86 917.571 li
2203.12 917.595 li
2203.23 907.646 li
2205.02 907.665 li
2205 909.06 li
cp
2202.32 893.528 mo
2202.48 893.53 li
2202.4 901.086 li
2202.24 901.085 li
2202.32 893.528 li
cp
2191.21 962.259 mo
2186.46 960.478 2181.73 958.586 2176.97 956.634 cv
2191.27 956.785 li
2191.21 962.259 li
cp
2175.87 956.181 mo
2175.78 956.146 2175.7 956.11 2175.61 956.075 cv
2175.62 955.354 li
2175.88 955.356 li
2175.87 956.181 li
cp
2168.71 924.431 mo
2163.82 924.379 li
2163.74 932.053 li
2160.03 932.013 li
2160.05 929.566 li
2161.21 929.578 li
2161.27 924.16 li
2161.38 924.162 li
2161.45 916.902 li
2161.6 916.904 li
2161.58 918.831 li
2176.87 918.994 li
2176.81 924.012 li
2179.46 924.039 li
2179.46 924.326 li
2168.71 924.213 li
2168.71 924.431 li
cp
2163.64 888.162 mo
2170.5 888.235 li
2170.47 891.249 li
2170.71 891.252 li
2170.68 893.768 li
2163.58 893.692 li
2163.64 888.162 li
cp
2171.74 895.57 mo
2184.9 895.71 li
2184.89 896.377 li
2185.79 896.387 li
2185.77 898.206 li
2183.54 898.182 li
2183.44 907.581 li
2178.2 907.525 li
2178.25 902.508 li
2171.67 902.438 li
2171.74 895.57 li
cp
2155.19 900.335 mo
2148.79 900.268 li
2148.71 907.526 li
2145.05 907.487 li
2145.01 911.692 li
2140.64 911.646 li
2140.78 898.501 li
2140.35 898.497 li
2140.39 894.42 li
2135.86 894.372 li
2135.87 893.571 li
2142.37 893.641 li
2142.34 896.996 li
2147.05 897.046 li
2147.04 897.442 li
2155.22 897.529 li
2155.19 900.335 li
cp
2154.41 960.134 mo
2146.76 960.052 li
2146.7 965.725 li
2139.27 965.646 li
2139.3 963.167 li
2137.83 963.151 li
2137.87 960.04 li
2144.02 960.104 li
2144.19 943.605 li
2132.49 943.481 li
2132.52 940.797 li
2136.37 940.838 li
2136.42 936.468 li
2137.01 936.475 li
2137 937.465 li
2143.47 937.533 li
2143.44 940.572 li
2153.48 940.679 li
2153.4 948.443 li
2154.54 948.456 li
2154.41 960.134 li
cp
2130.36 924.272 mo
2128.5 924.253 li
2128.6 914.873 li
2133.93 914.93 li
2133.88 919.94 li
2130.41 919.903 li
2130.36 924.272 li
cp
2127.64 948.158 mo
2118.46 948.061 li
2118.36 957.732 li
2117.2 957.72 li
2117.35 943.85 li
2127.69 943.96 li
2127.64 948.158 li
cp
2121.24 972.504 mo
2120.7 972.226 2120.2 971.966 2119.73 971.724 cv
2119.8 964.576 li
2121.32 964.592 li
2121.24 972.504 li
cp
2116 942.892 mo
2109.72 942.825 li
2109.81 933.946 li
2103.59 933.881 li
2103.66 927.323 li
2102.53 927.311 li
2102.61 919.689 li
2086.11 919.515 li
2086.03 927.163 li
2077.55 927.073 li
2077.4 940.801 li
2076.35 940.79 li
2076.27 948.104 li
2075.48 948.096 li
2075.59 937.204 li
2075.22 937.2 li
2075.38 922.888 li
2063.76 922.765 li
2063.76 922.764 li
2077.56 922.91 li
2077.61 918.216 li
2092.3 918.371 li
2092.32 916.584 li
2097 916.634 li
2097.06 910.999 li
2107.46 911.109 li
2107.37 918.799 li
2110.9 918.836 li
2110.84 924.349 li
2110.04 924.341 li
2109.87 940.84 li
2116.02 940.904 li
2116 942.892 li
cp
2103.32 962.982 mo
2096.61 962.911 li
2095.45 961.296 2094.3 959.675 2093.14 958.053 cv
2093.15 957.182 li
2100.7 957.262 li
2100.68 959.229 li
2103.36 959.259 li
2103.32 962.982 li
cp
2052.66 957.407 mo
2050.27 957.382 li
2050.28 956.085 li
2052.68 956.11 li
2052.66 957.407 li
cp
2043.24 943.457 mo
2042.71 943.451 li
2042.77 937.357 li
2043.31 937.362 li
2043.24 943.457 li
cp
2031.7 954.198 mo
2029.75 954.177 li
2029.77 952.899 li
2031.71 952.921 li
2031.7 954.198 li
cp
2015.81 945.554 mo
2012.47 945.518 li
2012.47 945.427 li
2015.81 945.462 li
2015.81 945.554 li
cp
2012.15 887.085 mo
2011.99 887.083 li
2012.01 884.776 li
2012.17 884.778 li
2012.15 887.085 li
cp
2011.29 921.221 mo
2006.18 921.166 li
2006.18 920.968 li
2011.29 921.022 li
2011.29 921.221 li
cp
2006.23 955.4 mo
2001.72 955.353 li
2001.73 954.847 li
2004.05 954.871 li
2004.15 945.509 li
2006.34 945.531 li
2006.23 955.4 li
cp
2004.06 922.389 mo
2003.99 929.006 li
2003.39 928.999 li
2003.46 922.383 li
2004.06 922.389 li
cp
2003.33 880.243 mo
2009.98 880.314 li
2009.94 884.254 li
2003.29 884.184 li
2003.33 880.243 li
cp
1996.42 846.972 mo
1992.54 846.931 li
1992.53 847.161 li
1986.05 847.093 li
1986.15 837.818 li
1969.65 837.644 li
1969.59 842.821 li
1959.8 842.717 li
1959.9 833.844 li
1956.34 833.807 li
1956.37 831.162 li
1968.9 831.295 li
1968.85 836.001 li
1985.35 836.177 li
1985.37 833.82 li
1996.56 833.939 li
1996.42 846.972 li
cp
1996.42 870.812 mo
1986.93 870.711 li
1986.92 871.99 li
1980.49 871.922 li
1980.46 874.726 li
1978.59 874.706 li
1978.66 868.861 li
1977.52 868.85 li
1977.53 868.241 li
1991.27 868.387 li
1991.32 863.649 li
1993.75 863.676 li
1993.71 867.998 li
1996.45 868.027 li
1996.42 870.812 li
cp
1994.13 905.101 mo
1991.11 905.068 li
1991.13 903.116 li
1986.29 903.064 li
1986.3 901.757 li
1994.16 901.841 li
1994.13 905.101 li
cp
1987.66 944.291 mo
1985.02 944.263 li
1985.04 942.001 li
1987.69 942.029 li
1987.66 944.291 li
cp
1984.54 899.782 mo
1984.54 899.16 li
1985.45 899.17 li
1985.44 899.792 li
1984.54 899.782 li
cp
1984.58 920.214 mo
1982.24 920.189 li
1982.21 922.89 li
1978.56 922.851 li
1978.59 919.483 li
1984.59 919.548 li
1984.58 920.214 li
cp
1975.15 941.472 mo
1968.54 941.401 li
1968.49 946.579 li
1968.01 946.574 li
1968.08 939.763 li
1972.04 939.805 li
1972.04 940.208 li
1975.16 940.241 li
1975.15 941.472 li
cp
1964.66 900.873 mo
1964.83 885.426 li
1964.69 885.425 li
1964.69 885.215 li
1965.15 885.22 li
1965.07 892.984 li
1968.11 893.017 li
1968.02 901.323 li
1968.63 901.329 li
1968.62 902.08 li
1967.87 902.072 li
1967.88 900.907 li
1964.66 900.873 li
cp
1967.76 938.7 mo
1963.96 938.66 li
1964 935.013 li
1967.79 935.053 li
1967.76 938.7 li
cp
1950.29 869.762 mo
1944.67 869.701 li
1944.65 870.883 li
1937.97 870.812 li
1937.98 870.254 li
1943.68 870.314 li
1943.76 863.058 li
1947.05 863.093 li
1947.18 850.21 li
1959.45 850.341 li
1959.35 859.213 li
1973.28 859.361 li
1973.22 865.119 li
1966.84 865.051 li
1966.89 860.22 li
1950.39 860.045 li
1950.29 869.762 li
cp
1950.05 926.591 mo
1949.33 926.583 li
1949.36 923.649 li
1950.08 923.657 li
1950.05 926.591 li
cp
1941.96 949.201 mo
1941.96 948.448 li
1949.65 948.53 li
1947.06 949.04 1944.5 949.213 1941.96 949.201 cv
cp
1947.57 928.376 mo
1947.55 930.164 li
1939.97 930.084 li
1939.99 928.296 li
1947.57 928.376 li
cp
1941.59 890.049 mo
1941.62 887.352 li
1947.39 887.413 li
1947.41 886.231 li
1948.18 886.239 li
1948.15 889.125 li
1945.9 889.102 li
1945.89 890.715 li
1942.33 890.678 li
1942.24 898.508 li
1941.67 898.502 li
1941.76 890.051 li
1941.59 890.049 li
cp
1932.93 917.193 mo
1930.98 917.173 li
1931.01 915.102 li
1932.95 915.122 li
1932.93 917.193 li
cp
1924.84 910.25 mo
1921.61 910.216 li
1921.64 908.064 li
1911.63 907.958 li
1911.7 901.68 li
1924.93 901.82 li
1924.84 910.25 li
cp
1923.43 933.22 mo
1920.63 933.189 li
1920.54 940.896 li
1920.34 940.894 li
1920.49 926.705 li
1923.5 926.736 li
1923.43 933.22 li
cp
1911.5 894.129 mo
1909.74 894.109 li
1909.79 889.086 li
1911.56 889.104 li
1911.5 894.129 li
cp
1905.09 912.254 mo
1901.49 912.216 li
1901.49 912.16 li
1894.18 912.083 li
1894.21 909.06 li
1895.12 909.069 li
1895.1 910.455 li
1905.11 910.562 li
1905.09 912.254 li
cp
1897.73 954.318 mo
1896.88 954.31 li
1894.71 953.477 1892.53 952.652 1890.36 951.831 cv
1890.39 948.979 li
1893.66 949.014 li
1893.67 947.641 li
1894.24 947.646 li
1894.22 949.64 li
1897.78 949.678 li
1897.73 954.318 li
cp
1882.76 892.438 mo
1880.98 892.418 li
1881 890.251 li
1881.8 890.26 li
1881.82 888.481 li
1890.12 888.569 li
1890.23 878.173 li
1893.35 878.206 li
1893.42 871.73 li
1894.28 871.739 li
1894.29 870.109 li
1897.92 870.148 li
1898.1 853.742 li
1898.8 853.75 li
1898.71 862.129 li
1900.2 862.146 li
1900.09 873.046 li
1903.14 873.078 li
1903.06 880.921 li
1893.38 880.818 li
1893.29 888.993 li
1882.8 888.882 li
1882.76 892.438 li
cp
1921.19 879.975 mo
1921.13 885.279 li
1919.51 885.262 li
1919.57 879.957 li
1921.19 879.975 li
cp
1916.72 860.576 mo
1921.58 860.628 li
1921.57 861.971 li
1921.09 861.966 li
1921.08 863.473 li
1916.69 863.426 li
1916.72 860.576 li
cp
1877.68 911.754 mo
1874.98 911.725 li
1874.99 911.194 li
1877.69 911.223 li
1877.68 911.754 li
cp
1873.92 945.832 mo
1867.91 943.732 1861.82 941.734 1855.58 939.891 cv
1860.18 939.939 li
1860.17 940.813 li
1860.84 940.82 li
1860.84 941.223 li
1873.97 941.361 li
1873.92 945.832 li
cp
1853.89 915.527 mo
1858.44 915.576 li
1858.38 921.818 li
1859.07 921.826 li
1859.05 923.426 li
1853.8 923.37 li
1853.89 915.527 li
cp
1853.08 898.655 mo
1862.24 898.752 li
1862.23 899.115 li
1853.08 899.019 li
1853.08 898.655 li
cp
1851.96 873.013 mo
1857.08 873.067 li
1857.04 877.142 li
1856.96 877.141 li
1856.91 882.195 li
1851.86 882.142 li
1851.96 873.013 li
cp
1846.92 870.161 mo
1838.54 870.072 li
1838.56 868.675 li
1835.39 868.641 li
1835.39 868.3 li
1818.89 868.125 li
1818.86 870.661 li
1816.48 870.636 li
1816.49 869.923 li
1799.99 869.748 li
1799.83 884.955 li
1789.15 884.842 li
1789.16 883.814 li
1791.27 883.837 li
1791.34 877.343 li
1796.23 877.396 li
1796.35 866.321 li
1797.35 866.331 li
1797.52 849.832 li
1792.05 849.774 li
1792.13 842.321 li
1799.19 842.396 li
1799.31 831.039 li
1804.99 831.099 li
1804.91 838.671 li
1799.49 838.613 li
1799.32 855.112 li
1815.22 855.281 li
1815.1 866.848 li
1831.6 867.023 li
1831.71 856.608 li
1833.18 856.624 li
1833.09 865.438 li
1841.03 865.523 li
1840.98 870.071 li
1846.92 870.134 li
1846.92 870.161 li
cp
1836.42 899.848 mo
1832.41 899.805 li
1832.36 904.029 li
1829.1 903.995 li
1828.93 920.494 li
1836.04 920.569 li
1835.95 928.311 li
1835.89 928.311 li
1835.83 933.948 li
1825.99 933.844 li
1825.99 933.965 li
1825.38 933.958 li
1825.4 932.126 li
1828.71 932.161 li
1828.89 915.662 li
1816.08 915.525 li
1816.15 908.605 li
1824.13 908.689 li
1824.22 899.458 li
1836.42 899.588 li
1836.42 899.848 li
cp
1816.24 887.134 mo
1816.2 890.214 li
1820.56 890.261 li
1820.54 892.15 li
1815.55 892.098 li
1815.57 890.128 li
1805.32 890.019 li
1805.36 886.306 li
1811.97 886.376 li
1811.96 887.088 li
1816.24 887.134 li
cp
1816.12 950.364 mo
1815.59 950.358 li
1815.33 950.272 1815.07 950.187 1814.81 950.101 cv
1814.89 942.547 li
1813.99 942.537 li
1814.03 938.664 li
1797.53 938.488 li
1797.51 940.424 li
1789.16 940.335 li
1789.23 933.69 li
1802.14 933.828 li
1802.3 919.411 li
1812.35 919.518 li
1812.35 919.64 li
1809.04 919.604 li
1808.86 936.104 li
1816.27 936.182 li
1816.12 950.364 li
cp
1787.43 913.665 mo
1788.13 913.673 li
1788.29 899.119 li
1788.73 899.124 li
1788.7 901.338 li
1796.02 901.416 li
1795.93 909.289 li
1799.65 909.328 li
1799.56 917.3 li
1787.39 917.171 li
1787.43 913.665 li
cp
1785.65 933.081 mo
1772.74 932.943 li
1772.56 949.443 li
1774.49 949.464 li
1774.4 958.056 li
1772.39 958.034 li
1772.53 944.773 li
1771.98 944.768 li
1772.1 932.938 li
1759.19 932.8 li
1759.25 926.965 li
1763.61 927.012 li
1763.57 930.874 li
1764.81 930.887 li
1780.07 931.049 li
1781.31 931.063 li
1781.35 927.199 li
1785.71 927.246 li
1785.65 933.081 li
cp
1757.25 901.499 mo
1749.5 901.417 li
1749.5 900.922 li
1756.81 901 li
1756.84 898.786 li
1757.28 898.79 li
1757.25 901.499 li
cp
1755.53 939.979 mo
1747.18 939.89 li
1747.2 937.955 li
1730.93 937.782 li
1730.95 935.276 li
1735.92 935.329 li
1736.1 918.83 li
1732.79 918.795 li
1732.79 918.673 li
1742.84 918.78 li
1742.69 933.197 li
1755.6 933.334 li
1755.53 939.979 li
cp
1747.93 958.563 mo
1746.14 958.543 li
1745.42 958.46 1744.72 958.378 1744.01 958.296 cv
1746.08 958.317 li
1746.1 956.379 li
1747.95 956.399 li
1747.93 958.563 li
cp
1730.05 902.144 mo
1729.27 902.135 li
1729.14 914.604 li
1716.33 914.467 li
1716.16 930.967 li
1719.47 931.001 li
1719.46 931.495 li
1714.49 931.442 li
1714.48 932.66 li
1709 932.603 li
1709.06 926.964 li
1709 926.964 li
1709.08 919.222 li
1716.19 919.298 li
1716.37 902.799 li
1709.1 902.722 li
1709.15 898.237 li
1723.06 898.385 li
1723.11 894.254 li
1725.14 894.275 li
1725.2 889.248 li
1729.55 889.295 li
1729.59 886.214 li
1733.86 886.26 li
1733.87 885.547 li
1740.48 885.617 li
1740.44 889.33 li
1730.19 889.222 li
1730.05 902.144 li
cp
1729.64 952.945 mo
1725.73 952.903 li
1725.74 951.171 li
1728.34 951.199 li
1728.38 948.091 li
1729.69 948.104 li
1729.64 952.945 li
cp
1706.58 896.486 mo
1699.26 896.409 li
1699.37 885.932 li
1702.05 885.96 li
1702.06 885.125 li
1706.7 885.174 li
1706.58 896.486 li
cp
1698.23 944.779 mo
1695.33 944.749 li
1695.33 944.399 li
1678.83 944.225 li
1678.8 946.974 li
1670.63 946.887 li
1670.72 939.205 li
1683.85 939.344 li
1683.85 938.942 li
1684.52 938.949 li
1684.53 938.075 li
1692.44 938.159 li
1692.39 943.288 li
1698.25 943.351 li
1698.23 944.779 li
cp
1681.23 891.776 mo
1682.81 891.793 li
1682.81 891.915 li
1681.23 891.898 li
1681.23 891.776 li
cp
1691.34 913.803 mo
1691.31 916.403 li
1690.02 916.39 li
1689.97 921.632 li
1686.01 921.59 li
1686.03 919.989 li
1686.72 919.997 li
1686.79 913.755 li
1691.34 913.803 li
cp
1683.35 896.854 mo
1692.66 896.953 li
1692.65 897.315 li
1683.35 897.217 li
1683.35 896.854 li
cp
1862.88 893.704 mo
1864.46 893.721 li
1864.46 893.843 li
1862.88 893.826 li
1862.88 893.704 li
cp
1655.76 879.068 mo
1652.59 879.034 li
1652.6 878.263 li
1642.92 878.16 li
1643 870.317 li
1646.05 870.35 li
1646.17 859.449 li
1647.66 859.465 li
1647.73 852.494 li
1648.44 852.501 li
1648.28 867.499 li
1651.91 867.537 li
1651.89 869.167 li
1652.75 869.177 li
1652.68 875.651 li
1655.8 875.685 li
1655.76 879.068 li
cp
1651.13 909.504 mo
1643.83 909.426 li
1643.83 909.481 li
1643.69 909.479 li
1643.7 907.787 li
1650.24 907.856 li
1650.26 906.471 li
1651.16 906.48 li
1651.13 909.504 li
cp
1647.71 949.945 mo
1647.38 949.76 1647.04 949.575 1646.71 949.389 cv
1646.73 947.014 li
1647.74 947.024 li
1647.71 949.945 li
cp
1635.96 891.204 mo
1634.19 891.186 li
1634.25 886.161 li
1636.01 886.18 li
1635.96 891.204 li
cp
1633.79 902.793 mo
1627.26 902.724 li
1627.21 907.092 li
1620.51 907.021 li
1620.6 898.591 li
1633.84 898.73 li
1633.79 902.793 li
cp
1624.38 936.869 mo
1624.31 936.831 1624.24 936.794 1624.17 936.756 cv
1624.24 930.044 li
1621.44 930.015 li
1621.51 923.532 li
1624.52 923.563 li
1624.38 936.869 li
cp
1614.23 913.812 mo
1612.29 913.791 li
1612.31 911.72 li
1614.25 911.74 li
1614.23 913.812 li
cp
1624.81 858.821 mo
1624.83 857.479 li
1629.69 857.53 li
1629.56 869.61 li
1626.51 869.578 li
1626.38 882.15 li
1624.75 882.134 li
1624.83 875.322 li
1625.11 875.325 li
1625.29 858.826 li
1624.81 858.821 li
cp
1608.22 867.313 mo
1601.54 867.241 li
1601.56 866.061 li
1595.93 866.001 li
1596.04 856.284 li
1579.54 856.109 li
1579.49 860.94 li
1571.52 860.855 li
1571.58 855.098 li
1587.1 855.263 li
1587.19 846.877 li
1599.45 847.008 li
1599.32 859.402 li
1602.61 859.438 li
1602.53 866.693 li
1608.23 866.754 li
1608.22 867.313 li
cp
1604.2 886.469 mo
1604.03 886.467 li
1603.94 894.918 li
1603.37 894.911 li
1603.45 887.081 li
1599.89 887.043 li
1599.91 885.43 li
1597.53 885.404 li
1597.56 882.519 li
1598.46 882.528 li
1598.45 883.71 li
1604.22 883.771 li
1604.2 886.469 li
cp
1595.69 922.83 mo
1594.97 922.822 li
1595 919.889 li
1595.72 919.896 li
1595.69 922.83 li
cp
1584.89 881.394 mo
1581.07 881.354 li
1581 888.13 li
1580.67 888.127 li
1580.74 881.14 li
1583.92 881.174 li
1583.93 879.772 li
1584.91 879.783 li
1584.89 881.394 li
cp
1576.92 897.923 mo
1576.93 897.173 li
1577.54 897.179 li
1577.63 888.873 li
1577.84 888.875 li
1577.75 896.767 li
1577.68 896.767 li
1577.67 897.932 li
1576.92 897.923 li
cp
1580.8 934.594 mo
1577.01 934.553 li
1577.04 930.906 li
1580.84 930.946 li
1580.8 934.594 li
cp
1576.63 938.438 mo
1576.47 938.353 1576.31 938.266 1576.15 938.181 cv
1576.16 937.237 li
1574.33 937.218 li
1573.53 936.794 1572.74 936.375 1571.97 935.962 cv
1572.69 935.97 li
1572.7 935.567 li
1576.66 935.609 li
1576.63 938.438 li
cp
1568.73 864.512 mo
1567.59 864.499 li
1567.53 870.344 li
1565.67 870.324 li
1565.7 867.521 li
1559.27 867.452 li
1559.28 866.173 li
1545.54 866.026 li
1545.57 863.242 li
1552.56 863.316 li
1552.61 858.994 li
1555.04 859.02 li
1554.99 863.757 li
1568.73 863.903 li
1568.73 864.512 li
cp
1560.15 895.278 mo
1560.16 894.656 li
1561.06 894.666 li
1561.06 895.288 li
1560.15 895.278 li
cp
1566.55 918.478 mo
1562.89 918.439 li
1562.92 915.739 li
1560.58 915.715 li
1560.59 915.048 li
1566.58 915.111 li
1566.55 918.478 li
cp
1559.24 898.532 mo
1556.65 898.505 li
1556.66 897.197 li
1559.25 897.226 li
1559.24 898.532 li
cp
1541.58 924.099 mo
1540.99 924.092 li
1541.06 917.476 li
1541.66 917.481 li
1541.58 924.099 li
cp
1550.43 829.205 mo
1551.91 829.221 li
1551.87 832.883 li
1550.39 832.867 li
1550.43 829.205 li
cp
1556.32 834.554 mo
1560.75 834.601 li
1560.66 842.578 li
1556.24 842.531 li
1556.32 834.554 li
cp
1568.39 831.752 mo
1578.1 831.854 li
1578.15 827.148 li
1590.67 827.281 li
1590.64 829.926 li
1587.09 829.888 li
1587.08 830.375 li
1585.79 830.361 li
1585.71 838.747 li
1577.21 838.656 li
1577.26 833.479 li
1568.37 833.385 li
1568.39 831.752 li
cp
1538.96 916.208 mo
1533.85 916.153 li
1533.86 915.955 li
1538.96 916.01 li
1538.96 916.208 li
cp
1533.75 879.701 mo
1533.91 879.703 li
1533.88 882.009 li
1533.72 882.008 li
1533.75 879.701 li
cp
1530.62 940.404 mo
1528.82 940.385 li
1528.82 940.361 li
1530.65 940.381 li
1530.64 940.389 1530.63 940.396 1530.62 940.404 cv
cp
1525.8 894.393 mo
1523.37 894.366 li
1523.39 892.381 li
1525.82 892.406 li
1525.8 894.393 li
cp
1536.09 869.674 mo
1537.86 869.692 li
1537.76 879.243 li
1535.99 879.225 li
1536.09 869.674 li
cp
1517.32 872.352 mo
1515.48 872.332 li
1515.49 871.485 li
1517.33 871.505 li
1517.32 872.352 li
cp
1514.81 902.848 mo
1509.9 902.795 li
1509.93 899.586 li
1514.85 899.639 li
1514.81 902.848 li
cp
1503.73 860.186 mo
1503.54 860.184 li
1503.59 856.08 li
1503.77 856.082 li
1503.73 860.186 li
cp
1503.04 837.155 mo
1502.35 837.148 li
1502.45 827.853 li
1503.14 827.86 li
1503.04 837.155 li
cp
1500.43 907.95 mo
1498.91 907.935 li
1498.93 906.538 li
1500.44 906.555 li
1500.43 907.95 li
cp
1481.37 916.584 mo
1469.75 916.461 li
1469.6 930.772 li
1469.23 930.769 li
1469.17 936.317 li
1468.9 936.258 1468.64 936.2 1468.38 936.141 cv
1468.4 934.338 li
1467.34 934.327 li
1467.49 920.599 li
1459 920.509 li
1459.06 915.452 li
1467.57 915.543 li
1467.56 916.437 li
1481.37 916.583 li
1481.37 916.584 li
cp
1427.28 942.651 mo
1426.89 942.528 1426.51 942.408 1426.12 942.285 cv
1426.14 940.714 li
1420.95 940.658 li
1419.63 940.25 1418.3 939.843 1416.97 939.446 cv
1417 936.417 li
1427.34 936.527 li
1427.28 942.651 li
cp
1416.6 916.698 mo
1411.27 916.642 li
1411.37 907.262 li
1416.7 907.318 li
1416.6 916.698 li
cp
1412.21 935.838 mo
1403.36 935.744 li
1399.29 934.77 1395.23 933.939 1391.28 932.834 cv
1391.28 932.59 li
1401.33 932.696 li
1401.35 930.587 li
1408.41 930.662 li
1408.38 933.112 li
1412.23 933.152 li
1412.21 935.838 li
cp
1384.92 923.787 mo
1381.21 923.748 li
1381.29 916.074 li
1376.4 916.022 li
1376.4 915.804 li
1370.91 915.746 li
1370.96 910.441 li
1383.65 910.575 li
1383.66 909.788 li
1383.81 909.789 li
1383.74 915.909 li
1383.84 915.91 li
1383.79 921.328 li
1384.95 921.34 li
1384.92 923.787 li
cp
1343.37 891.97 mo
1343.21 891.968 li
1343.29 884.412 li
1343.45 884.414 li
1343.37 891.97 li
cp
1334.95 922.09 mo
1326.21 921.997 li
1326.12 930.684 li
1324.54 930.713 1322.98 930.767 1321.42 930.843 cv
1316.8 930.794 li
1316.91 920.956 li
1312.99 920.914 li
1313.07 913.596 li
1308.2 913.545 li
1308.23 910.532 li
1311.35 910.565 li
1311.38 907.324 li
1318.86 907.403 li
1318.91 903.289 li
1321.25 903.314 li
1321.11 916.605 li
1335.01 916.754 li
1334.95 922.09 li
cp
1296.41 928.04 mo
1293.84 928.013 li
1293.87 925.744 li
1294.53 925.751 li
1294.61 918.101 li
1296.52 918.121 li
1296.41 928.04 li
cp
1291.83 901.57 mo
1289.67 901.548 li
1289.67 901.994 li
1286.57 901.961 li
1286.59 899.779 li
1277.17 899.68 li
1277.24 893.466 li
1277.78 893.472 li
1277.74 896.762 li
1294.24 896.937 li
1294.26 895.187 li
1295.01 895.195 li
1294.98 898.357 li
1291.86 898.324 li
1291.83 901.57 li
cp
1285.65 933.888 mo
1285.1 934.154 1284.57 934.446 1284.04 934.773 cv
1283.55 935.076 1281.64 934.855 1280.9 934.466 cv
1280.35 934.179 1279.8 933.938 1279.25 933.719 cv
1280.1 933.729 li
1280.11 932.461 li
1285.66 932.52 li
1285.65 933.888 li
cp
1270.04 904.488 mo
1260.51 904.388 li
1260.52 903.285 li
1270.06 903.387 li
1270.04 904.488 li
cp
1253.47 919.201 mo
1251.7 919.183 li
1251.68 921.272 li
1250.06 921.255 li
1250.15 912.949 li
1253.54 912.985 li
1253.47 919.201 li
cp
1249.35 950.903 mo
1248.16 950.891 li
1248.17 949.985 li
1249.85 950.003 li
1249.69 950.302 1249.52 950.603 1249.35 950.903 cv
cp
1229.88 933.093 mo
1223.29 933.022 li
1223.28 934.522 li
1222.95 934.365 1222.62 934.211 1222.29 934.054 cv
1222.34 929.352 li
1221.87 929.347 li
1221.89 927.738 li
1223.59 927.757 li
1223.67 920.057 li
1227.12 920.093 li
1227.09 923.164 li
1229.98 923.194 li
1229.88 933.093 li
cp
1207.2 917.15 mo
1201.57 917.091 li
1201.54 919.765 li
1200.22 919.751 li
1200.22 919.566 li
1201.01 919.574 li
1201.08 912.911 li
1207.25 912.977 li
1207.2 917.15 li
cp
1202.2 945.696 mo
1200.07 945.673 li
1200.1 943.1 li
1200.68 943.105 li
1200.67 944.655 li
1202.48 944.675 li
1202.38 945.007 1202.27 945.344 1202.2 945.696 cv
cp
1194.48 902.404 mo
1200.24 902.465 li
1200.23 903.065 li
1194.48 903.004 li
1194.48 902.404 li
cp
1183.71 931.877 mo
1179.37 931.83 li
1179.38 930.728 li
1183.73 930.773 li
1183.71 931.877 li
cp
1174.18 919.456 mo
1173.27 919.446 li
1173.36 910.983 li
1173.54 910.985 li
1173.47 918.087 li
1174.2 918.095 li
1174.18 919.456 li
cp
1159.21 902.639 mo
1153.6 902.579 li
1153.51 911.005 li
1150.14 910.969 li
1150.11 914.029 li
1150.07 914.028 li
1149.97 923.457 li
1146.48 925.759 1143.16 928.138 1139.88 930.521 cv
1139.92 926.565 li
1142.81 926.596 li
1142.9 918.307 li
1148.27 918.363 li
1148.43 903.435 li
1153.04 903.483 li
1153.08 899.628 li
1159.24 899.693 li
1159.21 902.639 li
cp
1136.56 901.738 mo
1131.95 901.689 li
1131.86 909.979 li
1126.49 909.922 li
1126.45 913.622 li
1122.65 913.582 li
1122.58 920.123 li
1122.27 920.12 li
1122.2 925.985 li
1120.05 925.963 li
1119.88 942.462 li
1122.62 942.49 li
1121.95 942.902 1121.27 943.307 1120.58 943.708 cv
1112.21 943.619 li
1112.16 948.12 li
1111.84 948.27 1111.53 948.426 1111.21 948.571 cv
1108.25 948.017 1106.32 947.251 1105.07 946.348 cv
1105.13 940.815 li
1108.29 940.85 li
1108.3 939.482 li
1118.94 939.596 li
1119.11 923.097 li
1118.62 923.091 li
1118.68 916.884 li
1122.61 916.926 li
1122.67 911.389 li
1125.27 911.416 li
1125.45 894.917 li
1108.95 894.742 li
1108.93 896.304 li
1096.16 896.168 li
1096.27 885.31 li
1108.04 885.435 li
1108.14 875.625 li
1108.77 875.632 li
1108.7 881.764 li
1117.89 881.861 li
1117.79 891.267 li
1129.48 891.391 li
1129.38 900.89 li
1136.57 900.967 li
1136.56 901.738 li
cp
1102.1 924.283 mo
1101.28 924.274 li
1101.35 917.038 li
1094.7 916.968 li
1094.75 912.654 li
1102.22 912.733 li
1102.1 924.283 li
cp
1060.85 905.166 mo
1049.39 905.045 li
1049.51 893.896 li
1055.44 893.96 li
1055.42 895.949 li
1060.95 896.008 li
1060.85 905.166 li
cp
1047.32 911.262 mo
1043.79 911.224 li
1043.77 912.835 li
1034.45 912.735 li
1034.47 911.157 li
1017.97 910.981 li
1017.97 911.067 li
1007.95 910.961 li
1007.91 915.062 li
1006.34 915.045 li
1006.4 909.5 li
989.897 909.325 li
989.732 924.898 li
986.281 924.861 li
986.423 911.478 li
984.963 911.463 li
985.052 903.072 li
987.673 903.101 li
987.809 890.279 li
989.168 890.294 li
989.027 903.593 li
1005.53 903.768 li
1005.57 899.979 li
1009.81 900.023 li
1009.74 906.296 li
1026.24 906.471 li
1026.26 904.484 li
1032.9 904.556 li
1032.85 908.939 li
1047.34 909.094 li
1047.32 911.262 li
cp
1015.57 937.325 mo
1015.56 937.237 1015.55 937.153 1015.54 937.063 cv
1017.63 937.085 li
1017.78 937.174 1017.91 937.263 1018.04 937.352 cv
1015.57 937.325 li
cp
1012.22 937.29 mo
1010.47 937.271 li
1010.47 936.702 li
1012.32 936.722 li
1012.29 936.911 1012.25 937.101 1012.22 937.29 cv
cp
1021.75 889.775 mo
1024.92 889.81 li
1024.92 889.956 li
1021.75 889.923 li
1021.75 889.775 li
cp
978.259 930.97 mo
976.777 931.534 975.298 932.099 973.819 932.662 cv
973.854 929.462 li
978.274 929.509 li
978.259 930.97 li
cp
963.055 907.779 mo
961.826 907.767 li
961.689 920.639 li
960.715 920.628 li
960.84 908.878 li
944.341 908.702 li
944.311 911.538 li
935.595 911.445 li
935.753 896.548 li
945.782 896.654 li
945.734 901.214 li
962.233 901.389 li
962.24 900.725 li
963.129 900.734 li
963.055 907.779 li
cp
883.325 906.538 mo
874.507 906.444 li
874.516 905.647 li
882.277 905.729 li
882.292 904.4 li
883.348 904.412 li
883.325 906.538 li
cp
872.472 937.478 mo
871.34 937.466 li
871.311 940.225 li
870.899 940.38 870.487 940.536 870.075 940.692 cv
870.172 931.563 li
872.534 931.587 li
872.472 937.478 li
cp
857.996 931.023 mo
854.237 930.983 li
854.253 929.443 li
858.012 929.483 li
857.996 931.023 li
cp
853.613 937.039 mo
851.08 937.012 li
851.127 932.506 li
853.661 932.532 li
853.613 937.039 li
cp
847.772 909.906 mo
856.793 910.002 li
856.922 897.876 li
858.097 897.889 li
857.979 908.993 li
872.154 909.145 li
872.097 914.486 li
870.585 914.47 li
870.599 913.116 li
854.443 912.944 li
854.466 910.829 li
847.763 910.758 li
847.772 909.906 li
cp
836.094 881.342 mo
831.049 881.289 li
831.133 873.361 li
836.178 873.415 li
836.094 881.342 li
cp
831.26 910.998 mo
828.912 910.974 li
828.916 910.628 li
831.264 910.653 li
831.26 910.998 li
cp
786.441 920.34 mo
781.931 919.066 777.406 919.739 772.389 922.333 cv
769.276 922.3 li
769.373 913.142 li
782.612 913.282 li
782.585 915.818 li
786.489 915.86 li
786.441 920.34 li
cp
759.278 930.304 mo
759.296 928.61 li
761.97 928.639 li
761.072 929.194 760.176 929.749 759.278 930.304 cv
cp
715.98 952.054 mo
707.53 951.965 li
707.519 953.051 li
704.971 953.023 li
704.966 953.484 li
703.393 953.427 701.816 953.377 700.236 953.341 cv
700.256 951.477 li
715.984 951.644 li
715.98 952.054 li
cp
699.996 938.793 mo
698.953 938.782 li
698.989 935.38 li
700.032 935.391 li
699.996 938.793 li
cp
692.428 910.224 mo
690.328 910.201 li
690.38 905.277 li
692.48 905.3 li
692.428 910.224 li
cp
691.671 933.216 mo
686.134 933.157 li
686.195 927.338 li
691.069 927.39 li
691.06 928.246 li
691.724 928.253 li
691.671 933.216 li
cp
683.737 953.196 mo
683.628 953.196 683.52 953.196 683.412 953.196 cv
683.45 949.629 li
683.774 949.633 li
683.737 953.196 li
cp
702.56 897.627 mo
705.232 897.655 li
705.201 900.545 li
704.397 900.536 li
704.368 903.346 li
702.5 903.326 li
702.56 897.627 li
cp
712.889 935.053 mo
714.123 935.065 li
714.123 935.123 li
712.889 935.109 li
712.889 935.053 li
cp
682.408 942.898 mo
681.157 942.885 li
681.186 940.169 li
682.438 940.182 li
682.408 942.898 li
cp
660.2 889.668 mo
648.824 889.548 li
648.821 889.789 li
635.496 889.647 li
635.381 900.473 li
634.125 900.459 li
634.139 899.153 li
630.535 899.114 li
630.644 888.837 li
629.238 888.822 li
629.397 873.803 li
635.925 873.872 li
635.866 879.447 li
644.099 879.535 li
644.043 884.775 li
660.25 884.947 li
660.2 889.668 li
cp
649.662 912.531 mo
649.728 906.299 li
650.736 906.31 li
650.67 912.542 li
649.662 912.531 li
cp
655.381 945.798 mo
648.09 945.721 li
648.151 939.892 li
648.335 939.894 li
648.292 943.981 li
655.399 944.057 li
655.381 945.798 li
cp
642.438 922.165 mo
637.745 922.115 li
637.8 916.999 li
642.492 917.049 li
642.438 922.165 li
cp
632.193 933.574 mo
631.469 933.566 li
631.486 931.962 li
632.21 931.97 li
632.193 933.574 li
cp
632.002 952.713 mo
629.931 953.666 627.856 954.62 625.731 955.598 cv
625.79 950.007 li
631.542 950.067 li
631.538 950.506 li
632.025 950.511 li
632.002 952.713 li
cp
621.182 927.972 mo
615.39 927.91 li
615.407 926.263 li
613.697 926.244 li
613.787 917.824 li
604.483 917.726 li
604.583 908.335 li
605.971 908.35 li
605.974 908.003 li
611.975 908.067 li
612.15 891.567 li
610.749 891.553 li
610.797 887.037 li
594.298 886.862 li
594.246 891.725 li
590.064 891.68 li
590.097 888.551 li
590.624 888.556 li
590.786 873.274 li
601.267 873.386 li
601.163 883.18 li
603.84 883.208 li
603.806 886.419 li
612.762 886.514 li
612.73 889.5 li
614.136 889.516 li
614.032 899.259 li
612.41 899.242 li
612.235 915.74 li
621.311 915.837 li
621.182 927.972 li
cp
589.5 905.427 mo
588.113 905.412 li
588.104 906.244 li
572.837 906.082 li
572.662 922.581 li
583.938 922.7 li
583.804 935.315 li
585.608 935.335 li
585.6 936.182 li
583.795 936.162 li
583.659 948.931 li
580.119 948.894 li
580.124 948.446 li
582.062 948.467 li
582.069 947.794 li
582.541 947.799 li
582.716 931.3 li
581.283 931.285 li
581.361 923.917 li
569.755 923.794 li
569.909 909.319 li
563.582 909.252 li
563.636 904.175 li
567.122 904.212 li
567.133 903.165 li
578.809 903.288 li
578.832 901.051 li
584.335 901.109 li
584.368 898.092 li
589.578 898.147 li
589.5 905.427 li
cp
564.806 929.011 mo
556.96 928.927 li
556.903 934.3 li
548.799 934.214 li
548.872 927.312 li
545.562 927.276 li
545.602 923.577 li
547.668 923.599 li
547.792 911.926 li
553.38 911.985 li
553.235 925.644 li
564.84 925.767 li
564.806 929.011 li
cp
561.531 960.241 mo
555.782 960.181 li
555.786 959.863 li
561.534 959.924 li
561.531 960.241 li
cp
557.803 883.024 mo
568.516 883.138 li
568.624 872.912 li
574.289 872.972 li
574.198 881.483 li
573.671 881.478 li
573.639 884.495 li
568.012 884.436 li
567.988 886.673 li
562.484 886.614 li
562.473 887.661 li
557.754 887.611 li
557.803 883.024 li
cp
536.627 906.98 mo
533.758 906.95 li
533.798 903.153 li
536.667 903.185 li
536.627 906.98 li
cp
536.202 949.453 mo
528.938 949.376 li
528.95 948.276 li
530.655 948.294 li
530.647 949.023 li
536.206 949.082 li
536.202 949.453 li
cp
520.418 935.445 mo
512.624 935.362 li
512.726 925.74 li
502.731 925.634 li
502.794 919.674 li
505.601 919.703 li
505.637 916.358 li
516.479 916.474 li
516.434 920.646 li
529.13 920.781 li
529.019 931.303 li
532.328 931.338 li
532.325 931.672 li
520.459 931.546 li
520.418 935.445 li
cp
489.083 892.535 mo
489.216 880.007 li
499.98 880.121 li
499.946 883.389 li
503.82 883.43 li
503.73 891.899 li
507.938 891.944 li
507.92 893.661 li
522.969 893.82 li
522.915 898.898 li
517.343 898.839 li
517.287 904.154 li
517.05 904.151 li
517.094 899.979 li
502.728 899.827 li
502.803 892.681 li
489.083 892.535 li
cp
486.207 901.71 mo
479.782 901.643 li
479.775 902.366 li
474.006 902.305 li
474.074 895.904 li
485.189 896.022 li
485.222 892.903 li
486.3 892.915 li
486.207 901.71 li
cp
468.305 937.595 mo
468.07 937.592 li
468.001 944.057 li
467.678 944.054 li
467.644 947.294 li
466.798 948.744 465.95 950.198 465.102 951.653 cv
465.239 938.648 li
463.023 938.625 li
463.051 936.057 li
460.131 936.025 li
460.177 931.659 li
467.252 931.734 li
467.199 936.76 li
468.314 936.771 li
468.305 937.595 li
cp
462.965 955.316 mo
462.967 955.125 li
463.076 955.126 li
463.039 955.189 463.002 955.254 462.965 955.316 cv
cp
461.688 957.507 mo
457.81 957.466 li
457.776 960.606 li
455.664 960.584 li
455.639 962.947 li
454.467 962.629 453.275 962.399 452.068 962.243 cv
452.143 955.213 li
462.958 955.328 li
462.536 956.053 462.114 956.775 461.688 957.507 cv
cp
446.488 953.096 mo
440.462 953.032 li
440.479 951.492 li
446.385 951.555 li
446.376 952.38 li
446.495 952.382 li
446.488 953.096 li
cp
439.295 903.538 mo
437.132 903.515 li
437.161 900.758 li
428.855 900.67 li
428.873 899.066 li
418.183 898.953 li
418.223 895.177 li
411.084 895.102 li
411.118 891.959 li
397.134 891.811 li
397.146 890.677 li
410.004 890.813 li
410.039 887.548 li
412.347 887.573 li
412.379 884.546 li
415.777 884.582 li
415.741 888.031 li
420.238 888.078 li
420.183 893.288 li
428.38 893.375 li
428.35 896.175 li
438.62 896.284 li
438.558 902.129 li
439.31 902.137 li
439.295 903.538 li
cp
438.244 947.42 mo
433.928 947.374 li
434.018 938.908 li
437.112 938.941 li
437.088 941.184 li
438.31 941.196 li
438.244 947.42 li
cp
425.962 918.746 mo
425.979 917.14 li
434.632 917.231 li
434.615 918.838 li
425.962 918.746 li
cp
427.633 936.758 mo
426.163 936.741 li
426.179 935.249 li
427.649 935.265 li
427.633 936.758 li
cp
423.911 957.746 mo
422.653 957.732 li
423.071 957.543 423.489 957.353 423.917 957.158 cv
423.911 957.746 li
cp
420.501 915.801 mo
410.072 915.69 li
410.115 911.592 li
412.239 911.614 li
412.199 915.391 li
420.504 915.479 li
420.501 915.801 li
cp
408.387 929.35 mo
408.39 929.108 li
408.604 929.11 li
408.647 924.955 li
409.396 924.964 li
409.349 929.36 li
408.387 929.35 li
cp
417.435 946.656 mo
412.822 947.039 408.265 947.417 403.744 947.793 cv
400.03 947.754 li
400.052 945.763 li
410.825 945.877 li
410.835 944.924 li
417.452 944.994 li
417.435 946.656 li
cp
394.419 936.877 mo
392.124 936.853 li
392.139 935.474 li
394.434 935.498 li
394.419 936.877 li
cp
391.089 972.167 mo
387.838 972.133 li
388.513 970.829 389.659 969.565 391.13 968.283 cv
391.089 972.167 li
cp
386.873 924.21 mo
386.977 914.383 li
379.228 914.301 li
379.267 910.666 li
377.398 910.646 li
377.404 910.117 li
388.642 910.236 li
388.474 926.01 li
390.541 926.031 li
390.527 927.315 li
387.364 927.281 li
387.396 924.215 li
386.873 924.21 li
cp
390.64 895.476 mo
394.579 895.518 li
394.443 908.283 li
401.583 908.358 li
401.582 908.38 li
393.649 908.295 li
393.636 909.563 li
390.49 909.53 li
390.64 895.476 li
cp
441.313 920.061 mo
451.102 920.164 li
451.164 914.267 li
455.681 914.314 li
455.856 897.815 li
455.105 897.808 li
455.121 896.291 li
457.568 896.317 li
457.503 902.447 li
465.457 902.531 li
465.323 915.213 li
458.762 915.144 li
458.701 920.888 li
443.792 920.729 li
443.773 922.511 li
441.288 922.484 li
441.313 920.061 li
cp
370.74 938.859 mo
364.755 938.796 li
364.819 932.776 li
363.485 932.763 li
363.546 927 li
370.341 927.072 li
370.303 930.707 li
370.826 930.712 li
370.74 938.859 li
cp
360.963 904.428 mo
359.496 904.413 li
359.511 903.026 li
360.978 903.042 li
360.963 904.428 li
cp
347.003 930.935 mo
343.03 930.893 li
342.958 937.598 li
338.161 937.547 li
338.195 934.318 li
341.906 934.357 li
341.98 927.437 li
347.04 927.49 li
347.003 930.935 li
cp
337.668 909.803 mo
342.938 909.859 li
342.926 910.945 li
340.042 910.915 li
339.968 917.836 li
337.583 917.812 li
337.668 909.803 li
cp
336.457 909.612 mo
322.373 909.463 li
322.44 903.117 li
317.657 903.066 li
317.803 889.306 li
313.321 889.258 li
313.446 877.453 li
314.947 877.469 li
314.879 883.873 li
331.378 884.048 li
331.511 871.498 li
333.216 871.516 li
333.108 881.728 li
343.827 881.841 li
343.705 893.366 li
336.63 893.291 li
336.457 909.612 li
cp
330.89 942.058 mo
317.108 941.912 li
317.071 945.329 li
311.585 945.271 li
311.59 944.807 li
299.331 944.677 li
299.347 943.167 li
312.724 943.309 li
312.899 926.81 li
312.374 926.805 li
312.412 923.173 li
317.803 923.23 li
317.842 919.569 li
320.829 919.601 li
320.781 924.145 li
314.05 924.073 li
313.875 940.572 li
330.374 940.747 li
330.395 938.789 li
330.925 938.795 li
330.89 942.058 li
cp
295.803 933.38 mo
295.203 933.373 li
295.206 933.094 li
295.806 933.101 li
295.803 933.38 li
cp
294.997 953.526 mo
289.302 953.466 li
289.328 951.04 li
295.022 951.101 li
294.997 953.526 li
cp
284.381 925.87 mo
278.783 925.811 li
278.768 927.175 li
276.696 927.153 li
276.748 922.239 li
282.834 922.304 li
282.847 921.159 li
284.431 921.176 li
284.381 925.87 li
cp
280.131 948.406 mo
276.667 948.37 li
276.717 943.654 li
280.181 943.691 li
280.131 948.406 li
cp
275.523 889.01 mo
278.409 889.04 li
278.391 890.711 li
294.89 890.887 li
294.938 886.422 li
296.85 886.441 li
296.801 891.034 li
301.283 891.081 li
301.128 905.63 li
305.913 905.681 li
305.903 906.603 li
301.479 906.556 li
301.465 907.862 li
300.276 907.85 li
300.422 894.174 li
283.923 893.999 li
283.874 898.587 li
275.422 898.497 li
275.523 889.01 li
cp
270.077 899.799 mo
263.768 899.732 li
263.775 899.057 li
270.084 899.124 li
270.077 899.799 li
cp
258.939 896.779 mo
258.245 896.771 li
258.249 896.456 li
253.675 896.407 li
253.79 885.642 li
259.057 885.697 li
258.939 896.779 li
cp
258.1 945.427 mo
257.513 945.42 li
257.554 941.551 li
258.141 941.557 li
258.1 945.427 li
cp
245.256 964.375 mo
244.976 964.448 244.695 964.521 244.414 964.595 cv
242.749 965.034 240.884 965.176 239.094 965.399 cv
237.527 965.596 236.4 965.947 235.612 966.427 cv
233.96 966.409 li
233.939 968.307 li
233.23 968.3 li
233.267 964.848 li
216.768 964.673 li
216.737 967.589 li
209.73 967.515 li
209.688 971.458 li
209.439 971.455 li
209.011 970.651 208.5 969.9 207.902 969.202 cv
208.509 969.208 li
208.601 960.478 li
214.562 960.54 li
214.713 946.247 li
223.361 946.339 li
223.342 948.144 li
218.583 948.093 li
218.407 964.592 li
234.907 964.767 li
234.965 959.216 li
242.281 959.293 li
242.255 961.76 li
245.284 961.791 li
245.256 964.375 li
cp
198.145 952.598 mo
192.185 952.534 li
192.075 962.853 li
191.972 962.843 191.878 962.828 191.774 962.819 cv
186.276 962.35 180.789 961.82 175.304 961.278 cv
175.308 960.854 li
170.494 960.804 li
164.14 960.167 157.784 959.532 151.424 958.924 cv
151.481 953.575 li
153.606 953.598 li
153.585 955.611 li
155.604 955.633 li
155.58 957.94 li
172.079 958.115 li
172.199 946.778 li
184.476 946.909 li
184.578 937.351 li
189.262 937.4 li
189.227 940.695 li
205.726 940.87 li
205.845 929.646 li
206.616 929.653 li
206.563 934.715 li
211.059 934.763 li
210.988 941.469 li
213.774 941.498 li
213.747 944.031 li
198.238 943.866 li
198.145 952.598 li
cp
149.551 926.522 mo
151.664 926.545 li
151.631 929.604 li
149.518 929.581 li
149.551 926.522 li
cp
146.853 937.025 mo
141.26 936.966 li
141.253 937.617 li
128.582 937.483 li
128.512 944.083 li
122.352 944.018 li
122.359 943.3 li
117.547 943.249 li
117.549 943.049 li
127.92 943.159 li
127.993 936.305 li
140.331 936.436 li
140.383 931.546 li
146.91 931.615 li
146.853 937.025 li
cp
129.121 970.323 mo
124.944 970.279 li
123.468 969.658 121.991 969.037 120.515 968.415 cv
120.532 966.863 li
129.157 966.955 li
129.121 970.323 li
cp
118.603 960.642 mo
114.214 960.596 li
114.224 959.714 li
115.416 959.727 li
115.408 960.444 li
118.605 960.479 li
118.603 960.642 li
cp
112.116 922.58 mo
110.403 922.562 li
110.424 920.528 li
112.138 920.547 li
112.116 922.58 li
cp
106.719 936.813 mo
102.581 936.77 li
102.616 933.432 li
98.4897 933.389 li
98.4951 932.911 li
106.759 932.998 li
106.719 936.813 li
cp
105.698 958.368 mo
103.281 958.343 li
103.291 957.491 li
105.708 957.517 li
105.698 958.368 li
cp
93.8315 929.172 mo
93.4102 929.167 li
93.5244 918.366 li
91.3364 918.343 li
91.3389 918.101 li
93.9487 918.128 li
93.8315 929.172 li
cp
230.283 940.708 mo
230.288 940.248 li
241.066 940.362 li
241.04 942.779 li
239.9 942.767 li
239.921 940.811 li
230.283 940.708 li
cp
227.485 911.287 mo
227.604 900.161 li
234.428 900.233 li
234.505 893.026 li
235.9 893.041 li
235.76 906.271 li
241.643 906.334 li
241.574 912.779 li
246.045 912.827 li
245.991 917.901 li
247.517 917.918 li
247.515 918.101 li
249.037 918.116 li
248.873 933.497 li
257.567 933.59 li
257.518 938.315 li
243.833 938.171 li
243.876 934.073 li
245.353 934.089 li
245.528 917.59 li
229.029 917.414 li
228.962 923.733 li
227.485 923.717 li
227.47 925.143 li
227.424 925.142 li
227.571 911.287 li
227.485 911.287 li
cp
86.8716 949.786 mo
81.3384 949.728 li
81.4043 943.533 li
81.8813 943.539 li
81.8599 945.545 li
85.9863 945.589 li
85.9419 949.756 li
86.8716 949.766 li
86.8716 949.786 li
cp
68.0903 940.262 mo
64.9385 940.229 li
64.9141 942.526 li
63.3872 942.51 li
63.3447 946.5 li
58.146 946.444 li
58.2856 933.285 li
41.7866 933.11 li
41.6382 947.101 li
36.4512 947.046 li
36.3037 960.901 li
33.7808 960.735 31.2905 960.896 28.8311 961.384 cv
18.3237 961.271 li
18.2778 965.59 li
17.7285 965.923 17.1792 966.26 16.6323 966.629 cv
15.2661 964.848 13.978 963.169 12.7197 961.528 cv
17.9478 961.583 li
18.0874 948.429 li
30.3594 948.559 li
30.5342 932.06 li
20.1333 931.949 li
20.147 930.628 li
10.3101 930.523 li
10.4038 921.693 li
3.95264 921.625 li
3.98535 918.55 li
17.3584 918.691 li
17.3662 917.943 li
19.3115 917.964 li
19.1963 928.824 li
27.7422 928.915 li
27.7119 931.731 li
44.2114 931.906 li
44.248 928.43 li
56.9443 928.564 li
56.9565 927.408 li
58.1714 927.421 li
58.209 923.885 li
66.1973 923.97 li
66.0767 935.308 li
68.1426 935.329 li
68.0903 940.262 li
cp
51.9893 965.483 mo
51.9097 965.556 51.8335 965.624 51.7539 965.697 cv
51.2998 965.45 50.8491 965.233 50.397 965.006 cv
51.9941 965.023 li
51.9893 965.483 li
cp
3.50977 943.473 mo
.86377 943.445 li
.439453 942.874 .0102539 942.322 -.416016 941.79 cv
-.40625 940.859 li
-1.16016 940.851 li
-1.354 940.606 -1.55469 940.357 -1.73096 940.125 cv
-2.05957 940.206 -2.38086 940.285 -2.7085 940.366 cv
-2.68408 938.056 li
3.56641 938.122 li
3.50977 943.473 li
cp
-6.21436 932.757 mo
-19.127 932.619 li
-19.2075 940.187 li
-32.3555 940.047 li
-32.3633 940.777 li
-44.2266 940.651 li
-44.1338 931.947 li
-41.5869 931.975 li
-41.5981 933.003 li
-25.0991 933.178 li
-25.0542 928.975 li
-20.2251 929.025 li
-20.126 919.646 li
-18.3594 919.664 li
-18.4321 926.485 li
-18.4038 926.486 li
-18.4155 927.589 li
-6.16113 927.719 li
-6.21436 932.757 li
cp
-46.0879 945.355 mo
-46.7085 944.581 -47.3179 943.817 -47.9175 943.064 cv
-47.9014 941.515 li
-46.0474 941.534 li
-46.0879 945.355 li
cp
35.8521 914.243 mo
40.5947 914.294 li
40.5835 915.367 li
35.8408 915.316 li
35.8521 914.243 li
cp
38.8848 884.122 mo
39.1611 884.125 li
39.1152 888.461 li
41.7329 888.489 li
41.7139 890.293 li
38.8193 890.263 li
38.8848 884.122 li
cp
42.5269 907.826 mo
47.7837 907.882 li
47.7524 910.81 li
42.4961 910.754 li
42.5269 907.826 li
cp
51.8154 895.662 mo
52.1455 895.665 li
52.1406 896.15 li
61.8906 896.254 li
61.8818 897.105 li
51.8013 896.999 li
51.8154 895.662 li
cp
55.7549 875.379 mo
67.2397 875.501 li
67.2339 876.066 li
61.2266 876.002 li
61.187 879.746 li
58.3267 879.716 li
58.332 879.23 li
55.7144 879.202 li
55.7549 875.379 li
cp
-48.9248 925.003 mo
-49.8442 924.993 li
-49.8428 924.84 li
-48.9233 924.849 li
-48.9248 925.003 li
cp
-49.9819 879.305 mo
-62.7959 879.169 li
-62.7983 879.399 li
-63.7324 879.389 li
-63.8994 895.15 li
-66.9521 895.118 li
-66.9468 894.606 li
-80.875 894.459 li
-80.7661 884.192 li
-97.2651 884.018 li
-97.4297 899.505 li
-111.898 899.352 li
-111.842 894.051 li
-97.7251 894.201 li
-97.5942 881.85 li
-81.5684 882.02 li
-81.4961 875.215 li
-74.979 875.284 li
-74.9907 876.38 li
-58.4917 876.555 li
-58.479 875.352 li
-47.7813 875.465 li
-47.8086 878.069 li
-49.9683 878.047 li
-49.9819 879.305 li
cp
-55.6499 896.216 mo
-58.9229 896.181 li
-58.9204 895.941 li
-55.6475 895.976 li
-55.6499 896.216 li
cp
-64.3335 935.059 mo
-66.2075 934.845 -68.1245 934.759 -70.0483 934.806 cv
-70.4785 934.816 -70.9082 934.842 -71.3389 934.856 cv
-71.2817 929.479 li
-81.4897 929.372 li
-81.4512 925.772 li
-74.8516 925.842 li
-74.793 920.343 li
-72.1841 920.37 li
-72.0908 911.564 li
-64.6089 911.645 li
-64.6592 916.414 li
-66.2539 916.397 li
-66.4287 932.896 li
-64.311 932.919 li
-64.3335 935.059 li
cp
-83.5195 901.382 mo
-92.855 901.283 li
-92.8569 901.458 li
-96.8301 901.416 li
-96.8208 900.523 li
-83.5122 900.664 li
-83.5195 901.382 li
cp
-91.2964 920.58 mo
-97.8428 920.511 li
-97.8154 917.906 li
-91.269 917.976 li
-91.2964 920.58 li
cp
-97.936 924.218 mo
-102.229 924.172 li
-102.249 926.053 li
-105.637 926.017 li
-105.769 938.47 li
-108.822 938.893 -111.864 939.348 -114.904 939.809 cv
-114.875 937.069 li
-114.914 937.069 li
-114.873 933.229 li
-107.447 933.309 li
-107.342 923.389 li
-97.9282 923.489 li
-97.936 924.218 li
cp
-123.818 921.016 mo
-129.459 920.956 li
-129.424 917.679 li
-123.783 917.738 li
-123.818 921.016 li
cp
-131.304 926.629 mo
-133.258 926.607 li
-133.235 924.443 li
-131.281 924.464 li
-131.304 926.629 li
cp
93.6074 865.396 mo
98.7227 865.45 li
98.7109 866.556 li
93.5957 866.501 li
93.6074 865.396 li
cp
1244.7 868.387 mo
1242.9 868.367 li
1242.94 864.385 li
1244.74 864.404 li
1244.7 868.387 li
cp
1496.71 844.07 mo
1492.86 844.029 li
1492.88 842.289 li
1488.62 842.243 li
1488.66 838.266 li
1486.71 838.244 li
1486.72 837.524 li
1496.78 837.632 li
1496.71 844.07 li
cp
1476.24 854.954 mo
1475.36 854.944 li
1475.37 854.625 li
1476.25 854.635 li
1476.24 854.954 li
cp
1464.16 839.627 mo
1459.65 839.579 li
1459.72 833.247 li
1464.23 833.295 li
1464.16 839.627 li
cp
1726.15 845.636 mo
1728.4 845.659 li
1728.44 841.632 li
1730.82 841.657 li
1730.74 849.452 li
1726.11 849.402 li
1726.15 845.636 li
cp
2050.02 843.503 mo
2060.09 843.609 li
2060.08 844.329 li
2058.13 844.309 li
2058.08 848.287 li
2053.82 848.242 li
2053.8 849.982 li
2049.95 849.941 li
2050.02 843.503 li
cp
2070.19 860.938 mo
2071.07 860.947 li
2071.07 861.267 li
2070.19 861.257 li
2070.19 860.938 li
cp
2076.65 837.306 mo
2078.5 837.325 li
2078.47 839.813 li
2087.17 839.906 li
2087.1 846.238 li
2076.56 846.126 li
2076.65 837.306 li
cp
2582.82 807.974 mo
2575.31 807.894 li
2575.36 803.111 li
2582.87 803.191 li
2582.82 807.974 li
cp
2873.15 888.881 mo
2873.18 885.854 li
2876.66 885.891 li
2876.67 885.204 li
2880.31 885.243 li
2880.27 888.956 li
2873.15 888.881 li
cp
2861.12 869.225 mo
2861.21 860.751 li
2876.61 860.914 li
2876.62 859.768 li
2880.71 859.812 li
2880.66 863.902 li
2885.66 863.956 li
2885.61 868.798 li
2876.84 868.705 li
2876.83 869.392 li
2861.12 869.225 li
cp
3143.1 873.095 mo
3132.76 872.984 li
3132.58 889.483 li
3132.65 889.484 li
3132.64 891.217 li
3125.89 891.146 li
3125.83 896.842 li
3118.72 896.767 li
3118.72 896.803 li
3113.44 896.747 li
3113.35 905.369 li
3108.87 905.321 li
3108.84 908.121 li
3103.84 908.067 li
3103.84 907.9 li
3087.71 907.729 li
3087.75 904.135 li
3103.66 904.304 li
3103.7 900.849 li
3106.57 900.879 li
3106.58 899.999 li
3110.93 900.045 li
3111.1 883.546 li
3094.6 883.371 li
3094.59 884.251 li
3092.86 884.232 li
3092.91 879.469 li
3098.71 879.53 li
3098.77 873.728 li
3104.63 873.79 li
3104.65 871.768 li
3105.64 871.778 li
3105.82 855.279 li
3089.32 855.104 li
3089.3 857.127 li
3088.3 857.116 li
3088.24 862.918 li
3082.38 862.855 li
3082.29 871.119 li
3076.5 871.058 li
3076.5 871.328 li
3070.06 871.26 li
3070.13 864.737 li
3054.85 864.575 li
3054.92 858.471 li
3038.42 858.295 li
3038.24 874.794 li
3053.52 874.956 li
3053.45 881.062 li
3060.29 881.135 li
3060.28 882.316 li
3055.47 882.265 li
3055.41 888.329 li
3053.23 888.307 li
3053.37 875.428 li
3036.87 875.252 li
3036.69 891.751 li
3045.19 891.842 li
3045.14 896.26 li
3028.74 896.086 li
3028.68 902.194 li
3025.37 902.159 li
3025.35 903.876 li
3021.15 903.832 li
3021.05 913.049 li
3017.45 913.011 li
3017.53 905.555 li
3020.06 905.582 li
3020.21 890.854 li
3028.62 890.943 li
3028.8 874.444 li
3027.7 874.433 li
3027.85 860.983 li
3014.79 860.845 li
3014.85 855.116 li
2998.35 854.941 li
2998.24 865.436 li
2997.04 865.423 li
2997.15 854.854 li
2997.52 854.858 li
2997.7 838.359 li
2981.2 838.184 li
2981.06 850.883 li
2972.29 850.79 li
2972.23 856.424 li
2960.4 856.298 li
2960.23 872.797 li
2965.19 872.85 li
2965.13 878.769 li
2965.12 878.768 li
2965.11 879.797 li
2961.65 879.761 li
2961.64 880.882 li
2959.09 880.854 li
2959.08 881.907 li
2958.82 881.904 li
2958.91 873.034 li
2942.42 872.859 li
2942.24 889.358 li
2942.82 889.364 li
2942.8 891.529 li
2933.4 891.43 li
2933.46 885.306 li
2935.88 885.331 li
2936.05 868.832 li
2919.55 868.657 li
2919.48 875.367 li
2912.52 875.293 li
2912.35 891.792 li
2916.89 891.841 li
2916.83 897.452 li
2916.45 897.448 li
2916.28 913.093 li
2914.88 913.078 li
2914.77 923.356 li
2911.16 923.318 li
2910.99 939.652 li
2907.14 939.611 li
2907.07 946.199 li
2902.38 946.149 li
2902.48 936.439 li
2885.98 936.265 li
2885.98 936.566 li
2882.99 936.535 li
2882.95 940.064 li
2871.18 939.939 li
2871.22 935.935 li
2881.61 936.045 li
2881.67 929.744 li
2893.34 929.868 li
2893.33 930.109 li
2909.83 930.285 li
2910.01 913.786 li
2896.68 913.645 li
2896.69 913.403 li
2885.31 913.282 li
2885.36 908.562 li
2901.57 908.733 li
2901.62 903.493 li
2909.85 903.58 li
2910.03 887.081 li
2896.8 886.94 li
2896.87 879.835 li
2902 879.89 li
2902.17 863.391 li
2897.17 863.337 li
2897.21 859.129 li
2901.65 859.176 li
2901.72 853.069 li
2916.1 853.222 li
2916.27 836.723 li
2899.77 836.548 li
2899.71 842.654 li
2886.44 842.514 li
2886.46 840.621 li
2869.96 840.446 li
2869.92 844.342 li
2860.28 844.24 li
2860.12 859.905 li
2844.72 859.742 li
2844.55 876.241 li
2860.26 876.407 li
2860.24 877.865 li
2856.77 877.829 li
2856.73 881.502 li
2844.79 881.376 li
2844.62 897.875 li
2844.96 897.878 li
2844.96 897.88 li
2861.46 898.055 li
2861.5 894.38 li
2870.64 894.477 li
2870.6 898.479 li
2868.97 898.461 li
2868.79 914.96 li
2880.17 915.081 li
2880.12 919.528 li
2867.82 919.397 li
2868 902.938 li
2861.96 902.874 li
2861.96 902.748 li
2852.21 902.645 li
2852.24 899.72 li
2835.74 899.545 li
2835.71 902.351 li
2831.52 902.307 li
2831.62 892.431 li
2821.1 892.319 li
2821.13 889.938 li
2826.15 889.991 li
2826.14 891.555 li
2842.63 891.73 li
2842.81 875.23 li
2833.4 875.131 li
2833.42 873.567 li
2829.59 873.526 li
2829.6 872.487 li
2829.3 872.483 li
2829.39 863.81 li
2820.94 863.72 li
2820.98 859.467 li
2804.48 859.292 li
2804.31 875.791 li
2812.76 875.881 li
2812.72 880.133 li
2813.02 880.137 li
2812.93 888.811 li
2816.75 888.852 li
2816.74 889.796 li
2804.63 889.667 li
2804.58 894.293 li
2789.92 894.137 li
2789.89 897.478 li
2789.57 897.475 li
2789.39 913.974 li
2805.89 914.148 li
2805.91 912.525 li
2812.73 912.598 li
2812.8 906.255 li
2814.97 906.277 li
2814.95 908.755 li
2825.74 908.87 li
2825.72 911.072 li
2820.39 911.016 li
2820.27 922.614 li
2813.85 922.546 li
2813.67 939.045 li
2824.22 939.157 li
2824.22 939.533 li
2836.08 939.659 li
2836.07 941.084 li
2834.72 941.069 li
2834.72 940.654 li
2818.22 940.479 li
2818.1 952.489 li
2812.19 952.427 li
2812.28 943.938 li
2795.78 943.763 li
2795.75 946.313 li
2795.22 946.307 li
2795.29 940.039 li
2809.28 940.188 li
2809.34 934.707 li
2813.39 934.751 li
2813.57 918.251 li
2797.07 918.076 li
2797.01 923.557 li
2796.93 923.556 li
2796.94 922.318 li
2794.83 922.296 li
2794.88 917.694 li
2788.62 917.628 li
2788.76 903.967 li
2786.09 903.938 li
2786.2 894.153 li
2786.43 894.156 li
2786.46 890.928 li
2802.41 891.097 li
2802.58 874.598 li
2793.13 874.497 li
2793.17 870.536 li
2781.14 870.408 li
2781.25 860.479 li
2765.79 860.314 li
2765.88 851.688 li
2751.89 851.54 li
2752.04 837.033 li
2736.07 836.864 li
2736.12 831.59 li
2734.08 831.568 li
2734.23 817.007 li
2729.83 816.961 li
2729.86 813.727 li
2713.37 813.552 li
2713.33 816.929 li
2698.55 816.771 li
2698.37 833.271 li
2714.87 833.445 li
2714.91 830.068 li
2717.25 830.094 li
2717.15 839.645 li
2719.54 839.67 li
2719.48 844.601 li
2705.36 844.451 li
2705.19 860.95 li
2710.6 861.007 li
2710.58 862.523 li
2709.06 862.508 li
2708.9 876.789 li
2699.06 876.684 li
2698.92 889.451 li
2693.26 889.392 li
2693.16 898.544 li
2687.4 898.482 li
2687.26 911.906 li
2679.58 911.824 li
2679.62 908.303 li
2670.44 908.206 li
2670.45 906.877 li
2665.51 906.824 li
2665.53 904.914 li
2674.72 905.011 li
2674.73 903.949 li
2684.71 904.055 li
2684.84 892.576 li
2689.14 892.622 li
2689.32 876.123 li
2672.82 875.948 li
2672.73 884.314 li
2667.53 884.259 li
2667.49 888.434 li
2660.11 888.355 li
2660.12 887.02 li
2657.04 886.987 li
2657.1 881.005 li
2651.71 880.947 li
2651.74 877.685 li
2651.25 877.68 li
2651.3 873.056 li
2634.8 872.881 li
2634.63 889.38 li
2635.12 889.385 li
2635.07 894.009 li
2640.46 894.065 li
2640.43 897.329 li
2643.51 897.361 li
2643.45 903.344 li
2649.05 903.403 li
2648.99 908.76 li
2653.93 908.813 li
2653.8 920.925 li
2645.42 920.836 li
2645.4 923.189 li
2640.76 923.14 li
2640.68 930.948 li
2636.95 930.909 li
2636.96 930.02 li
2630.2 929.948 li
2630.22 927.184 li
2638.87 927.275 li
2639.04 910.776 li
2622.55 910.602 li
2622.52 913.078 li
2612.82 912.975 li
2612.92 903.174 li
2617.29 903.221 li
2617.33 899.449 li
2629.02 899.574 li
2629.19 883.075 li
2612.69 882.899 li
2612.65 886.67 li
2600.96 886.546 li
2600.84 897.718 li
2596.48 897.671 li
2596.43 902.231 li
2593.43 902.199 li
2593.52 894.029 li
2577.02 893.854 li
2576.84 910.354 li
2583.18 910.42 li
2583.1 918.591 li
2585.17 918.612 li
2585.1 926.115 li
2584.33 926.107 li
2584.24 934.946 li
2583.26 934.936 li
2583.37 924.976 li
2582.14 924.962 li
2582.28 911.737 li
2574.21 911.652 li
2574.3 903.438 li
2572.37 903.417 li
2572.5 890.987 li
2583.13 891.101 li
2583.21 883.138 li
2584.72 883.153 li
2584.89 866.654 li
2583.56 866.64 li
2583.59 864.163 li
2589.6 864.227 li
2589.69 855.875 li
2591.01 855.889 li
2591.03 853.784 li
2593.41 853.81 li
2593.41 853.857 li
2609.91 854.032 li
2610.02 844.03 li
2612.88 844.061 li
2613.06 827.562 li
2596.56 827.387 li
2596.55 827.694 li
2592.32 827.649 li
2592.44 816.554 li
2599.23 816.626 li
2599.25 814.992 li
2600.7 815.008 li
2600.87 798.508 li
2587.65 798.368 li
2587.77 786.742 li
2571.27 786.567 li
2571.13 799.634 li
2558.9 799.504 li
2558.77 812.119 li
2558.6 812.118 li
2558.42 828.616 li
2574.92 828.792 li
2574.97 824.391 li
2575.86 824.4 li
2575.81 828.452 li
2588.71 828.589 li
2588.62 837.258 li
2588.1 837.252 li
2588.08 839.357 li
2574.68 839.215 li
2574.59 847.566 li
2573.28 847.553 li
2573.11 863.414 li
2568.6 863.366 li
2568.7 853.569 li
2554.12 853.415 li
2554.17 848.675 li
2562 848.758 li
2562.18 832.259 li
2550.98 832.14 li
2551.03 827.668 li
2534.53 827.493 li
2534.47 832.775 li
2526.96 832.696 li
2526.78 849.195 li
2537.66 849.311 li
2537.59 856.214 li
2552.17 856.368 li
2552.06 866.314 li
2547.63 866.267 li
2547.47 881.893 li
2534.09 881.751 li
2534.05 884.651 li
2533.58 884.646 li
2533.49 893.232 li
2528.73 893.182 li
2528.72 894.297 li
2525.66 894.264 li
2525.71 889.235 li
2524.01 889.218 li
2524.04 886.479 li
2514.78 886.381 li
2514.83 881.64 li
2511.07 881.6 li
2511.17 872.725 li
2513.69 872.751 li
2513.87 856.252 li
2502.9 856.136 li
2503.06 841.351 li
2486.56 841.176 li
2486.45 851.23 li
2486.45 851.23 li
2486.27 867.729 li
2494.72 867.819 li
2494.57 881.888 li
2498.33 881.928 li
2498.33 882.269 li
2493.02 882.212 li
2493.15 869.456 li
2484.13 869.36 li
2484.24 858.347 li
2476.86 858.268 li
2476.98 847.337 li
2484.74 847.42 li
2484.89 833.01 li
2498.81 833.158 li
2498.99 816.658 li
2485.52 816.516 li
2485.67 802.896 li
2475.92 802.792 li
2476.1 786.325 li
2459.6 786.15 li
2459.42 802.649 li
2469.17 802.753 li
2469.06 812.805 li
2465.09 812.763 li
2464.91 829.262 li
2481.41 829.437 li
2481.52 819.352 li
2482.46 819.362 li
2482.34 830.894 li
2468.41 830.745 li
2468.29 842.915 li
2466.1 842.893 li
2466.24 830.447 li
2451.02 830.285 li
2451.13 819.862 li
2440.34 819.748 li
2440.48 806.703 li
2423.98 806.528 li
2423.8 823.027 li
2434.6 823.142 li
2434.46 836.187 li
2449.67 836.349 li
2449.56 846.771 li
2460.48 846.887 li
2460.39 855.542 li
2447.6 855.406 li
2447.44 870.203 li
2437.76 870.101 li
2437.73 873.234 li
2423.17 873.08 li
2423.13 877.62 li
2421.27 877.601 li
2421.16 888.598 li
2418.75 888.572 li
2418.8 884.258 li
2417.33 884.242 li
2417.38 878.767 li
2415.24 878.744 li
2415.38 864.966 li
2409.27 864.9 li
2409.41 851.698 li
2392.92 851.523 li
2392.76 866.085 li
2389.53 866.051 li
2389.54 865.36 li
2373.04 865.185 li
2372.87 881.684 li
2376.45 881.722 li
2376.44 882.413 li
2387.08 882.525 li
2386.99 890.899 li
2396.63 891.001 li
2396.54 898.869 li
2393.15 898.834 li
2393.18 896.288 li
2376.68 896.113 li
2376.63 900.685 li
2369.44 900.608 li
2369.29 914.276 li
2367.38 914.256 li
2367.46 907.429 li
2362.2 907.373 li
2362.27 900.267 li
2375.26 900.404 li
2375.44 883.905 li
2359.91 883.74 li
2359.97 877.91 li
2347.54 877.778 li
2347.54 877.074 li
2363.55 877.244 li
2363.73 860.745 li
2347.23 860.57 li
2347.14 868.986 li
2332.68 868.833 li
2332.83 854.29 li
2332.01 854.281 li
2332.12 844.596 li
2315.62 844.421 li
2315.44 860.92 li
2316.26 860.929 li
2316.17 869.916 li
2313.51 869.888 li
2313.56 864.962 li
2312.77 864.954 li
2312.83 859.238 li
2296.34 859.063 li
2296.26 866.012 li
2291.72 865.964 li
2291.85 854.188 li
2298.01 854.253 li
2298.11 845.108 li
2305.41 845.187 li
2305.46 840.116 li
2317.34 840.242 li
2317.44 830.966 li
2318.94 830.981 li
2319.12 814.482 li
2302.62 814.308 li
2302.52 823.584 li
2301.02 823.568 li
2300.97 828.639 li
2300.8 828.637 li
2300.85 824.179 li
2288.32 824.046 li
2288.36 819.914 li
2271.86 819.739 li
2271.69 836.238 li
2284.21 836.371 li
2284.2 837.605 li
2281.69 837.579 li
2281.55 851.011 li
2280.28 850.997 li
2280.38 841.069 li
2263.88 840.895 li
2263.8 848.502 li
2262.13 848.484 li
2262.14 847.65 li
2249.08 847.512 li
2249.1 846.41 li
2235.16 846.263 li
2235.26 836.771 li
2221.46 836.625 li
2221.53 829.748 li
2211.1 829.638 li
2211.2 820.384 li
2194.7 820.209 li
2194.53 836.708 li
2204.96 836.818 li
2204.94 838.584 li
2195.15 838.479 li
2194.97 854.979 li
2211.47 855.153 li
2211.56 846.144 li
2218.66 846.219 li
2218.59 853.096 li
2232.52 853.243 li
2232.42 862.734 li
2245.47 862.873 li
2245.46 863.975 li
2247.48 863.996 li
2247.47 864.829 li
2250.26 864.859 li
2250.26 865.173 li
2266.76 865.349 li
2266.84 857.427 li
2275.31 857.517 li
2275.23 864.849 li
2270.5 864.798 li
2270.47 867.208 li
2255.58 867.05 li
2255.4 883.549 li
2259.43 883.592 li
2259.38 888.076 li
2267.24 888.159 li
2267.21 890.762 li
2266.67 890.756 li
2266.69 889.006 li
2250.19 888.831 li
2250.11 896.653 li
2250.09 896.653 li
2250.26 880.218 li
2241.26 880.122 li
2241.42 865.224 li
2224.92 865.049 li
2224.74 881.548 li
2233.74 881.644 li
2233.73 883.236 li
2219.87 883.089 li
2219.71 898.553 li
2218.93 898.545 li
2219.01 891.313 li
2207.38 891.189 li
2207.53 877.083 li
2205.46 877.061 li
2205.54 869.522 li
2193.18 869.392 li
2193.34 854.285 li
2176.85 854.11 li
2176.67 870.609 li
2189.03 870.74 li
2188.93 879.919 li
2187.33 879.902 li
2187.34 879.235 li
2187.1 879.232 li
2187.15 874.926 li
2175.34 874.8 li
2175.38 871.786 li
2173.6 871.768 li
2173.66 865.755 li
2157.17 865.579 li
2157.01 880.65 li
2150.51 880.582 li
2150.54 877.227 li
2148.69 877.207 li
2148.78 869.396 li
2140.29 869.306 li
2140.4 859.408 li
2133.98 859.341 li
2134.09 848.965 li
2117.59 848.789 li
2117.42 864.891 li
2104.04 864.748 li
2103.99 869.498 li
2097.87 869.433 li
2097.85 872.063 li
2095.27 872.036 li
2095.1 888.535 li
2111.6 888.71 li
2111.62 886.08 li
2114.2 886.107 li
2114.25 881.357 li
2120.37 881.423 li
2120.54 865.321 li
2123.84 865.356 li
2123.73 875.732 li
2132.21 875.822 li
2132.1 885.72 li
2133.95 885.739 li
2133.94 886.536 li
2119.44 886.382 li
2119.41 889.203 li
2110.59 889.11 li
2110.53 894.641 li
2095.29 894.479 li
2095.23 900.114 li
2080.68 899.96 li
2080.66 901.6 li
2075.8 901.548 li
2075.75 906.391 li
2061.24 906.236 li
2061.15 914.646 li
2050.68 914.535 li
2050.69 913.79 li
2034.19 913.615 li
2034.17 915.464 li
2032.13 915.442 li
2032.15 913.964 li
2030.55 913.947 li
2030.62 907.141 li
2031.63 907.15 li
2031.65 905.123 li
2035.56 905.164 li
2035.48 912.232 li
2051.98 912.408 li
2051.99 911.589 li
2057.22 911.645 li
2057.4 895.146 li
2055.9 895.13 li
2056.04 882.161 li
2055.74 882.158 li
2055.77 879.486 li
2047.08 879.395 li
2047.08 879.049 li
2048.5 879.063 li
2048.63 866.429 li
2049.56 866.438 li
2049.43 878.455 li
2064.58 878.615 li
2064.52 884.918 li
2065.2 884.925 li
2065.07 896.521 li
2081.57 896.695 li
2081.62 892.652 li
2090.72 892.749 li
2090.9 876.25 li
2082.16 876.157 li
2082.3 862.688 li
2087.55 862.744 li
2087.65 853.354 li
2103.53 853.521 li
2103.6 846.131 li
2107.04 846.168 li
2107.22 829.669 li
2095.08 829.54 li
2095.15 823.489 li
2089.91 823.434 li
2089.94 820.946 li
2073.44 820.771 li
2073.3 833.41 li
2061.07 833.28 li
2061.13 827.12 li
2050.78 827.01 li
2050.88 817.172 li
2034.38 816.997 li
2034.24 829.85 li
2031.64 829.822 li
2031.61 832.648 li
2027.38 832.604 li
2027.25 845.137 li
2027.1 845.136 li
2026.93 861.635 li
2042.82 861.804 li
2042.82 862.502 li
2032.17 862.39 li
2032.13 865.793 li
2030.72 865.778 li
2030.59 877.799 li
2028.75 877.779 li
2028.77 875.909 li
2026.53 875.886 li
2026.61 868.431 li
2017.2 868.331 li
2017.3 858.28 li
2010.31 858.206 li
2010.38 851.674 li
2008.99 851.659 li
2009 850.25 li
2012.89 850.291 li
2012.98 841.662 li
2023.67 841.775 li
2023.84 825.276 li
2007.34 825.102 li
2007.25 833.73 li
1997.49 833.627 li
1997.66 817.45 li
1981.16 817.275 li
1981.13 819.631 li
1970.24 819.516 li
1970.29 814.809 li
1958.84 814.688 li
1958.85 813.543 li
1968.81 813.648 li
1968.89 805.712 li
1975.67 805.784 li
1975.56 815.682 li
1992.06 815.856 li
1992.24 799.357 li
1985.37 799.285 li
1985.39 797.737 li
1985.62 797.74 li
1985.79 781.241 li
1969.3 781.066 li
1969.21 789.215 li
1968.98 789.212 li
1968.89 797.148 li
1965.76 797.115 li
1965.93 781.668 li
1949.43 781.492 li
1949.25 797.991 li
1952.47 798.025 li
1952.4 804.936 li
1948.54 804.895 li
1948.65 794.806 li
1937.92 794.692 li
1938.01 785.605 li
1921.51 785.431 li
1921.34 801.929 li
1932.07 802.043 li
1931.97 811.13 li
1942.37 811.24 li
1942.26 821.329 li
1953.72 821.45 li
1953.65 827.386 li
1939.91 827.24 li
1939.79 839.212 li
1938.13 839.194 li
1938.23 829.606 li
1937.8 829.603 li
1937.87 823.704 li
1921.58 823.532 li
1921.61 820.896 li
1919.83 820.877 li
1919.88 816.749 li
1913.84 816.685 li
1913.96 805.146 li
1912.72 805.134 li
1912.88 790.373 li
1898.44 790.22 li
1898.52 782.871 li
1882.02 782.696 li
1881.98 786.458 li
1870 786.331 li
1869.83 802.83 li
1886.33 803.005 li
1886.37 799.243 li
1896.28 799.349 li
1896.21 806.697 li
1897.44 806.71 li
1897.28 821.471 li
1903.32 821.534 li
1903.3 823.976 li
1901.5 823.956 li
1901.32 840.455 li
1908.52 840.531 li
1908.51 841.207 li
1921.6 841.347 li
1921.57 844.127 li
1912.47 844.03 li
1912.45 845.774 li
1900.63 845.648 li
1900.72 837.27 li
1900.45 837.267 li
1900.55 827.442 li
1884.05 827.268 li
1884.01 831.583 li
1875.24 831.489 li
1875.06 847.988 li
1884.1 848.085 li
1884.05 853.5 li
1881.6 853.474 li
1881.58 855.104 li
1877.95 855.065 li
1877.88 861.54 li
1877.03 861.531 li
1876.92 871.928 li
1876.67 871.926 li
1876.8 859.689 li
1863.53 859.549 li
1863.56 856.635 li
1863.4 856.634 li
1863.5 847.664 li
1862.16 847.649 li
1862.21 842.812 li
1845.71 842.637 li
1845.64 849.071 li
1837.01 848.979 li
1837.11 840.164 li
1834.86 840.141 li
1834.96 830.29 li
1826.66 830.201 li
1826.71 826.174 li
1821.54 826.119 li
1821.58 822.56 li
1813.16 822.47 li
1813.24 814.686 li
1796.74 814.511 li
1796.62 825.868 li
1782.87 825.722 li
1782.72 839.545 li
1775.66 839.47 li
1775.49 855.969 li
1780.95 856.027 li
1780.9 860.731 li
1779.91 860.721 li
1779.84 867.215 li
1774.94 867.163 li
1774.78 882.476 li
1773.23 882.459 li
1772.68 882.453 li
1771.24 882.438 li
1771.34 873.102 li
1766.33 873.048 li
1766.46 860.578 li
1765.47 860.567 li
1765.52 855.863 li
1770.99 855.922 li
1771.17 839.422 li
1754.67 839.247 li
1754.56 849.376 li
1749.09 849.318 li
1748.92 865.817 li
1749.91 865.828 li
1749.79 876.902 li
1754.8 876.955 li
1754.72 884.477 li
1746.04 884.385 li
1746.2 869.177 li
1729.7 869.002 li
1729.69 869.715 li
1727.31 869.689 li
1727.34 867.153 li
1710.84 866.979 li
1710.73 877.621 li
1710.61 877.62 li
1710.7 868.716 li
1694.2 868.54 li
1694.19 869.375 li
1689.07 869.321 li
1689.08 868.459 li
1705.21 868.63 li
1705.26 864.082 li
1713.2 864.166 li
1713.29 855.352 li
1714.77 855.367 li
1714.66 865.782 li
1731.16 865.957 li
1731.28 854.391 li
1747.18 854.56 li
1747.36 838.061 li
1741.94 838.003 li
1742.11 821.716 li
1738.08 821.673 li
1738.21 809.902 li
1721.71 809.728 li
1721.55 825.058 li
1720.41 825.046 li
1720.37 829.073 li
1712.07 828.985 li
1711.98 837.453 li
1697.75 837.302 li
1697.71 841.065 li
1684.57 840.926 li
1684.51 845.765 li
1683.17 845.75 li
1683.05 857.634 li
1669.62 857.491 li
1669.58 861.729 li
1669.33 861.727 li
1669.35 859.327 li
1668.5 859.318 li
1668.57 852.844 li
1664.94 852.805 li
1664.96 851.175 li
1663.71 851.162 li
1663.87 836.164 li
1662.94 836.154 li
1663.02 828.297 li
1667.78 828.347 li
1667.95 811.848 li
1651.45 811.673 li
1651.31 824.798 li
1646.56 824.747 li
1646.45 834.571 li
1646.18 834.568 li
1646.09 842.947 li
1634.27 842.822 li
1634.29 841.078 li
1625.19 840.981 li
1625.23 836.888 li
1625.65 836.892 li
1625.68 834.256 li
1629.04 834.292 li
1629.01 837.565 li
1645.51 837.74 li
1645.68 821.241 li
1643.88 821.223 li
1643.96 813.821 li
1627.46 813.646 li
1627.42 817.773 li
1625.64 817.755 li
1625.61 820.391 li
1609.33 820.218 li
1609.27 826.115 li
1608.84 826.111 li
1608.74 835.698 li
1607.08 835.681 li
1607.21 823.709 li
1593.47 823.563 li
1593.52 818.627 li
1605.37 818.752 li
1605.48 807.665 li
1615.49 807.771 li
1615.66 791.272 li
1599.17 791.097 li
1599.05 802.185 li
1595.19 802.144 li
1595.27 794.235 li
1598.49 794.27 li
1598.67 777.771 li
1582.17 777.595 li
1582 793.042 li
1578.78 793.008 li
1578.61 809.507 li
1588.96 809.617 li
1588.95 810.762 li
1577.11 810.636 li
1577.06 815.343 li
1566.16 815.227 li
1566.18 812.871 li
1549.68 812.696 li
1549.51 828.873 li
1539.75 828.769 li
1539.84 820.14 li
1523.34 819.965 li
1523.16 836.464 li
1533.85 836.577 li
1533.76 845.206 li
1537.65 845.248 li
1537.63 846.657 li
1536.24 846.643 li
1536.17 853.174 li
1529.18 853.1 li
1529.07 863.15 li
1520.2 863.057 li
1520.29 855.035 li
1519.5 855.027 li
1519.66 839.75 li
1519.51 839.749 li
1519.65 827.215 li
1512.81 827.143 li
1512.98 811.464 li
1496.48 811.289 li
1496.38 821.126 li
1486.02 821.017 li
1485.95 827.177 li
1480.8 827.122 li
1480.83 824.163 li
1468.51 824.032 li
1468.53 822.205 li
1475.64 822.28 li
1475.81 805.781 li
1470.73 805.727 li
1470.88 791.358 li
1454.38 791.183 li
1454.2 807.683 li
1459.29 807.736 li
1459.2 816.461 li
1444.96 816.31 li
1444.89 822.64 li
1439.89 822.587 li
1439.85 826.888 li
1427.88 826.761 li
1427.71 843.26 li
1443.11 843.424 li
1443.08 846.513 li
1458.95 846.682 li
1458.85 856.072 li
1464.1 856.128 li
1463.96 869.597 li
1455.22 869.504 li
1455.04 886.003 li
1464.15 886.1 li
1464.11 890.143 li
1480.61 890.317 li
1480.74 877.763 li
1480.99 877.766 li
1481.05 872.423 li
1496.63 872.588 li
1496.76 860.572 li
1499.1 860.597 li
1498.97 873.256 li
1483.99 873.098 li
1483.81 889.596 li
1488.3 889.644 li
1488.16 902.898 li
1484.2 902.856 li
1484.23 900.112 li
1469.73 899.959 li
1469.78 895.116 li
1464.92 895.064 li
1464.93 893.425 li
1448.43 893.25 li
1448.26 909.749 li
1452.64 909.796 li
1452.61 912.792 li
1442.58 912.686 li
1442.5 920.307 li
1441.37 920.295 li
1441.3 926.852 li
1435.08 926.786 li
1434.99 935.664 li
1428.71 935.598 li
1428.72 934.944 li
1428.8 934.945 li
1428.93 923.338 li
1434.2 923.394 li
1434.32 911.656 li
1437.84 911.693 li
1438.02 895.194 li
1435.12 895.163 li
1435.16 890.783 li
1451.1 890.952 li
1451.27 874.453 li
1450.84 874.448 li
1450.94 865.197 li
1448.36 865.17 li
1448.39 862.54 li
1431.89 862.365 li
1431.71 878.864 li
1434.29 878.892 li
1434.26 881.521 li
1434.69 881.526 li
1434.69 881.938 li
1418.76 881.768 li
1418.71 886.229 li
1412.89 886.167 li
1412.89 886.699 li
1405.35 886.619 li
1405.31 890.696 li
1404.88 890.691 li
1404.74 903.837 li
1400.37 903.79 li
1400.42 899.585 li
1396.76 899.546 li
1396.83 892.287 li
1380.33 892.112 li
1380.32 893.251 li
1378.44 893.231 li
1378.43 894.02 li
1367.33 893.901 li
1367.27 898.919 li
1362.03 898.863 li
1362.13 889.465 li
1359.9 889.441 li
1359.92 887.622 li
1360.82 887.632 li
1360.83 886.965 li
1375.06 887.115 li
1375.11 882.809 li
1375.34 882.812 li
1375.38 879.797 li
1382.24 879.87 li
1382.14 889.324 li
1386.95 889.376 li
1386.94 889.979 li
1403.44 890.153 li
1403.49 885.799 li
1411.89 885.889 li
1412.07 869.39 li
1409.2 869.358 li
1409.21 868.149 li
1422.41 868.29 li
1422.58 851.791 li
1406.08 851.615 li
1406.04 856.266 li
1392.83 856.125 li
1392.66 872.539 li
1389.03 872.501 li
1389.19 857.43 li
1372.69 857.254 li
1372.63 863.267 li
1370.86 863.248 li
1370.82 866.262 li
1366.37 866.215 li
1366.42 862.011 li
1369.58 862.044 li
1369.76 845.545 li
1353.26 845.37 li
1353.14 856.537 li
1350.05 856.505 li
1350.15 847.328 li
1333.65 847.152 li
1333.47 863.651 li
1349.9 863.826 li
1349.85 867.98 li
1338.59 867.861 li
1338.44 881.968 li
1326.82 881.844 li
1326.71 892.508 li
1325.46 892.495 li
1325.49 890.098 li
1325.95 890.103 li
1325.98 887.149 li
1326.64 887.156 li
1326.81 870.657 li
1321.31 870.599 li
1321.47 855.461 li
1304.97 855.285 li
1304.81 870.184 li
1295.81 870.088 li
1295.63 886.587 li
1309.02 886.729 li
1308.98 890.798 li
1302.54 890.729 li
1302.5 893.971 li
1295.53 893.896 li
1295.69 878.701 li
1279.49 878.529 li
1279.5 877.677 li
1286.52 877.751 li
1286.57 873.268 li
1290.59 873.31 li
1290.6 873.145 li
1293.34 873.173 li
1293.51 856.674 li
1277.01 856.499 li
1277.01 856.665 li
1275.88 856.652 li
1275.9 854.243 li
1259.41 854.068 li
1259.4 855.008 li
1250.12 854.909 li
1250.19 847.961 li
1233.69 847.786 li
1233.61 855.146 li
1231.62 855.125 li
1231.78 839.483 li
1231.16 839.477 li
1231.23 832.912 li
1214.73 832.737 li
1214.62 842.423 li
1213.8 842.414 li
1213.63 858.913 li
1226.27 859.048 li
1226.13 871.567 li
1226.37 871.57 li
1226.33 874.851 li
1230.65 874.896 li
1230.52 887.069 li
1247.02 887.244 li
1247.05 884.912 li
1255.02 884.997 li
1255.02 885.118 li
1262.91 885.201 li
1262.91 885.908 li
1260.82 885.886 li
1260.81 886.788 li
1253.77 886.713 li
1253.72 891.596 li
1244.14 891.494 li
1244.14 891.836 li
1229.8 891.684 li
1229.75 895.963 li
1226.12 895.924 li
1226.14 893.312 li
1209.64 893.137 li
1209.61 896.501 li
1204.9 896.451 li
1205.01 886.015 li
1202.53 885.988 li
1202.53 885.491 li
1199.92 885.464 li
1199.95 882.126 li
1186.96 881.988 li
1186.96 881.962 li
1202.5 882.127 li
1202.67 865.628 li
1186.17 865.453 li
1186.11 871.283 li
1170.58 871.118 li
1170.4 887.617 li
1183.39 887.756 li
1183.32 894.862 li
1178.06 894.807 li
1177.99 901.634 li
1176.08 901.613 li
1176.23 887.945 li
1169.03 887.869 li
1169.08 883.297 li
1162.91 883.231 li
1162.99 876.004 li
1158.9 875.961 li
1158.97 869.492 li
1169.61 869.605 li
1169.62 868.914 li
1173.2 868.952 li
1173.22 866.776 li
1184.05 866.892 li
1184.07 864.727 li
1199.1 864.887 li
1199.17 858.345 li
1204.79 858.404 li
1204.96 841.905 li
1188.46 841.73 li
1188.4 848.271 li
1182.78 848.212 li
1182.76 850.376 li
1167.72 850.217 li
1167.7 852.394 li
1156.88 852.278 li
1156.87 852.969 li
1153.29 852.931 li
1153.2 861.305 li
1152.07 861.293 li
1152.07 860.946 li
1147.45 860.897 li
1147.54 851.511 li
1131.05 851.335 li
1130.9 865.114 li
1128.75 865.092 li
1128.69 870.566 li
1127.22 870.551 li
1127.18 874.865 li
1125.28 874.845 li
1125.38 865.439 li
1123.02 865.415 li
1123.08 859.283 li
1108.53 859.128 li
1108.56 855.995 li
1098.89 855.892 li
1099.04 841.095 li
1086.25 840.959 li
1086.39 828.25 li
1078.62 828.168 li
1078.75 815.997 li
1064.83 815.85 li
1064.95 804.318 li
1078.42 804.462 li
1078.6 787.963 li
1062.1 787.787 li
1061.95 801.408 li
1048.48 801.266 li
1048.43 806.283 li
1048.34 806.282 li
1048.17 822.781 li
1062.18 822.93 li
1062.08 832.321 li
1069.84 832.404 li
1069.75 840.647 li
1066.6 840.614 li
1066.57 843.301 li
1062.34 843.256 li
1062.17 859.755 li
1078.67 859.931 li
1078.7 857.243 li
1082.37 857.282 li
1082.37 857.419 li
1092.05 857.521 li
1091.93 868.763 li
1091.71 868.761 li
1091.67 872.932 li
1076.52 872.771 li
1076.34 889.271 li
1079.73 889.306 li
1079.61 900.504 li
1094.59 900.663 li
1094.5 909.538 li
1091.52 909.507 li
1091.52 909.417 li
1075.02 909.242 li
1074.92 918.267 li
1073.08 918.247 li
1073.06 919.707 li
1063.73 919.608 li
1063.85 908.077 li
1077.32 908.22 li
1077.49 891.721 li
1074.72 891.691 li
1074.88 877.157 li
1058.38 876.981 li
1058.37 877.49 li
1056.13 877.466 li
1056.25 866.964 li
1047.75 866.874 li
1047.76 866.533 li
1051.52 866.573 li
1051.7 850.074 li
1049.17 850.048 li
1049.25 842.423 li
1060.21 842.539 li
1060.39 826.04 li
1043.89 825.865 li
1043.73 840.65 li
1032.77 840.534 li
1032.68 849.233 li
1030.72 849.213 li
1030.55 865.712 li
1035.03 865.759 li
1035.03 865.935 li
1031.26 865.895 li
1031.21 870.637 li
1021.96 870.538 li
1021.93 873.276 li
1020.23 873.259 li
1020.17 878.287 li
1017.11 878.254 li
1017.12 877.14 li
1012.37 877.09 li
1012.46 868.504 li
1011.98 868.499 li
1012.01 865.598 li
995.514 865.423 li
995.505 866.273 li
992.27 866.238 li
992.094 882.738 li
995.055 882.77 li
995.008 887.155 li
989.769 887.1 li
989.91 873.8 li
979.285 873.688 li
979.402 862.67 li
989.635 862.778 li
989.735 853.313 li
994.33 853.362 li
994.473 839.837 li
1009.06 839.992 li
1009.18 827.807 li
1012.55 827.842 li
1012.72 811.343 li
996.226 811.168 li
996.178 815.64 li
984.976 815.521 li
984.801 832.02 li
992.638 832.103 li
992.587 836.843 li
978.005 836.688 li
977.905 846.152 li
973.311 846.104 li
973.307 846.437 li
962.903 846.326 li
962.877 848.807 li
954.248 848.716 li
954.357 838.352 li
937.858 838.177 li
937.837 840.217 li
922.948 840.059 li
922.773 856.558 li
939.272 856.732 li
939.293 854.692 li
950.584 854.813 li
950.553 857.807 li
936.213 857.654 li
936.039 874.153 li
952.538 874.328 li
952.634 865.199 li
961.369 865.292 li
961.362 865.926 li
962.867 865.941 li
962.782 873.904 li
973.407 874.017 li
973.297 884.341 li
968.754 884.293 li
968.834 876.787 li
952.334 876.612 li
952.248 884.782 li
949.247 884.75 li
949.296 880.19 li
933.242 880.02 li
933.401 865.078 li
916.902 864.903 li
916.727 881.402 li
932.78 881.572 li
932.636 895.145 li
922.935 895.041 li
922.961 892.564 li
906.462 892.39 li
906.287 908.889 li
914.933 908.979 li
914.903 911.744 li
908.137 911.672 li
908.017 922.983 li
901.365 922.913 li
901.368 922.653 li
892.46 922.56 li
892.476 921.087 li
904.306 921.213 li
904.48 904.713 li
899.846 904.664 li
899.871 902.311 li
891.495 902.222 li
891.624 890.109 li
896.56 890.162 li
896.616 884.806 li
902.219 884.864 li
902.282 878.883 li
905.363 878.915 li
905.398 875.652 li
910.796 875.71 li
910.845 871.086 li
911.333 871.091 li
911.508 854.592 li
895.009 854.417 li
894.96 859.041 li
894.472 859.035 li
894.438 862.299 li
889.04 862.241 li
888.976 868.224 li
885.895 868.19 li
885.838 873.548 li
880.235 873.488 li
880.083 887.876 li
875.147 887.824 li
875.133 889.153 li
870.174 889.101 li
870.22 884.799 li
877.445 884.875 li
877.478 881.763 li
878.371 881.772 li
878.545 865.273 li
862.046 865.099 li
862.014 868.211 li
861.121 868.201 li
860.981 881.419 li
853.755 881.342 li
853.626 893.467 li
840.469 893.327 li
840.459 894.25 li
840.414 894.249 li
840.499 886.229 li
852.542 886.357 li
852.717 869.858 li
847.052 869.798 li
847.188 857.031 li
837.339 856.927 li
837.491 842.646 li
835.964 842.629 li
836.044 835.092 li
844.665 835.183 li
844.84 818.684 li
829.893 818.525 li
830.057 803.117 li
829.717 803.113 li
829.785 796.796 li
813.286 796.621 li
813.11 813.12 li
813.449 813.124 li
813.382 819.44 li
828.329 819.6 li
828.196 832.171 li
819.575 832.079 li
819.4 848.578 li
820.927 848.595 li
820.816 858.97 li
830.665 859.074 li
830.553 869.61 li
821.184 869.511 li
821.188 869.065 li
804.689 868.891 li
804.514 885.39 li
811.001 885.458 li
810.975 887.962 li
818.854 888.045 li
818.747 898.118 li
821.938 898.152 li
821.921 899.779 li
806.653 899.617 li
806.479 916.116 li
812.017 916.175 li
812.009 916.879 li
812.348 916.882 li
812.281 923.199 li
815.303 923.231 li
815.274 925.995 li
812.974 925.971 li
812.991 924.339 li
802.901 924.231 li
802.98 916.771 li
804.309 916.785 li
804.484 900.286 li
800.865 900.248 li
800.896 897.425 li
795.897 897.372 li
795.921 895.139 li
801.326 895.196 li
801.411 887.178 li
802.597 887.19 li
802.772 870.691 li
799.884 870.66 li
799.888 870.299 li
783.389 870.123 li
783.23 885.042 li
773.399 884.938 li
773.424 882.579 li
762.751 882.466 li
762.855 872.681 li
765.908 872.713 li
765.813 881.573 li
782.313 881.748 li
782.488 865.249 li
776.042 865.181 li
776.137 856.321 li
769.65 856.252 li
769.656 855.631 li
781.681 855.759 li
781.773 847.133 li
790.09 847.222 li
789.939 861.394 li
806.438 861.569 li
806.613 845.069 li
797.261 844.971 li
797.313 840.134 li
812.123 840.291 li
812.127 839.839 li
814.19 839.86 li
814.365 823.361 li
811.479 823.331 li
811.552 816.44 li
795.053 816.265 li
794.899 830.771 li
793.263 830.754 li
793.379 819.891 li
776.879 819.715 li
776.705 836.215 li
780.853 836.259 li
780.821 839.249 li
765.357 839.085 li
765.252 849.015 li
753.227 848.887 li
753.185 852.849 li
743.731 852.748 li
743.556 869.247 li
746.39 869.277 li
746.356 872.449 li
741.317 872.396 li
741.339 870.341 li
741.334 870.341 li
741.361 867.771 li
724.862 867.596 li
724.687 884.095 li
724.692 884.095 li
724.665 886.664 li
732.819 886.751 li
732.779 890.524 li
739.601 890.597 li
739.583 892.22 li
756.083 892.395 li
756.182 882.991 li
756.918 882.999 li
756.78 896.065 li
750.513 895.999 li
750.464 900.601 li
748.354 900.578 li
748.341 901.815 li
748.26 901.814 li
748.318 896.334 li
731.819 896.159 li
731.645 912.657 li
735.697 912.701 li
735.639 918.182 li
749.634 918.33 li
749.567 924.597 li
749.038 924.592 li
749.065 922.042 li
732.566 921.867 li
732.476 930.355 li
726.565 930.293 li
726.693 918.282 li
710.194 918.107 li
710.189 918.523 li
708.841 918.509 li
708.856 917.084 li
720.722 917.21 li
720.726 916.834 li
731.274 916.945 li
731.449 900.446 li
721.704 900.343 li
721.798 891.525 li
719.797 891.505 li
719.92 879.897 li
715.901 879.854 li
715.915 878.573 li
699.416 878.398 li
699.401 879.798 li
683.766 879.632 li
683.764 879.758 li
677.726 879.693 li
677.551 896.192 li
683.367 896.255 li
683.316 901.005 li
673.925 900.905 li
673.758 916.619 li
667.129 916.549 li
667.239 906.155 li
665.149 906.134 li
665.303 891.575 li
676.679 891.696 li
676.854 875.197 li
660.648 875.025 li
660.69 871.024 li
665.69 871.077 li
665.79 861.741 li
669.443 861.779 li
669.618 845.28 li
653.119 845.105 li
653.02 854.442 li
649.366 854.403 li
649.274 863.089 li
640.305 862.993 li
640.364 857.418 li
626.774 857.274 li
626.912 844.326 li
610.413 844.15 li
610.237 860.649 li
612.653 860.676 li
612.587 866.8 li
603.187 866.7 li
603.291 856.906 li
587.436 856.738 li
587.479 852.731 li
581.14 852.665 li
581.262 841.196 li
574.393 841.123 li
574.427 837.894 li
576.162 837.911 li
576.308 824.157 li
588.914 824.291 li
589.089 807.792 li
572.59 807.617 li
572.444 821.371 li
559.838 821.237 li
559.796 825.188 li
558.062 825.169 li
558.04 827.184 li
549.643 827.095 li
549.468 843.594 li
555.929 843.662 li
555.849 851.197 li
560.806 851.25 li
560.714 859.895 li
564.572 859.936 li
564.502 866.595 li
552.191 866.464 li
552.022 882.418 li
551.805 882.416 li
551.934 870.258 li
542.242 870.155 li
542.32 862.786 li
533.913 862.696 li
534.036 851.019 li
535.13 851.03 li
535.19 845.302 li
548.247 845.439 li
548.422 828.941 li
531.923 828.766 li
531.862 834.495 li
518.806 834.356 li
518.663 847.805 li
517.569 847.794 li
517.395 864.293 li
525.802 864.382 li
525.646 879.109 li
528.176 879.137 li
528.097 886.592 li
524.497 886.554 li
524.595 877.337 li
520.386 877.292 li
520.404 875.575 li
516.53 875.534 li
516.62 867.064 li
500.792 866.896 li
500.814 864.839 li
509.308 864.93 li
509.316 864.125 li
513.286 864.167 li
513.461 847.668 li
508.122 847.611 li
508.293 831.444 li
491.794 831.27 li
491.729 837.374 li
476.453 837.212 li
476.278 853.711 li
492.777 853.887 li
492.842 847.781 li
496.958 847.825 li
496.953 848.297 li
492.983 848.255 li
492.847 861.134 li
490.67 861.111 li
490.734 855.047 li
474.235 854.871 li
474.197 858.481 li
459.742 858.328 li
459.567 874.827 li
476.066 875.003 li
476.104 871.393 li
482.595 871.461 li
482.543 876.374 li
472.755 876.271 li
472.722 879.39 li
468.865 879.349 li
468.794 886.065 li
458.267 885.954 li
458.332 879.824 li
441.833 879.649 li
441.831 879.817 li
436.827 879.764 li
436.857 876.965 li
432.377 876.917 li
432.468 868.295 li
427.194 868.238 li
427.195 868.202 li
413.022 868.052 li
413.05 865.437 li
413.365 865.44 li
413.416 860.626 li
413.486 860.627 li
413.661 844.128 li
397.162 843.953 li
397.145 845.618 li
381.039 845.447 li
380.864 861.946 li
392.257 862.067 li
392.19 868.409 li
388.614 868.371 li
388.613 868.458 li
387.97 868.451 li
387.858 878.945 li
380.77 878.87 li
380.613 893.649 li
374.159 893.581 li
374.065 902.419 li
365.566 902.329 li
365.716 888.176 li
372.865 888.251 li
372.889 886.01 li
379.195 886.077 li
379.371 869.578 li
378.713 869.57 li
378.764 864.746 li
370.424 864.657 li
370.478 859.527 li
361.865 859.437 li
361.898 856.385 li
375.961 856.533 li
376.136 840.034 li
359.637 839.859 li
359.516 851.291 li
353.729 851.229 li
353.739 850.238 li
337.24 850.063 li
337.187 855.058 li
324.055 854.918 li
323.922 867.468 li
317.366 867.398 li
317.434 860.994 li
311.657 860.933 li
311.727 854.367 li
298.883 854.23 li
298.931 849.712 li
300.965 849.733 li
300.989 847.509 li
304.933 847.551 li
305.019 839.457 li
313.825 839.551 li
314 823.052 li
303.012 822.935 li
303.104 814.263 li
302.066 814.251 li
302.088 812.225 li
310.011 812.309 li
310.186 795.81 li
293.687 795.635 li
293.669 797.281 li
278.632 797.122 li
278.587 801.433 li
263.326 801.271 li
263.151 817.77 li
279.65 817.944 li
279.696 813.634 li
285.571 813.696 li
285.43 827.05 li
286.467 827.061 li
286.43 830.586 li
297.418 830.703 li
297.415 830.97 li
288.609 830.876 li
288.585 833.102 li
284.642 833.06 li
284.554 841.26 li
282.521 841.238 li
282.5 843.185 li
270.765 843.06 li
270.59 859.559 li
287.089 859.734 li
287.11 857.788 li
295.188 857.873 li
295.061 869.922 li
294.46 869.915 li
294.413 874.381 li
284.658 874.277 li
284.676 872.605 li
268.177 872.431 li
268.068 882.602 li
262.541 882.543 li
262.683 869.234 li
246.184 869.06 li
246.048 881.825 li
244.614 881.81 li
244.669 876.633 li
237.297 876.555 li
237.373 869.455 li
220.874 869.279 li
220.722 883.587 li
218.104 883.56 li
218.007 892.757 li
211.009 892.683 li
210.966 896.747 li
204.197 896.675 li
204.33 884.132 li
213.811 884.232 li
213.986 867.733 li
198.582 867.57 li
198.701 856.295 li
182.202 856.12 li
182.027 872.619 li
197.432 872.782 li
197.339 881.518 li
187.858 881.417 li
187.796 887.306 li
177.941 887.2 li
177.858 895.033 li
176.51 895.02 li
176.335 911.519 li
192.834 911.693 li
192.917 903.86 li
194.265 903.875 li
194.328 897.986 li
201.673 898.064 li
201.604 904.628 li
194.322 904.551 li
194.232 913.021 li
193.867 913.018 li
193.783 920.947 li
193.624 920.946 li
193.72 911.908 li
177.221 911.733 li
177.22 911.789 li
172.945 911.743 li
172.771 928.242 li
182.693 928.348 li
182.671 930.389 li
168.152 930.234 li
168.057 939.264 li
168.03 939.264 li
168.202 923.068 li
165.922 923.044 li
165.983 917.291 li
170.112 917.335 li
170.288 900.836 li
153.789 900.661 li
153.688 910.065 li
151.271 910.04 li
151.378 899.986 li
134.879 899.811 li
134.718 914.984 li
133.172 914.969 li
133.121 919.857 li
128.646 919.811 li
128.73 911.905 li
114.217 911.751 li
114.298 904.068 li
101.077 903.928 li
101.078 903.856 li
104.116 903.889 li
104.291 887.39 li
87.792 887.214 li
87.6729 898.422 li
84.6348 898.39 li
84.6011 901.528 li
83.7231 901.519 li
83.6089 912.292 li
74.9004 912.199 li
74.8296 918.899 li
68.2402 918.829 li
68.3608 907.491 li
67.3003 907.48 li
67.3164 905.979 li
78.2876 906.095 li
78.3711 898.227 li
87.5879 898.324 li
87.7627 881.825 li
83.6738 881.782 li
83.7456 875.037 li
89.5693 875.099 li
89.4863 882.959 li
89.6196 882.96 li
89.6001 884.782 li
105.806 884.954 li
105.636 900.939 li
122.135 901.114 li
122.165 898.296 li
126.196 898.339 li
126.371 881.84 li
109.872 881.665 li
109.842 884.482 li
106.105 884.443 li
106.247 871.105 li
115.163 871.2 li
115.338 854.701 li
99.7295 854.535 li
99.7886 848.961 li
83.2896 848.786 li
83.2368 853.741 li
80.8306 853.716 li
80.8369 853.128 li
82.3633 853.145 li
82.5386 836.646 li
82.0283 836.64 li
82.0884 830.976 li
87.2021 831.03 li
87.043 845.998 li
100.149 846.137 li
100.068 853.688 li
116.568 853.862 li
116.612 849.649 li
118.541 849.67 li
118.716 833.171 li
103.682 833.012 li
103.717 829.674 li
94.4668 829.575 li
94.5581 820.997 li
99.875 821.054 li
100.05 804.555 li
95.8438 804.51 li
95.9048 798.784 li
79.4058 798.608 li
79.3008 808.477 li
76.0015 808.441 li
75.8267 824.94 li
78.0146 824.964 li
77.9731 828.909 li
74.2983 828.871 li
74.3628 822.804 li
58.0684 822.631 li
58.0952 820.113 li
69.2866 820.232 li
69.4619 803.733 li
52.9629 803.559 li
52.9131 808.251 li
43.585 808.152 li
43.7344 794.056 li
27.2354 793.881 li
27.0601 810.38 li
41.6958 810.535 li
41.5464 824.631 li
57.8408 824.804 li
57.6885 839.128 li
64.4834 839.2 li
64.3135 855.251 li
75.3179 855.368 li
75.1631 869.944 li
69.5044 869.885 li
69.6196 859.025 li
62.3477 858.947 li
62.4971 844.863 li
45.998 844.688 li
45.8232 861.188 li
53.0952 861.265 li
52.98 872.107 li
46.124 872.035 li
46.1704 867.698 li
29.6709 867.523 li
29.5488 879.056 li
18.1113 878.934 li
17.9365 895.433 li
22.2632 895.479 li
22.2627 895.544 li
28.7432 895.612 li
28.7212 897.667 li
26.1343 897.64 li
25.9775 912.395 li
21.5762 912.349 li
21.6914 901.488 li
19.8857 901.47 li
19.8945 900.627 li
18.3652 900.611 li
18.3896 898.344 li
14.4526 898.302 li
14.5449 889.598 li
15.4292 889.607 li
15.6045 873.108 li
-.894531 872.934 li
-.970703 880.096 li
-1.89014 880.086 li
-1.82666 874.109 li
-18.3257 873.934 li
-18.501 890.433 li
-5.53174 890.57 li
-5.59473 896.548 li
-2.03027 896.586 li
-2.10498 903.651 li
1.01709 903.685 li
.963867 908.671 li
-12.4092 908.528 li
-12.4253 910.049 li
-16.7896 910.002 li
-16.7173 903.181 li
-33.2163 903.006 li
-33.3159 912.386 li
-36.5493 912.352 li
-36.583 915.526 li
-48.1479 915.403 li
-48.1201 912.796 li
-46.0986 912.817 li
-46.0889 911.854 li
-39.3159 911.927 li
-39.1406 895.428 li
-46.4663 895.35 li
-46.4585 894.585 li
-33.6445 894.721 li
-33.5781 888.48 li
-30.291 888.516 li
-30.1157 872.017 li
-31.2437 872.005 li
-31.1816 866.148 li
-27.6279 866.187 li
-27.6587 869.064 li
-11.1597 869.239 li
-10.9922 853.478 li
-6.23779 853.528 li
-6.38184 867.095 li
10.1172 867.27 li
10.2188 857.731 li
13.0923 857.762 li
13.0723 859.648 li
27.979 859.807 li
27.8984 867.403 li
44.3975 867.579 li
44.5723 851.08 li
29.666 850.922 li
29.7466 843.324 li
22.3462 843.246 li
22.4565 832.852 li
5.95752 832.676 li
5.86719 841.185 li
2.7251 841.151 li
2.62402 850.689 li
.55127 850.667 li
.695313 837.101 li
-4.19922 837.049 li
-4.19385 836.52 li
-20.6929 836.345 li
-20.835 849.757 li
-37.084 849.585 li
-37.252 865.424 li
-43.0728 865.362 li
-43.0054 859.015 li
-59.5044 858.84 li
-59.5171 860.043 li
-64.0029 859.995 li
-63.832 843.903 li
-80.3311 843.728 li
-80.4185 851.96 li
-90.5996 851.853 li
-90.6997 861.298 li
-102.684 861.171 li
-102.579 851.303 li
-118.927 851.129 li
-118.836 842.576 li
-127.103 842.489 li
-127.01 833.754 li
-143.509 833.578 li
-143.684 850.077 li
-135.417 850.165 li
-135.51 858.9 li
-119.163 859.074 li
-119.253 867.627 li
-106.894 867.758 li
-106.996 877.369 li
-116.918 877.264 li
-117.015 886.311 li
-128.259 886.191 li
-128.381 897.688 li
-130.706 897.662 li
-130.815 907.968 li
-142.956 907.839 li
-142.794 892.61 li
-148.353 892.552 li
-148.527 909.051 li
-145.834 909.079 li
-145.867 912.186 li
-148.561 912.157 li
-148.818 936.398 li
-148.522 936.401 li
-148.46 930.547 li
-145.237 930.581 li
-145.335 939.802 li
-148.854 939.765 li
-154.241 1537.4 li
2670.13 1567.37 li
2669.98 1566.15 2669.83 1564.92 2669.67 1563.7 cv
2671.24 1563.96 2673.05 1563.98 2674.32 1564.54 cv
2676.07 1565.31 2677.42 1566.47 2678.93 1567.47 cv
3145.31 1572.42 li
3145.45 1559.48 3147.28 1296.55 3147.42 1283.62 cv
3147.68 1283.62 li
3147.86 1267.12 li
3147.59 1267.12 li
3147.69 1257.66 3147.79 1248.21 3147.89 1238.75 cv
3148.16 1238.76 li
3148.51 1206.15 li
3148.24 1206.15 li
3148.25 1204.89 3148.27 1203.64 3148.28 1202.38 cv
3148.54 1202.38 li
3149.24 1137.03 li
3148.97 1137.03 li
3148.98 1136.83 3148.98 1136.62 3148.98 1136.42 cv
3149.25 1136.42 li
3149.61 1102.4 li
3149.34 1102.39 li
3149.35 1101.2 3149.37 1100.01 3149.38 1098.82 cv
3149.64 1098.82 li
3149.93 1072.3 li
3149.66 1072.3 li
3149.67 1071.67 3149.67 1071.05 3149.68 1070.42 cv
3149.95 1070.42 li
3150.32 1035.58 li
3150.05 1035.57 li
3150.08 1033.23 3150.1 1030.88 3150.13 1028.53 cv
3150.39 1028.53 li
3151.05 966.132 li
3150.03 966.121 li
3150.04 964.742 li
3151.07 964.753 li
3151.36 937.562 li
3143.47 937.479 li
3143.61 924.101 li
3135.24 924.012 li
3135.31 917.601 li
3125.24 917.494 li
3125.29 913.373 li
3129.77 913.421 li
3129.77 913.385 li
3133.18 913.421 li
3133.15 916.447 li
3148.32 916.608 li
3148.23 924.741 li
3151.49 924.775 li
3151.93 883.455 li
3149.22 883.427 li
3149.28 878.071 li
3151.99 878.101 li
3152.16 861.601 li
3143.22 861.506 li
3143.1 873.095 li
cp
f
2762.52 780.391 mo
2762.66 767.617 li
2757.42 767.562 li
2757.48 762.004 li
2740.98 761.828 li
2740.81 777.7 li
2729.11 777.576 li
2729.05 783.17 li
2721.58 783.091 li
2721.4 799.59 li
2737.9 799.765 li
2737.96 794.171 li
2745.44 794.25 li
2745.61 778.379 li
2746.04 778.384 li
2745.98 783.941 li
2758.02 784.068 li
2757.9 795.69 li
2745.37 795.557 li
2745.29 803.734 li
2736.9 803.646 li
2736.72 820.145 li
2753.22 820.319 li
2753.31 812.143 li
2761.7 812.231 li
2761.74 808.394 li
2775.13 808.536 li
2775.31 792.037 li
2774.44 792.027 li
2774.56 780.519 li
2762.52 780.391 li
cp
f
2445.96 711.807 mo
2429.46 711.631 li
2429.29 728.13 li
2445.79 728.306 li
2445.96 711.807 li
cp
f
1431.61 802.401 mo
1432.22 802.408 li
1432.4 785.909 li
1415.9 785.733 li
1415.84 791.138 li
1415.23 791.131 li
1415.06 807.63 li
1431.56 807.805 li
1431.61 802.401 li
cp
f
2194.45 750.527 mo
2177.95 750.352 li
2177.77 766.852 li
2194.27 767.026 li
2194.45 750.527 li
cp
f
464.066 851.569 mo
464.241 835.071 li
462.797 835.056 li
462.906 824.769 li
446.407 824.593 li
446.36 829.078 li
441.947 829.031 li
441.841 839.009 li
432.441 838.909 li
432.266 855.408 li
435.087 855.438 li
434.915 871.646 li
442.132 871.723 li
442.086 876.057 li
458.585 876.232 li
458.76 859.733 li
451.543 859.656 li
451.589 855.321 li
448.768 855.292 li
448.809 851.408 li
464.066 851.569 li
cp
f
2387.04 797.025 mo
2370.54 796.85 li
2370.36 813.349 li
2386.86 813.524 li
2387.04 797.025 li
cp
f
1193.98 838.108 mo
1210.48 838.283 li
1210.65 821.784 li
1194.15 821.609 li
1193.98 838.108 li
cp
f
2950.8 726.313 mo
2967.3 726.488 li
2967.47 709.989 li
2951.53 709.82 li
2951.61 702.849 li
2935.11 702.674 li
2934.93 719.173 li
2950.88 719.342 li
2950.8 726.313 li
cp
f
864.394 716.303 mo
880.893 716.478 li
881.067 699.979 li
878.201 699.949 li
878.241 696.16 li
861.742 695.985 li
861.567 712.484 li
864.434 712.514 li
864.394 716.303 li
cp
f
300.056 743.729 mo
306.034 743.792 li
306.209 727.293 li
301.794 727.247 li
301.912 716.236 li
285.413 716.062 li
285.237 732.561 li
289.652 732.607 li
289.6 737.543 li
283.622 737.48 li
283.446 753.979 li
299.945 754.154 li
300.056 743.729 li
cp
f
2841.88 829.592 mo
2847.81 829.654 li
2847.98 813.155 li
2831.48 812.98 li
2831.42 819.339 li
2825.49 819.276 li
2825.32 835.775 li
2841.82 835.95 li
2841.88 829.592 li
cp
f
612.874 843.563 mo
613.049 827.063 li
612.874 827.062 li
612.902 824.436 li
596.403 824.261 li
596.228 840.76 li
596.403 840.762 li
596.375 843.388 li
612.874 843.563 li
cp
f
1983.65 713.532 mo
1983.66 713.136 li
1967.16 712.96 li
1966.98 729.46 li
1982.09 729.62 li
1982.09 730.016 li
1997.66 730.181 li
1997.53 743.213 li
1993.64 743.172 li
1993.63 743.403 li
1984.14 743.303 li
1984.13 744.016 li
1983.1 744.005 li
1982.93 760.504 li
1999.42 760.679 li
1999.43 759.966 li
2000.47 759.977 li
2000.47 759.745 li
2009.96 759.847 li
2010.1 746.492 li
2013.99 746.533 li
2014.17 730.034 li
1998.59 729.869 li
1998.76 713.692 li
1983.65 713.532 li
cp
f
1877.9 755.932 mo
1861.4 755.757 li
1861.22 772.256 li
1877.72 772.431 li
1877.9 755.932 li
cp
f
1838.4 819.859 mo
1854.9 820.034 li
1855.08 803.535 li
1838.58 803.36 li
1838.4 819.859 li
cp
f
1997.57 787.978 mo
1995.37 787.954 li
1995.19 804.453 li
2011.69 804.628 li
2011.74 800.124 li
2013.94 800.147 li
2014.12 783.648 li
1997.62 783.474 li
1997.57 787.978 li
cp
f
62.1528 788.743 mo
78.6519 788.918 li
78.8267 772.419 li
62.3276 772.244 li
62.1528 788.743 li
cp
f
788.236 791.288 mo
802.427 791.438 li
802.603 774.939 li
789.207 774.797 li
789.247 770.96 li
772.748 770.784 li
772.643 780.697 li
771.848 780.689 li
771.672 797.188 li
788.171 797.363 li
788.236 791.288 li
cp
f
807.714 741.312 mo
791.215 741.137 li
791.041 757.636 li
807.54 757.811 li
807.714 741.312 li
cp
f
2551.51 794.667 mo
2551.62 784.58 li
2563.3 784.704 li
2563.47 768.205 li
2546.97 768.03 li
2546.87 778.116 li
2540.57 778.05 li
2540.63 772.568 li
2524.13 772.394 li
2523.95 788.893 li
2535.07 789.011 li
2535.06 789.479 li
2529.83 789.424 li
2529.66 805.923 li
2537.14 806.002 li
2537.06 813.653 li
2553.56 813.828 li
2553.74 797.329 li
2546.25 797.25 li
2546.28 794.611 li
2551.51 794.667 li
cp
f
1730.62 781.742 mo
1747.12 781.918 li
1747.3 765.419 li
1730.8 765.243 li
1730.62 781.742 li
cp
f
2379.46 836.746 mo
2395.95 836.921 li
2396.13 820.422 li
2386.98 820.325 li
2386.98 819.908 li
2370.48 819.733 li
2370.31 836.232 li
2379.46 836.329 li
2379.46 836.746 li
cp
f
2569.32 779.22 mo
2585.82 779.396 li
2585.99 762.896 li
2569.5 762.721 li
2569.32 779.22 li
cp
f
2810.32 749.434 mo
2823.1 749.57 li
2823.28 733.071 li
2806.78 732.896 li
2806.76 734.396 li
2793.98 734.261 li
2793.81 750.76 li
2810.31 750.935 li
2810.32 749.434 li
cp
f
1524.99 652.37 mo
1508.5 652.194 li
1508.32 668.694 li
1524.82 668.869 li
1524.99 652.37 li
cp
f
827.76 659.223 mo
811.261 659.047 li
811.086 675.547 li
827.585 675.722 li
827.76 659.223 li
cp
f
171.859 898.073 mo
172.018 883.17 li
175.002 883.202 li
175.178 866.703 li
158.679 866.527 li
158.653 868.902 li
148.254 868.792 li
148.184 875.33 li
147.979 875.327 li
148.15 859.23 li
144.192 859.188 li
144.277 851.14 li
136.267 851.055 li
136.36 842.292 li
119.861 842.117 li
119.686 858.616 li
127.696 858.701 li
127.683 859.919 li
126.233 859.903 li
126.058 876.402 li
142.557 876.577 li
142.566 875.672 li
145.286 875.7 li
145.115 891.798 li
154.673 891.899 li
154.624 896.56 li
155.375 896.568 li
155.36 897.898 li
171.859 898.073 li
cp
f
1532.5 790.693 mo
1516.01 790.519 li
1515.83 807.018 li
1532.33 807.192 li
1532.5 790.693 li
cp
f
3014.13 810.506 mo
3015.68 810.521 li
3015.79 799.402 li
3025.46 799.505 li
3025.63 783.006 li
3014.3 782.886 li
3014.4 773.572 li
3028.77 773.725 li
3028.95 757.226 li
3012.45 757.051 li
3012.34 766.843 li
2997.97 766.69 li
2997.8 783.189 li
3009.13 783.31 li
3009.01 793.95 li
2999.35 793.848 li
2999.26 802.16 li
2997.72 802.144 li
2997.55 818.643 li
3014.05 818.817 li
3014.13 810.506 li
cp
f
2978.21 804.941 mo
2994.71 805.116 li
2994.89 788.617 li
2978.39 788.441 li
2978.21 804.941 li
cp
f
2438.69 782.842 mo
2455.19 783.017 li
2455.36 766.518 li
2438.86 766.343 li
2438.69 782.842 li
cp
f
2429.07 784.911 mo
2418.38 784.798 li
2418.49 775.009 li
2401.99 774.834 li
2401.93 780.149 li
2401.4 780.144 li
2401.23 796.643 li
2405.63 796.689 li
2405.5 809.26 li
2422 809.435 li
2422.08 801.338 li
2428.89 801.41 li
2429.07 784.911 li
cp
f
2222.61 728.318 mo
2230.73 728.405 li
2230.91 711.906 li
2214.41 711.73 li
2214.26 725.901 li
2206.13 725.815 li
2205.96 742.314 li
2222.46 742.489 li
2222.61 728.318 li
cp
f
2096.32 710.388 mo
2079.82 710.213 li
2079.65 726.712 li
2091.81 726.841 li
2091.64 742.234 li
2108.14 742.41 li
2108.32 725.911 li
2096.16 725.782 li
2096.32 710.388 li
cp
f
1887.6 682.748 mo
1871.1 682.573 li
1870.93 699.072 li
1887.43 699.247 li
1887.6 682.748 li
cp
f
1706.31 764.872 mo
1706.48 748.373 li
1689.99 748.198 li
1689.81 764.696 li
1706.31 764.872 li
cp
f
1374.76 679.266 mo
1358.26 679.091 li
1358.09 695.59 li
1374.59 695.765 li
1374.76 679.266 li
cp
f
1143.39 675.595 mo
1126.89 675.419 li
1126.71 691.918 li
1143.21 692.094 li
1143.39 675.595 li
cp
f
943.384 732.528 mo
956.778 732.67 li
956.756 734.775 li
973.255 734.951 li
973.43 718.452 li
969.697 718.412 li
969.794 709.234 li
959.615 709.126 li
959.632 707.53 li
972.526 707.667 li
972.701 691.168 li
965.916 691.096 li
966.043 679.022 li
949.544 678.847 li
949.37 695.347 li
956.155 695.418 li
956.038 706.515 li
943.144 706.378 li
942.969 722.877 li
943.486 722.882 li
943.384 732.528 li
cp
f
518.768 655.664 mo
502.269 655.489 li
502.093 671.988 li
518.592 672.163 li
518.768 655.664 li
cp
f
451.517 710.231 mo
468.016 710.406 li
468.19 693.907 li
452.675 693.742 li
452.717 689.835 li
436.218 689.661 li
436.042 706.16 li
451.558 706.324 li
451.517 710.231 li
cp
f
374.142 767.994 mo
357.643 767.819 li
357.467 784.318 li
373.966 784.493 li
374.142 767.994 li
cp
f
2419.62 836.376 mo
2419.8 819.877 li
2418.23 819.86 li
2418.23 819.47 li
2401.74 819.295 li
2401.56 835.794 li
2403.13 835.811 li
2403.12 836.201 li
2419.62 836.376 li
cp
f
2203.29 802.661 mo
2203.46 786.162 li
2201.18 786.138 li
2201.28 776.808 li
2188.19 776.668 li
2188.25 771.167 li
2171.75 770.992 li
2171.57 787.491 li
2184.66 787.63 li
2184.62 791.63 li
2174.27 791.521 li
2174.25 793.824 li
2162.5 793.699 li
2162.32 810.198 li
2178.82 810.373 li
2178.85 808.07 li
2185.52 808.141 li
2185.41 819.263 li
2201.9 819.438 li
2202.08 802.939 li
2190.65 802.818 li
2190.66 802.527 li
2203.29 802.661 li
cp
f
1395.83 816.474 mo
1412.33 816.648 li
1412.51 800.149 li
1396.01 799.974 li
1395.83 816.474 li
cp
f
1184.38 794.692 mo
1200.88 794.867 li
1201.02 781.315 li
1203.11 781.337 li
1203.29 764.838 li
1186.79 764.663 li
1186.64 778.215 li
1184.56 778.193 li
1184.38 794.692 li
cp
f
310.333 757.568 mo
310.159 774.067 li
316.043 774.13 li
315.98 780.115 li
332.479 780.29 li
332.654 763.791 li
326.77 763.729 li
326.833 757.743 li
310.333 757.568 li
cp
f
1201.45 803.314 mo
1184.96 803.14 li
1184.78 819.639 li
1201.28 819.813 li
1201.45 803.314 li
cp
f
848.969 797.143 mo
832.47 796.968 li
832.295 813.467 li
848.794 813.642 li
848.969 797.143 li
cp
f
2563.21 734.702 mo
2578.97 734.869 li
2579.08 724.717 li
2589.81 724.831 li
2589.72 733.499 li
2589.2 733.494 li
2589.18 735.599 li
2575.78 735.457 li
2575.69 744.099 li
2563.12 743.966 li
2563.21 734.702 li
cp
2546.61 744.824 mo
2559.47 744.961 li
2559.3 760.426 li
2575.8 760.602 li
2575.89 751.959 li
2592.11 752.131 li
2592.13 750.026 li
2605.52 750.168 li
2605.63 740.522 li
2606.14 740.527 li
2606.22 733.605 li
2614.48 733.692 li
2614.38 743.018 li
2630.88 743.193 li
2631.06 726.694 li
2617.05 726.545 li
2617.15 717.22 li
2600.65 717.045 li
2600.58 723.967 li
2593.43 723.892 li
2593.54 712.795 li
2600.33 712.867 li
2600.5 696.368 li
2584 696.193 li
2583.88 708.267 li
2577.09 708.195 li
2576.98 718.347 li
2562.64 718.194 li
2562.64 718.316 li
2546.19 718.141 li
2546.08 728.157 li
2539.33 728.085 li
2539.16 744.584 li
2546.61 744.663 li
2546.61 744.824 li
cp
f
2508.82 684.789 mo
2492.32 684.614 li
2492.14 701.113 li
2508.64 701.288 li
2508.82 684.789 li
cp
f
2398.94 668.335 mo
2382.45 668.16 li
2382.27 684.659 li
2398.77 684.834 li
2398.94 668.335 li
cp
f
1578.64 793.421 mo
1578.81 776.922 li
1562.31 776.747 li
1562.24 783.723 li
1554.51 783.641 li
1554.34 800.14 li
1555.43 800.151 li
1555.31 811.222 li
1571.81 811.396 li
1571.99 794.897 li
1570.89 794.886 li
1570.91 793.339 li
1578.64 793.421 li
cp
f
1388.24 838.472 mo
1371.74 838.297 li
1371.57 854.796 li
1388.07 854.971 li
1388.24 838.472 li
cp
f
1342.02 827.661 mo
1343.16 827.673 li
1343.14 829.438 li
1342 829.426 li
1342.02 827.661 li
cp
1351.62 846.028 mo
1351.69 839.118 li
1359.54 839.202 li
1359.72 822.703 li
1352.51 822.626 li
1352.63 811.272 li
1336.13 811.097 li
1336.03 820.351 li
1325.6 820.24 li
1325.53 827.116 li
1320.4 827.063 li
1320.57 810.857 li
1304.07 810.683 li
1303.89 827.182 li
1311.72 827.265 li
1311.69 830.007 li
1300.74 829.891 li
1300.68 836.345 li
1297.69 836.313 li
1297.68 837.415 li
1284.63 837.276 li
1284.61 838.424 li
1282.94 838.406 li
1283 832.865 li
1298.75 833.032 li
1298.93 816.533 li
1282.43 816.358 li
1282.28 830.478 li
1266.52 830.311 li
1266.5 832.106 li
1265.23 832.093 li
1265.29 826.792 li
1262.78 826.766 li
1262.92 813.164 li
1253.98 813.069 li
1254 811.186 li
1244.78 811.088 li
1244.86 803.082 li
1232.19 802.947 li
1232.35 787.791 li
1215.85 787.616 li
1215.68 804.115 li
1228.35 804.25 li
1228.19 819.406 li
1237.41 819.504 li
1237.33 827.51 li
1241.48 827.554 li
1241.42 833.895 li
1248.71 833.972 li
1248.62 843.116 li
1254.67 843.181 li
1254.61 848.48 li
1271.11 848.656 li
1271.13 846.86 li
1279.71 846.951 li
1279.63 854.872 li
1296.13 855.047 li
1296.14 853.899 li
1300.95 853.95 li
1300.96 852.849 li
1314.01 852.987 li
1314.08 846.533 li
1317.07 846.565 li
1317.1 843.528 li
1328.05 843.645 li
1328.12 836.768 li
1335.22 836.843 li
1335.12 845.854 li
1351.62 846.028 li
cp
f
1011.23 846.438 mo
1001.25 846.333 li
1001.07 862.832 li
1017.57 863.007 li
1017.71 850.079 li
1027.69 850.185 li
1027.86 833.686 li
1011.36 833.511 li
1011.23 846.438 li
cp
f
2935.32 851.709 mo
2933.78 851.692 li
2933.6 868.191 li
2950.1 868.366 li
2950.17 861.996 li
2951.71 862.013 li
2951.88 845.514 li
2935.38 845.339 li
2935.32 851.709 li
cp
f
2902.5 800.586 mo
2919 800.761 li
2919.18 784.262 li
2902.68 784.087 li
2902.5 800.586 li
cp
f
2874.05 839.851 mo
2890.55 840.025 li
2890.72 823.527 li
2874.23 823.352 li
2874.05 839.851 li
cp
f
2832.93 838.639 mo
2827.32 838.579 li
2827.15 855.079 li
2843.65 855.254 li
2843.66 854.37 li
2849.26 854.43 li
2849.44 837.931 li
2832.94 837.755 li
2832.93 838.639 li
cp
f
2855.81 794.224 mo
2856.46 794.23 li
2856.4 799.573 li
2872.9 799.749 li
2872.99 790.731 li
2874.19 790.744 li
2874.37 774.245 li
2874 774.241 li
2874.12 762.932 li
2857.62 762.757 li
2857.46 777.74 li
2857.46 777.74 li
2857.6 764.229 li
2841.1 764.054 li
2840.93 780.553 li
2845.86 780.605 li
2845.81 785.05 li
2839.4 784.981 li
2839.23 801.48 li
2855.73 801.656 li
2855.81 794.224 li
cp
f
2853.89 829.32 mo
2870.39 829.495 li
2870.56 812.996 li
2854.06 812.821 li
2853.89 829.32 li
cp
f
3015.21 709.251 mo
3018.84 709.29 li
3019.01 692.791 li
3002.51 692.616 li
3002.45 698.424 li
2998.82 698.385 li
2998.65 714.884 li
3015.15 715.06 li
3015.21 709.251 li
cp
f
3009.34 719.381 mo
2992.84 719.206 li
2992.67 735.705 li
3009.17 735.88 li
3009.34 719.381 li
cp
f
2997.7 765.806 mo
2998.1 765.811 li
2998.27 749.312 li
2981.77 749.136 li
2981.68 758.077 li
2981.28 758.072 li
2981.2 765.312 li
2970.18 765.194 li
2970.01 781.693 li
2986.51 781.868 li
2986.58 774.63 li
2997.6 774.747 li
2997.7 765.806 li
cp
f
2897.38 704.975 mo
2897.2 721.474 li
2902 721.525 li
2901.92 728.74 li
2906.68 728.79 li
2906.66 730.299 li
2923.16 730.475 li
2923.34 713.976 li
2918.58 713.925 li
2918.59 712.416 li
2913.8 712.365 li
2913.88 705.15 li
2897.38 704.975 li
cp
f
2912.19 676.176 mo
2895.69 676 li
2895.52 692.5 li
2912.01 692.675 li
2912.19 676.176 li
cp
f
2891.41 670.372 mo
2874.91 670.196 li
2874.73 686.696 li
2891.23 686.871 li
2891.41 670.372 li
cp
f
2858.62 686.855 mo
2842.12 686.68 li
2841.94 703.179 li
2858.44 703.354 li
2858.62 686.855 li
cp
f
2802.91 779.396 mo
2819.41 779.571 li
2819.59 763.072 li
2803.09 762.897 li
2802.91 779.396 li
cp
f
2754.23 834.937 mo
2770.73 835.111 li
2770.9 818.612 li
2754.4 818.438 li
2754.23 834.937 li
cp
f
2675.31 738.384 mo
2681.99 738.455 li
2681.93 744.295 li
2679.92 744.274 li
2679.74 760.773 li
2696.24 760.948 li
2696.31 753.892 li
2696.91 753.898 li
2696.76 767.554 li
2682.21 767.399 li
2682.03 783.898 li
2698.53 784.073 li
2698.69 768.727 li
2713.25 768.881 li
2713.29 764.907 li
2728.12 765.064 li
2728.29 748.566 li
2711.79 748.391 li
2711.75 752.364 li
2698.34 752.222 li
2698.5 737.414 li
2691.82 737.343 li
2691.98 722.06 li
2687.85 722.016 li
2687.92 715.365 li
2671.42 715.19 li
2671.25 731.689 li
2675.38 731.733 li
2675.31 738.384 li
cp
f
2676.02 748.569 mo
2659.52 748.394 li
2659.35 764.894 li
2675.85 765.068 li
2676.02 748.569 li
cp
f
2647.07 807.678 mo
2630.57 807.502 li
2630.39 824.001 li
2646.89 824.177 li
2647.07 807.678 li
cp
f
2457.6 754.208 mo
2457.43 770.707 li
2468.67 770.826 li
2468.67 770.912 li
2484.2 771.077 li
2484.17 773.894 li
2490.22 773.958 li
2490.13 781.814 li
2506.63 781.989 li
2506.81 765.49 li
2500.76 765.427 li
2500.84 757.569 li
2485.31 757.404 li
2485.34 754.588 li
2474.1 754.469 li
2474.1 754.383 li
2457.6 754.208 li
cp
f
2493.06 750.737 mo
2509.56 750.913 li
2509.74 734.414 li
2493.24 734.238 li
2493.06 750.737 li
cp
f
2499.82 714.257 mo
2483.32 714.083 li
2483.15 730.582 li
2499.65 730.756 li
2499.82 714.257 li
cp
f
2387.82 788.488 mo
2397.67 788.593 li
2397.84 772.094 li
2396.65 772.081 li
2396.72 764.788 li
2412.78 764.959 li
2412.8 762.919 li
2412.92 762.92 li
2413.1 746.421 li
2396.6 746.246 li
2396.58 748.286 li
2396.46 748.285 li
2396.38 755.708 li
2380.32 755.537 li
2380.15 772.036 li
2381.34 772.049 li
2381.32 774.562 li
2371.47 774.457 li
2371.29 790.956 li
2387.79 791.131 li
2387.82 788.488 li
cp
f
2376.08 745.657 mo
2392.58 745.832 li
2392.76 729.333 li
2376.26 729.158 li
2376.08 745.657 li
cp
f
2364.6 724.947 mo
2348.1 724.772 li
2347.92 741.271 li
2364.42 741.446 li
2364.6 724.947 li
cp
f
2326.52 786.966 mo
2310.02 786.791 li
2309.85 803.29 li
2326.35 803.465 li
2326.52 786.966 li
cp
f
2358.26 853.135 mo
2358.43 836.636 li
2352.89 836.577 li
2352.92 833.907 li
2336.42 833.731 li
2336.25 850.23 li
2341.79 850.29 li
2341.76 852.96 li
2358.26 853.135 li
cp
f
2327.59 783.386 mo
2344.08 783.562 li
2344.26 767.062 li
2327.76 766.887 li
2327.59 783.386 li
cp
f
2331.15 726.868 mo
2314.65 726.693 li
2314.47 743.192 li
2330.97 743.367 li
2331.15 726.868 li
cp
f
2300.79 749.148 mo
2305.58 749.199 li
2305.75 732.7 li
2301.82 732.658 li
2301.95 720.421 li
2285.45 720.246 li
2285.27 736.651 li
2284.43 736.642 li
2284.25 753.142 li
2300.75 753.316 li
2300.79 749.148 li
cp
f
2276.07 785.772 mo
2283.59 785.853 li
2283.76 769.354 li
2267.26 769.178 li
2267.1 784.218 li
2259.58 784.138 li
2259.41 800.637 li
2275.91 800.813 li
2276.07 785.772 li
cp
f
2245.23 842.896 mo
2261.73 843.071 li
2261.91 826.572 li
2245.41 826.397 li
2245.23 842.896 li
cp
f
2248.72 759.312 mo
2265.22 759.486 li
2265.28 753.641 li
2281.31 753.811 li
2281.48 737.312 li
2264.99 737.137 li
2264.92 742.982 li
2248.9 742.812 li
2248.72 759.312 li
cp
f
2235.52 744.691 mo
2219.02 744.516 li
2218.85 761.015 li
2235.35 761.189 li
2235.52 744.691 li
cp
f
2242.57 819.167 mo
2226.07 818.992 li
2225.9 835.491 li
2242.39 835.666 li
2242.57 819.167 li
cp
f
2247.67 741.199 mo
2264.17 741.374 li
2264.34 724.875 li
2247.84 724.7 li
2247.67 741.199 li
cp
f
2263.72 677.288 mo
2247.22 677.112 li
2247.05 693.611 li
2263.55 693.787 li
2263.72 677.288 li
cp
f
2245.77 657.993 mo
2229.28 657.817 li
2229.1 674.317 li
2245.6 674.492 li
2245.77 657.993 li
cp
f
2199.42 654.502 mo
2182.92 654.327 li
2182.75 670.826 li
2199.25 671.001 li
2199.42 654.502 li
cp
f
2139.95 697.327 mo
2123.45 697.152 li
2123.28 713.651 li
2139.78 713.826 li
2139.95 697.327 li
cp
f
2069.57 796.95 mo
2053.07 796.774 li
2052.89 813.273 li
2069.39 813.449 li
2069.57 796.95 li
cp
f
2100.87 750.331 mo
2084.37 750.156 li
2084.2 766.655 li
2100.7 766.83 li
2100.87 750.331 li
cp
f
2081.66 697.428 mo
2098.16 697.603 li
2098.34 681.104 li
2081.84 680.929 li
2081.66 697.428 li
cp
f
2082.33 648.49 mo
2065.83 648.315 li
2065.66 664.814 li
2082.16 664.989 li
2082.33 648.49 li
cp
f
2025.57 674.183 mo
2042.07 674.358 li
2042.25 657.859 li
2038.24 657.816 li
2038.37 645.827 li
2021.87 645.651 li
2021.69 662.15 li
2025.7 662.193 li
2025.57 674.183 li
cp
f
1988.67 677.683 mo
1972.17 677.508 li
1972 694.007 li
1988.5 694.182 li
1988.67 677.683 li
cp
f
1979.78 696.136 mo
1963.28 695.961 li
1963.1 712.46 li
1979.6 712.635 li
1979.78 696.136 li
cp
f
1944.44 672.749 mo
1957.68 672.889 li
1957.86 656.39 li
1941.36 656.215 li
1941.26 665.347 li
1928.02 665.206 li
1927.84 681.705 li
1944.34 681.88 li
1944.44 672.749 li
cp
f
1920.88 652.18 mo
1904.38 652.004 li
1904.21 668.503 li
1920.71 668.679 li
1920.88 652.18 li
cp
f
1856.2 701.299 mo
1839.7 701.124 li
1839.52 717.623 li
1856.02 717.798 li
1856.2 701.299 li
cp
f
1811.92 694.231 mo
1795.42 694.056 li
1795.24 710.555 li
1811.74 710.73 li
1811.92 694.231 li
cp
f
1763.44 713.253 mo
1746.94 713.078 li
1746.77 729.578 li
1763.27 729.752 li
1763.44 713.253 li
cp
f
1671.72 706.515 mo
1671.54 723.014 li
1673.41 723.034 li
1673.29 734.324 li
1689.79 734.499 li
1689.97 718 li
1688.1 717.98 li
1688.22 706.69 li
1671.72 706.515 li
cp
f
1615.98 707.935 mo
1632.48 708.11 li
1632.65 691.611 li
1616.15 691.436 li
1615.98 707.935 li
cp
f
1546.66 678.038 mo
1530.16 677.863 li
1529.99 694.362 li
1546.48 694.537 li
1546.66 678.038 li
cp
f
1503.57 690.124 mo
1487.07 689.949 li
1486.9 706.448 li
1503.39 706.623 li
1503.57 690.124 li
cp
f
1434.4 776.061 mo
1450.9 776.235 li
1451.07 759.736 li
1434.57 759.562 li
1434.4 776.061 li
cp
f
1423 745.832 mo
1439.5 746.006 li
1439.68 729.507 li
1423.18 729.332 li
1423 745.832 li
cp
f
1433.81 697.361 mo
1417.31 697.186 li
1417.13 713.685 li
1433.63 713.86 li
1433.81 697.361 li
cp
f
1402.05 686.64 mo
1385.55 686.465 li
1385.38 702.964 li
1401.88 703.139 li
1402.05 686.64 li
cp
f
1347.15 757.473 mo
1330.65 757.298 li
1330.48 773.797 li
1346.98 773.972 li
1347.15 757.473 li
cp
f
1327.73 749.856 mo
1311.23 749.681 li
1311.06 766.181 li
1327.56 766.355 li
1327.73 749.856 li
cp
f
1316.48 694.294 mo
1299.98 694.119 li
1299.8 710.618 li
1316.3 710.793 li
1316.48 694.294 li
cp
f
1280.41 683.105 mo
1263.91 682.93 li
1263.73 699.429 li
1280.23 699.604 li
1280.41 683.105 li
cp
f
1223.24 755.337 mo
1206.74 755.162 li
1206.57 771.661 li
1223.07 771.836 li
1223.24 755.337 li
cp
f
1256.54 763.384 mo
1273.04 763.559 li
1273.22 747.06 li
1256.72 746.884 li
1256.54 763.384 li
cp
f
1244.32 679.739 mo
1227.82 679.564 li
1227.65 696.063 li
1244.15 696.238 li
1244.32 679.739 li
cp
f
1206.4 733.608 mo
1189.9 733.434 li
1189.73 749.933 li
1206.23 750.107 li
1206.4 733.608 li
cp
f
1183.38 838.57 mo
1183.56 822.071 li
1167.59 821.901 li
1167.74 807.386 li
1151.33 807.212 li
1151.49 791.875 li
1142.15 791.776 li
1142.29 779.353 li
1135.48 779.28 li
1135.49 777.894 li
1146.18 778.008 li
1146.35 761.509 li
1129.85 761.333 li
1129.75 771.122 li
1119.06 771.009 li
1119.03 774.097 li
1112.29 774.025 li
1112.12 790.524 li
1125.67 790.668 li
1125.61 795.677 li
1134.95 795.776 li
1134.84 806.24 li
1127.59 806.163 li
1127.41 822.663 li
1143.91 822.838 li
1144.07 808.297 li
1151.23 808.373 li
1151.17 813.843 li
1147.89 813.809 li
1147.72 830.308 li
1164.22 830.482 li
1164.29 823.85 li
1167.04 823.879 li
1166.89 838.396 li
1183.38 838.57 li
cp
f
1279.36 794.834 mo
1295.86 795.01 li
1296.04 778.511 li
1279.54 778.335 li
1279.36 794.834 li
cp
f
1305.27 723.488 mo
1288.77 723.313 li
1288.6 739.813 li
1305.09 739.987 li
1305.27 723.488 li
cp
f
1272.26 718.351 mo
1288.76 718.526 li
1288.94 702.027 li
1272.44 701.852 li
1272.26 718.351 li
cp
f
1336.43 690.097 mo
1319.93 689.922 li
1319.76 706.421 li
1336.26 706.596 li
1336.43 690.097 li
cp
f
1238 696.831 mo
1237.82 713.33 li
1247.48 713.433 li
1247.37 723.84 li
1235.26 723.711 li
1235.08 740.21 li
1248.04 740.348 li
1248.02 742.145 li
1264.52 742.319 li
1264.7 725.82 li
1263.85 725.812 li
1263.9 721.378 li
1269.76 721.44 li
1269.93 704.941 li
1254.41 704.776 li
1254.5 697.006 li
1238 696.831 li
cp
f
1186.29 748.833 mo
1169.79 748.658 li
1169.61 765.157 li
1186.11 765.332 li
1186.29 748.833 li
cp
f
1277.12 773.721 mo
1293.62 773.896 li
1293.79 757.397 li
1277.29 757.222 li
1277.12 773.721 li
cp
f
1231.11 705.16 mo
1214.61 704.985 li
1214.43 721.484 li
1230.93 721.659 li
1231.11 705.16 li
cp
f
1155.34 703.705 mo
1138.84 703.53 li
1138.67 720.029 li
1155.17 720.204 li
1155.34 703.705 li
cp
f
1047.71 758.648 mo
1060.19 758.781 li
1060.15 762.681 li
1076.65 762.856 li
1076.72 756.14 li
1079.77 756.173 li
1079.94 739.673 li
1063.44 739.498 li
1063.41 742.314 li
1047.88 742.15 li
1047.71 758.648 li
cp
f
1031.19 778.355 mo
1018.17 778.218 li
1018.22 773.382 li
1012.99 773.326 li
1013.11 761.84 li
996.615 761.664 li
996.44 778.164 li
1001.67 778.219 li
1001.55 789.706 li
1014.57 789.844 li
1014.51 794.68 li
1031.01 794.854 li
1031.19 778.355 li
cp
f
881.579 764.806 mo
865.08 764.631 li
864.905 781.13 li
881.404 781.305 li
881.579 764.806 li
cp
f
873.13 744.412 mo
856.631 744.237 li
856.456 760.736 li
872.955 760.911 li
873.13 744.412 li
cp
f
847.554 690.492 mo
831.055 690.316 li
830.88 706.815 li
847.379 706.991 li
847.554 690.492 li
cp
f
789.48 733.866 mo
772.981 733.691 li
772.806 750.19 li
789.305 750.365 li
789.48 733.866 li
cp
f
741.338 824.242 mo
741.438 814.747 li
730.635 814.633 li
730.688 809.598 li
721.864 809.504 li
721.998 796.953 li
705.499 796.777 li
705.323 813.276 li
714.147 813.37 li
714.127 815.27 li
697.662 815.095 li
697.486 831.594 li
713.985 831.769 li
714.047 825.922 li
724.818 826.036 li
724.765 831.071 li
725.667 831.081 li
725.566 840.576 li
725.619 840.576 li
725.609 841.482 li
717.154 841.393 li
717.062 850.067 li
716.759 850.064 li
716.731 852.668 li
703.497 852.527 li
703.418 859.904 li
701.372 859.883 li
701.385 858.629 li
689.449 858.502 li
689.488 854.828 li
672.989 854.653 li
672.814 871.152 li
684.75 871.279 li
684.711 874.953 li
694.429 875.056 li
694.416 876.31 li
710.915 876.484 li
710.993 869.107 li
719.821 869.201 li
719.849 866.598 li
733.083 866.738 li
733.175 858.063 li
733.478 858.067 li
733.523 853.814 li
741.979 853.904 li
742.153 837.405 li
742.101 837.404 li
742.241 824.252 li
741.338 824.242 li
cp
f
747.777 762.057 mo
764.276 762.232 li
764.451 745.733 li
747.952 745.558 li
747.777 762.057 li
cp
f
759.998 704.182 mo
743.499 704.007 li
743.324 720.506 li
759.823 720.681 li
759.998 704.182 li
cp
f
722.91 684.905 mo
706.411 684.73 li
706.236 701.229 li
722.735 701.404 li
722.91 684.905 li
cp
f
608 759.832 mo
598.603 759.732 li
598.427 776.231 li
614.926 776.407 li
614.941 774.968 li
624.34 775.067 li
624.515 758.568 li
608.016 758.394 li
608 759.832 li
cp
f
620.598 843.27 mo
637.097 843.444 li
637.272 826.945 li
620.772 826.77 li
620.598 843.27 li
cp
f
687.276 800.458 mo
670.777 800.283 li
670.602 816.781 li
687.101 816.957 li
687.276 800.458 li
cp
f
721.808 721.622 mo
705.309 721.447 li
705.134 737.946 li
721.633 738.121 li
721.808 721.622 li
cp
f
685.687 699.578 mo
669.188 699.402 li
669.012 715.901 li
685.511 716.077 li
685.687 699.578 li
cp
f
298.819 775.714 mo
282.32 775.539 li
282.145 792.038 li
298.644 792.213 li
298.819 775.714 li
cp
f
245.13 764.072 mo
228.631 763.897 li
228.456 780.396 li
244.955 780.571 li
245.13 764.072 li
cp
f
139.486 772.969 mo
139.311 789.468 li
146.623 789.546 li
146.464 804.556 li
162.963 804.73 li
163.138 788.231 li
155.826 788.154 li
155.985 773.145 li
139.486 772.969 li
cp
f
261.874 847.923 mo
262.049 831.424 li
253.136 831.329 li
253.292 816.648 li
251.38 816.628 li
251.527 802.823 li
235.028 802.648 li
234.91 813.707 li
230.13 813.656 li
229.955 830.155 li
236.647 830.227 li
236.618 832.973 li
245.53 833.067 li
245.467 839.056 li
235.786 838.953 li
235.611 855.452 li
251.653 855.623 li
251.553 865.073 li
268.052 865.249 li
268.227 848.75 li
252.185 848.579 li
252.193 847.82 li
261.874 847.923 li
cp
f
117.972 788.166 mo
101.473 787.99 li
101.297 804.489 li
117.797 804.665 li
117.972 788.166 li
cp
f
178.399 846.397 mo
180.182 846.416 li
180.356 829.917 li
164.492 829.749 li
164.529 826.216 li
171.192 826.286 li
171.367 809.787 li
154.868 809.612 li
154.695 825.866 li
148.033 825.795 li
147.939 834.654 li
140.169 834.571 li
140.189 832.664 li
141.432 832.677 li
141.607 816.178 li
129.748 816.052 li
129.809 810.321 li
139.994 810.43 li
140.169 793.931 li
123.67 793.756 li
123.518 808.08 li
113.333 807.972 li
113.29 811.996 li
105.618 811.915 li
105.443 828.414 li
121.942 828.589 li
121.984 824.564 li
123.774 824.584 li
123.664 835.003 li
136.602 835.141 li
136.433 851.033 li
152.932 851.208 li
153.026 842.35 li
161.94 842.444 li
161.872 848.832 li
178.371 849.007 li
178.399 846.397 li
cp
f
491.817 753 mo
503.417 753.123 li
503.593 736.625 li
487.094 736.449 li
486.937 751.236 li
475.336 751.113 li
475.162 767.612 li
491.661 767.787 li
491.817 753 li
cp
f
361.441 704.839 mo
377.94 705.014 li
378.116 688.515 li
365.003 688.375 li
365.005 688.137 li
348.506 687.961 li
348.331 704.46 li
361.444 704.6 li
361.441 704.839 li
cp
f
250.151 733.177 mo
266.65 733.352 li
266.825 716.853 li
250.326 716.678 li
250.151 733.177 li
cp
f
222.013 726.121 mo
205.514 725.945 li
205.339 742.444 li
221.838 742.62 li
222.013 726.121 li
cp
f
176.297 743.392 mo
159.798 743.216 li
159.624 759.716 li
176.123 759.891 li
176.297 743.392 li
cp
f
194.282 804.964 mo
177.783 804.789 li
177.608 821.288 li
194.107 821.463 li
194.282 804.964 li
cp
f
349.913 765.192 mo
366.412 765.367 li
366.587 748.868 li
352.341 748.717 li
352.449 738.466 li
335.95 738.291 li
335.775 754.79 li
350.021 754.941 li
349.913 765.192 li
cp
f
202.751 783.459 mo
219.25 783.634 li
219.425 767.135 li
202.926 766.96 li
202.751 783.459 li
cp
f
764.282 796.977 mo
764.396 786.253 li
747.896 786.078 li
747.722 802.577 li
749.394 802.595 li
749.28 813.318 li
750.748 813.334 li
750.627 824.749 li
756.5 824.812 li
756.409 833.372 li
772.908 833.547 li
773.083 817.048 li
767.21 816.985 li
767.301 808.425 li
765.833 808.409 li
765.954 796.995 li
764.282 796.977 li
cp
f
436.234 809.932 mo
451.44 810.093 li
451.616 793.594 li
435.117 793.419 li
434.996 804.827 li
419.789 804.666 li
419.614 821.165 li
436.113 821.34 li
436.234 809.932 li
cp
f
351.049 831.641 mo
334.55 831.466 li
334.375 847.965 li
350.874 848.14 li
351.049 831.641 li
cp
f
2638.15 769.146 mo
2635.9 769.122 li
2635.8 779.065 li
2632.07 779.026 li
2632.19 768.253 li
2638.16 768.316 li
2638.15 769.146 li
cp
2624.11 751.666 mo
2623.94 767.021 li
2615.7 766.934 li
2615.64 772.451 li
2599.56 772.281 li
2599.38 788.78 li
2615.88 788.955 li
2615.94 783.437 li
2622.75 783.509 li
2622.63 795.427 li
2639.12 795.602 li
2639.23 785.658 li
2652.23 785.797 li
2652.34 775.373 li
2654.58 775.396 li
2654.76 758.897 li
2640.53 758.746 li
2640.61 751.841 li
2624.11 751.666 li
cp
f
2353.02 807.981 mo
2369.52 808.157 li
2369.69 791.658 li
2363.43 791.592 li
2363.44 790.704 li
2346.94 790.528 li
2346.76 807.027 li
2353.03 807.095 li
2353.02 807.981 li
cp
f
2420.29 854.09 mo
2436.79 854.265 li
2436.96 837.766 li
2420.47 837.591 li
2420.29 854.09 li
cp
f
1798.23 776.19 mo
1781.73 776.016 li
1781.56 792.515 li
1798.05 792.69 li
1798.23 776.19 li
cp
f
1842.61 739.463 mo
1859.11 739.638 li
1859.29 723.139 li
1842.79 722.964 li
1842.61 739.463 li
cp
f
1806.03 733.412 mo
1804.34 733.395 li
1804.17 749.894 li
1820.67 750.068 li
1820.79 738.842 li
1827.63 738.915 li
1827.69 733.35 li
1835.58 733.434 li
1835.76 716.935 li
1819.26 716.759 li
1819.24 718.764 li
1806.18 718.626 li
1806.03 733.412 li
cp
f
1905.45 732.219 mo
1921.95 732.394 li
1922.12 715.895 li
1905.63 715.72 li
1905.45 732.219 li
cp
f
1909.39 690.491 mo
1892.9 690.316 li
1892.72 706.815 li
1909.22 706.99 li
1909.39 690.491 li
cp
f
1966.14 737.224 mo
1952 737.074 li
1951.83 753.572 li
1968.32 753.748 li
1968.37 749.767 li
1982.51 749.917 li
1982.68 733.418 li
1966.18 733.243 li
1966.14 737.224 li
cp
f
1950.93 770.904 mo
1951.11 754.405 li
1944.91 754.34 li
1944.96 750.057 li
1928.46 749.882 li
1928.28 766.381 li
1934.48 766.446 li
1934.43 770.729 li
1950.93 770.904 li
cp
f
2052.41 793.857 mo
2052.54 781.725 li
2068.66 781.896 li
2068.83 765.396 li
2052.33 765.222 li
2052.2 777.354 li
2040.98 777.235 li
2041.14 761.617 li
2024.65 761.442 li
2024.47 777.941 li
2036.08 778.064 li
2035.91 793.682 li
2052.41 793.857 li
cp
f
2152.03 781.294 mo
2135.53 781.119 li
2135.36 797.618 li
2151.86 797.793 li
2152.03 781.294 li
cp
f
2158.24 759.384 mo
2141.74 759.209 li
2141.57 775.708 li
2158.07 775.883 li
2158.24 759.384 li
cp
f
2394.8 734.676 mo
2411.3 734.852 li
2411.48 718.352 li
2394.98 718.177 li
2394.8 734.676 li
cp
f
2738.03 733.115 mo
2736.65 733.1 li
2736.47 749.599 li
2752.97 749.774 li
2753.09 738.65 li
2754.48 738.665 li
2754.54 732.394 li
2767.76 732.534 li
2767.94 716.035 li
2751.44 715.859 li
2751.37 722.131 li
2738.15 721.991 li
2738.03 733.115 li
cp
f
2931.72 802.56 mo
2948.22 802.735 li
2948.4 786.236 li
2940.24 786.149 li
2940.27 783.145 li
2923.77 782.97 li
2923.59 799.469 li
2931.75 799.556 li
2931.72 802.56 li
cp
f
2957.96 755.102 mo
2941.46 754.927 li
2941.29 771.426 li
2957.79 771.601 li
2957.96 755.102 li
cp
f
2953.06 830.106 mo
2966.2 830.246 li
2966.32 818.941 li
2970.29 818.984 li
2970.47 802.485 li
2953.97 802.31 li
2953.85 813.614 li
2950.9 813.583 li
2950.91 812.618 li
2950.44 812.613 li
2950.51 806.607 li
2934.01 806.432 li
2933.96 810.777 li
2931.85 810.755 li
2931.67 827.255 li
2934.25 827.282 li
2934.23 828.942 li
2936.57 828.967 li
2936.42 843.252 li
2952.91 843.428 li
2953.06 830.106 li
cp
f
2965.83 743.479 mo
2982.33 743.655 li
2982.5 727.156 li
2966.01 726.98 li
2965.83 743.479 li
cp
f
2948.43 731.177 mo
2931.93 731.001 li
2931.76 747.5 li
2948.26 747.676 li
2948.43 731.177 li
cp
f
2887.81 706.365 mo
2871.31 706.19 li
2871.13 722.689 li
2887.63 722.864 li
2887.81 706.365 li
cp
f
2845.69 729.458 mo
2862.19 729.633 li
2862.36 713.134 li
2845.86 712.959 li
2845.69 729.458 li
cp
f
2538.99 718.892 mo
2522.49 718.717 li
2522.32 735.216 li
2538.82 735.391 li
2538.99 718.892 li
cp
f
2389.9 696.082 mo
2373.4 695.907 li
2373.23 712.406 li
2389.73 712.581 li
2389.9 696.082 li
cp
f
2323.61 759.983 mo
2340.11 760.159 li
2340.29 743.66 li
2323.79 743.485 li
2323.61 759.983 li
cp
f
2588.73 885.74 mo
2605.23 885.915 li
2605.4 869.416 li
2588.9 869.241 li
2588.73 885.74 li
cp
f
2626.66 881.884 mo
2626.83 865.385 li
2623.6 865.351 li
2623.67 858.107 li
2607.17 857.933 li
2607 874.432 li
2610.24 874.466 li
2610.16 881.709 li
2626.66 881.884 li
cp
f
2670.32 818.948 mo
2670.15 835.447 li
2686.65 835.622 li
2686.73 827.578 li
2693.82 827.653 li
2693.99 811.154 li
2683.85 811.047 li
2684.02 795.442 li
2667.52 795.268 li
2667.34 811.767 li
2677.48 811.874 li
2677.41 819.023 li
2670.32 818.948 li
cp
f
2473.8 729.477 mo
2457.3 729.301 li
2457.13 745.801 li
2473.63 745.976 li
2473.8 729.477 li
cp
f
2349.69 789.495 mo
2366.19 789.67 li
2366.37 773.171 li
2349.87 772.996 li
2349.69 789.495 li
cp
f
2285.85 772.43 mo
2302.35 772.604 li
2302.52 756.105 li
2286.02 755.931 li
2285.85 772.43 li
cp
f
2092.38 773.373 mo
2075.88 773.197 li
2075.71 789.696 li
2092.21 789.872 li
2092.38 773.373 li
cp
f
2017.4 816.298 mo
2033.9 816.473 li
2034.07 799.974 li
2031.76 799.949 li
2031.8 795.992 li
2015.3 795.817 li
2015.13 812.316 li
2017.44 812.341 li
2017.4 816.298 li
cp
f
2065.65 694.665 mo
2049.15 694.489 li
2048.98 710.989 li
2065.48 711.164 li
2065.65 694.665 li
cp
f
1622.13 752.549 mo
1638.63 752.724 li
1638.81 736.225 li
1622.31 736.05 li
1622.13 752.549 li
cp
f
1080.49 681.543 mo
1063.99 681.368 li
1063.81 697.867 li
1080.31 698.042 li
1080.49 681.543 li
cp
f
945.452 777.13 mo
961.951 777.306 li
962.126 760.806 li
945.627 760.631 li
945.452 777.13 li
cp
f
1246.65 753.932 mo
1230.15 753.756 li
1229.97 770.255 li
1246.47 770.431 li
1246.65 753.932 li
cp
f
866.76 847.609 mo
858.774 847.524 li
858.599 864.023 li
875.098 864.199 li
875.188 855.745 li
883.174 855.83 li
883.347 839.53 li
888.744 839.588 li
888.654 848.062 li
905.153 848.236 li
905.24 839.986 li
915.406 840.095 li
915.416 839.193 li
926.299 839.309 li
926.41 828.874 li
933.579 828.95 li
933.708 816.763 li
934.136 816.768 li
934.036 826.244 li
936.899 826.274 li
936.792 836.276 li
953.292 836.452 li
953.292 836.403 li
955.677 836.429 li
955.655 838.534 li
972.154 838.709 li
972.329 822.21 li
958.935 822.067 li
958.957 819.963 li
958.439 819.957 li
958.531 811.288 li
961.103 811.315 li
961.067 814.726 li
977.566 814.9 li
977.645 807.439 li
980.62 807.471 li
980.707 799.257 li
988.774 799.342 li
988.949 782.843 li
972.45 782.668 li
972.363 790.882 li
964.857 790.803 li
964.942 782.78 li
963.492 782.766 li
963.509 781.132 li
947.01 780.957 li
946.835 797.455 li
948.286 797.471 li
948.269 799.104 li
955.054 799.177 li
954.936 810.272 li
950.707 810.228 li
950.71 809.92 li
941.207 809.819 li
941.308 800.343 li
924.809 800.167 li
924.679 812.354 li
917.255 812.276 li
917.145 822.711 li
909.975 822.635 li
909.965 823.536 li
899.082 823.42 li
898.995 831.67 li
890.096 831.576 li
890.186 823.102 li
873.687 822.927 li
873.514 839.227 li
867.923 839.167 li
868.033 828.815 li
851.534 828.64 li
851.358 845.139 li
866.785 845.303 li
866.76 847.609 li
cp
f
1056.64 800.23 mo
1056.82 783.731 li
1056.74 783.73 li
1056.85 773.149 li
1040.35 772.975 li
1040.18 789.474 li
1040.25 789.475 li
1040.14 800.056 li
1056.64 800.23 li
cp
f
635.942 777.087 mo
652.441 777.262 li
652.616 760.763 li
636.117 760.588 li
635.942 777.087 li
cp
f
557.304 806.646 mo
557.479 790.147 li
550.023 790.068 li
550.171 776.169 li
548.63 776.152 li
548.718 767.84 li
532.219 767.665 li
532.044 784.164 li
533.585 784.181 li
533.497 792.493 li
540.952 792.572 li
540.805 806.472 li
557.304 806.646 li
cp
f
222.643 845.47 mo
206.144 845.295 li
205.968 861.794 li
222.467 861.97 li
222.643 845.47 li
cp
f
274.994 769.551 mo
258.495 769.375 li
258.362 781.844 li
243.153 781.683 li
242.979 798.182 li
259.478 798.357 li
259.61 785.888 li
274.818 786.05 li
274.994 769.551 li
cp
f
190.932 701.97 mo
174.433 701.795 li
174.258 718.294 li
190.757 718.469 li
190.932 701.97 li
cp
f
288.543 772.049 mo
305.042 772.225 li
305.217 755.725 li
288.718 755.55 li
288.543 772.049 li
cp
f
414.165 845.555 mo
430.664 845.729 li
430.839 829.23 li
414.34 829.056 li
414.165 845.555 li
cp
f
491.661 772.097 mo
475.162 771.922 li
474.987 788.421 li
491.486 788.596 li
491.661 772.097 li
cp
f
396.135 716.416 mo
379.636 716.24 li
379.46 732.739 li
395.959 732.915 li
396.135 716.416 li
cp
f
206.076 836.29 mo
189.577 836.115 li
189.402 852.614 li
205.901 852.789 li
206.076 836.29 li
cp
f
778.005 815.579 mo
794.504 815.755 li
794.68 799.256 li
778.181 799.08 li
778.005 815.579 li
cp
f
669.447 766.526 mo
652.948 766.352 li
652.773 782.851 li
669.272 783.025 li
669.447 766.526 li
cp
f
874.38 816.39 mo
876.965 816.417 li
877.14 799.918 li
860.641 799.743 li
860.604 803.155 li
858.02 803.128 li
857.844 819.627 li
874.343 819.802 li
874.38 816.39 li
cp
f
905.639 780.384 mo
889.14 780.208 li
888.965 796.707 li
905.464 796.883 li
905.639 780.384 li
cp
f
1603.64 762.02 mo
1601.26 761.994 li
1601.09 778.494 li
1617.58 778.669 li
1617.75 763.085 li
1620.13 763.11 li
1620.3 746.611 li
1603.8 746.437 li
1603.64 762.02 li
cp
f
1604.04 702.344 mo
1587.54 702.168 li
1587.37 718.667 li
1603.86 718.843 li
1604.04 702.344 li
cp
f
1671.17 735.915 mo
1654.67 735.74 li
1654.49 752.239 li
1670.99 752.414 li
1671.17 735.915 li
cp
f
1534.86 741.448 mo
1538.75 741.489 li
1538.61 754.844 li
1548.1 754.944 li
1548.1 755.176 li
1549.6 755.192 li
1549.44 770.577 li
1565.94 770.753 li
1566.01 764.15 li
1582.11 764.321 li
1582.29 747.823 li
1565.79 747.647 li
1565.72 754.249 li
1564.61 754.237 li
1564.77 738.852 li
1555.28 738.751 li
1555.28 738.52 li
1551.39 738.479 li
1551.51 727.849 li
1564.79 727.99 li
1564.82 725.588 li
1567.11 725.612 li
1567.29 709.113 li
1550.79 708.938 li
1550.76 711.34 li
1548.47 711.315 li
1548.32 725.09 li
1535.04 724.949 li
1534.86 741.448 li
cp
f
1766.42 817.093 mo
1759.08 817.015 li
1758.91 833.514 li
1775.4 833.689 li
1775.57 818.56 li
1782.9 818.638 li
1783.08 802.139 li
1766.58 801.964 li
1766.42 817.093 li
cp
f
1551.47 806.376 mo
1551.54 799.744 li
1552.42 799.754 li
1552.6 783.255 li
1550.4 783.231 li
1550.45 778.728 li
1549.72 778.72 li
1549.76 774.517 li
1533.26 774.341 li
1533.09 790.84 li
1533.82 790.848 li
1533.77 795.052 li
1535.09 795.065 li
1534.97 806.201 li
1551.47 806.376 li
cp
f
2112.07 794.192 mo
2095.57 794.018 li
2095.4 810.517 li
2111.89 810.691 li
2112.07 794.192 li
cp
f
2657.88 858.362 mo
2663.28 858.42 li
2663.22 863.712 li
2657.82 863.655 li
2657.88 858.362 li
cp
2647.89 841.979 mo
2637 841.864 li
2637.01 840.963 li
2629.84 840.887 li
2629.96 830.452 li
2613.46 830.277 li
2613.28 846.776 li
2620.45 846.853 li
2620.34 857.287 li
2631.22 857.402 li
2631.21 858.304 li
2641.38 858.411 li
2641.29 866.661 li
2655.69 866.814 li
2655.55 880.132 li
2672.05 880.307 li
2672.11 874.815 li
2679.6 874.895 li
2679.71 864.543 li
2695.14 864.706 li
2695.31 848.207 li
2678.82 848.032 li
2678.71 858.385 li
2673.11 858.325 li
2673.29 842.025 li
2656.79 841.85 li
2656.7 850.324 li
2647.8 850.229 li
2647.89 841.979 li
cp
f
2791.64 853.243 mo
2808.14 853.418 li
2808.14 853.181 li
2822 853.328 li
2822.18 836.829 li
2805.68 836.654 li
2805.68 836.891 li
2796.38 836.792 li
2796.4 835.044 li
2797.87 835.06 li
2797.99 823.607 li
2804.56 823.678 li
2804.74 807.179 li
2788.24 807.003 li
2788.12 818.455 li
2781.55 818.386 li
2781.42 829.8 li
2779.96 829.784 li
2779.78 846.283 li
2791.71 846.41 li
2791.64 853.243 li
cp
f
grestore
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 23.0.5
%%For: (Rushi) ()
%%Title: (144.eps)
%%CreationDate: 3/27/2021 11:38 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KB7&W/f'*(FcSPS%S.f!bJ.p<:gXtF("UK_e_M%@Aq=+CWHVO_VN,<i`H3"Q245Jnp<-;*0<2J%@I+7E1$g%5+eG1o]'79gX
%;[&dE#^E<UJ,Er.I]n-2[m"^GGOh;n?#QX1:>Tlr@SYHf[R.^\0<=M&ZC^$8jh%t%<Tg85>.*o9GUB`"4snHQ46\S;<njMU"Tjo1
%ai!9nGR?LICBE*0pM0cOf^1S)!e$8PcZZ(s6R$^KBBf-6IP/+`9rhQClM&KS1pX=4Xtt7=U,SaOOACNo95r>r[u4:bg88BV\ujnr
%^$NWh<dc>)KXAg!)@RmS56C^LIu/mfi-tePrkI4Sm1ir#51uj\ERO)2NZldSRc%+D\1Orj`&@ch82NUF3LI3iNN1O;M7c)?6;[=Y
%9_)!:0A[\E5ar+l)&-$bYn]trW6)X0'2;%(RQ:L-5mkc/DQr<86FVH/m@PQZSo#5/-Bi;Bg!5i^!Z;V>_/\.fZVK%gT%D/&@&$2!
%-5Fae;m<<Q7CRn[eKUaUTpko(>%FbtZeYfhFfHIH9?:bUUE"Jm.I3=[=t$[B:)\:=lWb!#"#;PDpaQ805#X=dRNcanM=@\sonnuX
%METnh]Or7]Pm4WYBpPC7oal(:!T$DF`cQC5=Y=er<gS1<rJOJaPYCjF,uP1e.f?,Y0![`g]5?.[p7h0r46f[l+aB6f_%ZK.bc.9M
%>50l\C0u`6;0AJ`h<keo&%^s](c;HcGjN3JjZ7S_a+'-64l\8&mD.!&VUK8Gf8Iors&k3nS=JuYYk)_0$$%Wm:3&#WA(e=Z-DiHN
%[.;QKr-$ftX`@qIP7E/hVX:.&iE>`8s6JclR'g<e\fFU\UAi'53fT_kBfdt2VQ3bRCAQ!\\&22@#McS7:YdY.U#!HRe0h1f"5#qd
%+`.G[s.D[(/MBJfb4R]!&=D!as)a\E'Nhcs+i_oD#44YBc[*f7lup*"fI)=Nm9\7B]*-EpXqt7o([00tLQUm:k(WAn<NVRZRoZ:`
%cMO?\:93I!3_n5mIE6h\Uu$IZ(-^tod*/[scDd+620YEo8/g,Zc<'DWY?'EOVL:GkS+Vt+jj.-\=G&m@^fo0!^4cIbFu8rm@3`V5
%8K&n=-_)&47fP&a*!RJ%;7M]$Kec?YG7;uVD)+=-0F"LsmZWKbCbD%>&1.*,ST<KQc:t4f^aRZu.9R+LbT,Ipe*U%]"HV."Yl]JP
%I@2M1S!f1?#WLKTT<,ZV^(C4R3_CD[kWuB3jZH!F<qFoj\&,kU5ASe1g^F0qRcRePD1a!9K8,M#di*%d09rSlVHkQ$,iAG^3"ks4
%rmh"%AAcY<;%VlVIHqd7[/Sk<k_E1*YZ=!3Km)^OAp(.D>6+f,h:bsE;mOTmV7$VDGf*C@j+Wk-*pEAVhB`$`JV66X7tO)Pc^q61
%F,Gic\s'55")WIg7n%!"s"RDgPcRCFF7RHW%ocu42/a=mRn]tGR<BH1bibL0O`m,?H4b7+lVRslqOFR3Vfn5A><b4^e_>=J1poEi
%gui3*m8g.M`U<>P,;YcS62d=DSCOp/:&D>.fCN=]^d.cob,PPH<o3hG7/GE2Pe!@b2ctt[@K!aU\$M^SeV!D4]H;u40V&0%8>fm[
%K\M,M\kU6"-C!ibfu$!\L93p68B0mNoCaf=(3lOo'1!k80-gd<OfZdEFSSX5ON?a/"P2UVd2/COEaqV`1mK"5&uMY`32LZ<1mRsh
%WLO4h:/e]#VfEjD.2//l'q5tP9D-pd\#-^k3#TDD/iV&:VRbJmkAn^hb2k_t1GQFF5l(]<S2VY34J.7"-Yi[cX-o,NE.1QKY.0*-
%l/+_k?H+k=Bse=gqa[(@Sb85Voemm,?+F_54\t`X-97i[!d:\@X&ZUndJ'UZn$q&'\eVlFoth"%\ec9t=S9N:c+:CK1%s2A.2H-2
%qh*QU_/oR.co.#m]Sb)]mcM]VQT0G[hToF&r62@EQhgl$2_(BiY]$2bBbmh`S]P*m#jQ1h2$s9t)7[*RV"<HURD]0)LR9$;mSp<#
%bc/)*<o"-`D]]i7I=cYE'7Vp1])<oV]8oX!_?"p-r9n\JrT/SZIuQ-&(;5hbmTI6gM$i]cr?u07Zr=-:;r3BuCVLC>%%F7G(,not
%d.?Xj"MS"%)#KR!c]Q&Y43!\Y<K;(*!$23LMX3VGfP"6ajh\?)hCF-Kd@cG@^g-D=XXYPP<aOkV*h@^9Lng`]C6mVNRbd\C%QdOZ
%nI(q!m(MCs>V@0rmAWfdl^p5Ys,-X4k$,Sul(+&%*Ck;Efg\_3A@1BFU4#g_r)PAG]6sUW=AYOUnp-:bOmhl27*aH:"$P!bk*pbt
%2(rgb*2a]lg@ekpQ6X0A4si#JiB?k2<@E((8=2=UQ#I+B4<X*^jdG"AX-j22->$!'M`guIqsiG#9rHYmiL,9=*:4T?+]C0Tp1EYQ
%(pEE#`giA3IAY$MJ!0n]KDi$GhA[F.l0Vp(BQE80#i=#)>n_U;GJSS<_miL$DuFjoLTS3&pND&39/o$_Q;$c\geZhp+7a=Lf]q=h
%31^F@T]!M37_K#\lg"j%IP8Nq;N:]?Mf01:j?0Bk`&O)>&*l-YP#\^?eVmc[hn\`eN:Z1o;:-3MYdX7JqVFCkcH8*qhBlQH26'^6
%`Xfg(=cJ8[3SgkTq;,A6I@$SLNEgc9\Tu)t<l2+#lQ42F'4]U/(3J_J"a`!Kl4G!ipq(>^r?g/edM[!#k"-?K51R?Z9KJ=!I<_^P
%9T0;L6HjZ2Sl./lD9Kh/?V!r`pn9tagupX:Q!cbr[I&3Y9$ZX6B\F_0rL=M$:ak?omQAkFD*#[[Z.O/5?M:smAtu*<WrBAS]b`[&
%gVUDLoOnYIbE5L;&*+G;S;0L:NJ`[ha*i`^Ejb1L94`6f`71?h(CQ>NGA<ZZG-pnpJ=acU,"qEuC,u1E;j>>VNJ\D\;-^<#pu'2G
%K$T/$hgVAhKiKeX4K6uen&"!%*6]0PVE7Yp,!jD%Vk#5BLmaLu`<>WtnK`j/T,?I3-]46HYU46<9)a0S7JXr1%/bj,;7n=7Uq!!&
%hi$J;[%*5k.%ZZ<r:cq5Mg-@/h2=&EM_ZpWGu;RQnM]9F08fNXfSe`\$-1o(:\UTBCIC>AM_[3ac'']uIB%eK]dW^FZkp[h0p=BY
%s2e908_d8)8X<_f)P`PYA07E+Bnt;>&sIN!`T.<a[ph'a%)19fKou>S3&qZ7E<I#2EFX`iMVn'%T913tp?b&Xr5DTHVKV>WG"nI[
%2%M7*g9mncS(b9,Y\T(B5c3MopBoMg'^F2J9s*-agT!u#[;Qe]9s*.!Wr9!#>47?qis=5Fa,MAd=Rb3#a\L=ei,flcI2_A!C#jgK
%dqLY07X[=m$9m"XDF@+hRAULN4`*\(NW!WV/X.mfBiib`ldt/&hK^)">qX_:G-P;%s'(b:4/!S$eW+u;^nI[nW'oHVi5mgJP;Q5#
%dX9@s?,#9#.&*%A.OO(-Pbq`-hUS@b@49UB;#]GJ><`F_rm?p+7Um9_@TX7jU'cAX556c>fC3\qDYS\,4"d;O5e_9ubIE6qhs6b\
%s+<^`2#D>WI;"";2Xu,=kMNe/ImiPK^O=@<lsGnL3+Kta53JJ?_eDCXIaWMf:ApOQCm9Ys`i5Fu/)[*r<-`Bi9s67TdE$>2%lCr.
%VUS+g1;_Dk!tAT'<FpjGb)77rUU-!cEHF$>c#UEqZeJeKa96fZcQW>@qo5g"Q&5'o^Zk7,DrDrhE?X>"ZCRB-5gq[jVX)"Gp##:E
%ruJqlKB&iPhg#+o>CMoL])Fcss.-=m:=k!maI9:3:=/hjM&pX?=;&Il,K]2=n!Fl@`k5V5?1XViq+fOh^Dse0Ltg(k@]*eXS2s'+
%FY>fLk)#5>V-YNE`oBARIB?".eM"O<Faed7>.+95C.!V=*fh'/5i(?#,E!I&R.="Y#cXM!\b.m'F5&YASsE+>Drd-F;`(V<9e0c'
%$JDdQp@Uu;RsZi3=s9A9aSr),gHu6.q.2<"d>+?`[TsD2P\>ig&XT,\n;jkR[G0Z;>mNMdX8_Oup9]9,$CbpX-tc_5Q"uraH_6)[
%dm`,6<*H5G+NLY%09>e4T!fjre&9G*&<T:p1=EibELLR:Qs#nL[0L46NGB'a[.l?+`J7L3c9m!0r,$?^N+`7JK@Vd"^JK`7qoDl8
%.u%p#cNXO7?Qu`OaL(Fl/\Fab0@Re][.#h&]_ntTRMK3VXmj3M/@=o`W\C7J1+g.tE<\HU]R6RF1-5=&IJ3Jq9`Z]\&tXr_+FV^k
%-GIg,ZsP;g9M7jMZqQ[3fS#Rn!iC`IN!BgPIb9=?"#Hg09oOl^mlTmUh`LhW:O.mI<c=n<o"4SgWH0%hK/Rk4ius1tGE1.9R)[c=
%IPKXsHO&fkThLD`S=[Og]hVu3Jm>4O0255L)O6cjCX+BOPcTK.F8D#fn+KerLJt+JDrm$S820S;Z[;IDAAQ0M8kGdTWKn>=hX^ht
%2#KB%dpqaHQW#HDlo*.DVHr\)Osb+lT+Dq@NB+f3Om_s;#0'@mht:L4dgYWuAS@e^b^Zdh5Ka4+>L?Qb;>E:Np-MHpp9kFQD)a"c
%!i"t2*&$j?#fArH7!K"D7i2d9gZfX)_j8&?*CH=I0d\<HRJ8gtnI=b#?>,_W0uc-#S[:CAX^b&j(uls2BcU\ea-_rL`kNlgCKmBR
%OF?m$/H66!I2UFjjI(2%SU[iMesDq9]55%CknW$getXG7bFpW_:@0=a[XNIqWjhMsLrt&mND.R$4[RN5Yr4VCALEu@CWEU@^#Wu3
%m70TLZ"\cl<0*TUQe+.ZF.^nCG!EFHpYF*noUqo"3bV%iHMF^9g[R&nSC(4(4c`8,AH%K]Vrf9f-I#"KaYu?WBmT3r:c4`6qt/3u
%jX%e@8'adG?1I).`s2LF_G@Vhb]Tr$lcC[b:/=+E;H"FklYE*?KF'*XIdJGbBqb0?m1>!?[,K1A0b^nPb6p%7^>6s?$.I.*j0=iq
%%7D8p4,;d%<*B(K[<N4O=XL9chZicP<lK=Bqc;b3TB/3874itQn`_lsS*"ad[rKl5DOSgEZaiA:VV0`]S,7DAEus>^Bf7odfpmgB
%(8fd?W3\Jp6CQ83me:V$R\k/TFDdPm:"-Y&ANH`<Vf^2t0b]br"iP>@d!6jFRaR0c8pBMZL$,>p`N=XaI."Up[(o%P0KkM+oP'i9
%([*7-1N4"WY/Ks[biuYN'6p[u#`8FB`p96W+Cd53ZRQ)uoM`]%>h-tu_EJ<I)HOT-rY>!'/SqhE<P;A[=M%GpS]<B9:Wtrl8C+)*
%UEh>G7*_NF=5Ee$#N(JgOjiWLR77E+Zt_15csuEhfsYi!]fc!+b*Z*Tht-Q),n)sl.Y[Kl"fb8QneC6Y[2p&_5>.SC,,hfnSHh?a
%NP37>4tnJ_4R=>-Fdb`LDgN4'J+I@Uqd5KEq6RFAj-RE.B_Ru4]LCMkgp?u0f/fMS!o90;'!16S1aosC^H@goHeOL;,\!Q>E$ip"
%$D6<h&gO3b/]b*n:.0mM822JOOjVr@171N8,IC0PqBk[L6jFcr#Yt.2Ehp1*N/Tq2:6K+Vpp8r/m4T((I:O619nT1t(_f\SU44/F
%%%G-J*>Eq6')m+0T_tXj@2]8CMqrka1`dWDjh4#QHA-p07\sEtBR"H$^Q/S1]P6kE[43CX=rsu$b'S"%BFm[(K@MN^9/YJQdJag@
%+h\\6a58t-[nXroE]\-'hb>8lc>edPg=/-CLE+=i3I6h*e2^8jJhd?:d^ql7qSpYONK[I1SpkKp>_AX*@ll#-*krGJM:@@Moa1&)
%I3R(Jr79W#Vnl'd')Hf9ATiARd?n*Xd3l.__ld7ck;"9K?L.o83!m$'ls83q4PfjA(Y9qd_3tP`GrRfpP,ne3S`f2]_T(>(I'8(h
%],pM4qqm2KjW'`a1GT"Qik)H[,U;e!:<E9Z<Mkn?F7MPA+*NmTItA3!pi_#Mrf4]e^`(<2K'BO!$+Q4M!m:MN_jeE[6HKAOB'`Ml
%o^]9PM2\?Z"m+][_F^4c'-C&#2hQNY[%#0Xo/@D*-?2mbnp+?OBNr$IIGqU5f[kFKdO%M4Y7apB;pV(1U_sL(5/B0XZcQ(Nh8rVP
%EGE]E8^!hQh&JaZ*.0%lgU-7JU6dM^N1nOH]@+`d?SiVsWlN]mc\[IQWK9Rg8P_u$_k]Z.]LAjNBnl5'ol[jbo(Qt*r(S#UnKUTr
%OaU)O9[jI<a,gR#7F:)";bob6jG]c4K1G=lEkV4m+9+?=OF%2FQ`bMimh>8#(-j9GE,rB?g?c1=^*B[r4ki]g8[ACVIWj11n&DGD
%[JW_s+)@<fSE`05h8u"<gg4@]"W9Wl6pE`IJ[BXj6OM\fE1-*GOqaN:#in5J,LOb3s#g-)]bbCk1O($e$`;rmh>(2$^Mlq#h1@[i
%@+F[2F,iOZaHXr6CQ5@]2A1Bbp_VhnKn$6VKUfkc6-V53!V4s;VCRP$i.Yu\JdN=*Caq3s&nP?H&L'iAWgVp7<D;:M"M<X)^oi.F
%Y62:\!SC1UO71/6HS>.$J&';bS09S,!>$NG`)2G>e_*=pooT#1cdGkEDRXIT>WRYik_c?4,,*!j9gXgl!":JR5u^gSiOX,X#!K?I
%9i<qTmNEHLIj%>ZDuB-tF<:F>G4BQBrL34RctT,fh@`PPr(UGtCHucLIarI6'ta<l]iJSBqVDJdl*urGe0(TD>A_`Oq8[Uf5^gMA
%I6MTK;=L][fiHY4'Wp)4+_;JE(TqHkdMtql'W.<0An'`CXuS`5P@g4)C,G:#bWR@kfNkqifRK6X6$?Qf(S,1*h'Y#H3Vu24]#U0I
%],S6F&7,7opB?lgBrfo>kGpLEP;B79m^.`.(+C$82RN=mi?:I)+4TPeisZkRD-Ib+!8J6m<H&oD!Vcg^]#l,MXZAJCH=f)seJ;LL
%)&2$I*`:B:_uACnVt$I2!=;h]i79r\>1FnOJ#(W#gT<j?=1;PV=3soRYmTHF>mG;2YEg-A]Rtt*:L=cWd]'^eNt<?A4OLN>5],Ea
%0\'n6J3p<.Ik/53B,V<pg<C_J&*2D[i)F[+ATSe!4D[9djWBT0Pm`Y+2i0cR?%qZY:=O!eSQ[[r53NF<8mbq7QTF@cdr=#_7j*YL
%53/*[BiiK#gXin6C_(6[oea'ab588Tg#CL6M+USMp(j2KOo8gg>3/Yp!45#pE;)MXG6:8Xret.=ZeFnnaoQ'Df@1uRpuChM#1Do$
%I_;k$n,4g&&.\)i).:OVMTs7B>i(p`,]/IXSp#W#m9dSlrPPcJd2:]+kql4:>/!Wl'%2!@[=qQ.P7J(o%IZ^:rJ^O/FRp$&nm30g
%[:)E)@F2E9HL(*VeSKq(c!d8"hY=Ill!i-,s#KVNb*D;fIDjHUeO*PKBuY$4':sGV=)[\[;MkE;Z#uuDH!1UCW_U9;IsUf._1XcG
%-^E]+B>fRnir#Q1=dRMKHC>^XUcWVUJ))N+IX!dZfQKBA*9k[k=qDg8Jbf2F.N3&)(qj>b!J\V+VZ&72:$2$VUAo"V^=Q>%'n;6p
%ISYJ?DcP!Vmpj@K=jVbh.Vh0&H'`DE+$_3@F?b=?HMU$0Q\(*n8tXPpm@3;BQ(G1RO.O4=W(S1'r:C.,K#Y"!+\YmfOs1a8de2id
%.27[pU!$/0hk_\jl4I-33,+\N5@50MaLlq7Ca'6r120UEHpE-C64<:-@t@.pDHd:#\c)V?bl8TLf`J2rH.'6peo-F-U6"4(Q!7#6
%C>1q.Rn._H>&1,fX$$V-X4bcY<jU^/?eOq*^8@A+WfePDml-MXR_FDAV%/oidqS]NRnfm?'nb\Hm4rlf%@rMYZWb#/gNB;$X2%Tl
%<@m@A3JaM3/bA3T$bT;>BU".%etU]6g0Muop3i&ug[Uhs)J]($gFK%>I2-5:.FZnQ)KsT].b?`3mah<mioXWU?<Po:T[_GnNI.99
%<YH"I!&g/O0Xc0THK?@E#s?H?`*)u`[P(K+\#ioGg/I^sA4(OPk1.nI<W?L810k="g/!$;=&U70mkf8<&f=)mC\rFX12c%f&O3R*
%-!*QhYJ)e3Aj`IZUlLKHS93Ho:t!Z3i?dYG\>?;'F2rU8I;,V<.XDrPa?.Xu>o9<[^@c!6h1&d2HdEBO+6_Hsdjj:EO3agB(h&&A
%ahjOF;HVG.2!Iq,-LXhg=D<hXbB2:7^N#eZqcANPWf9I98>BTtc!ed#RC^qY"=$L(L:X8FmJS9m#MacE=RFPkeXqC^/c-D'hATuC
%L@DK1YLgB=GTC@^N[Gp0*3`,5VGjh]cHeOG_;DIf*8Z7"*Di$;3deW3DE:5%'@ei)JCimdYH,Q&pqh'q]*.U@[pQ7\a>0jG`+]I8
%MHLBLq9!Tr61jHuY/nc-f@fXG*tQQf_HYRWJ(j4Yqe0en>6T6Ji/.V!_3QIYKcE9/I?M<_R09m*Nr4!f'tP1"%Ap.R`[s<*WlK"j
%_qe+SS_g(-oC\N4oTJIuIQ\3f!F4kfaKBsiJkC*e8FL6`0HJlNJLuiAS0.I^&kCMeHsm@MnkCKE[8YY[mOGC!8S<CWVakGcVA-H+
%"%#4=Qn[bHdb(mtACufB@nn&hK2^Z_E3`b%QL1Pn2>gjIq.%n%c`B(3qpTgK>X1rk7s:T]WV)X:qrN$i5^M`KA('#'8$RE2m\#R1
%&kIC"n=bS6q2fHlTc`Kc&<t\*PU5'8f8cqEjjO.?9&d\6`9e=b)o@gmfU/8.H:78m1Miu:YFZ!52HMRqpHT>>\G?`ILu1_Q8(&T.
%KBsq*4PNU-hKe+ur<4:fLB2>FUIu^*8/qop[;;g@bLN_8F`;QG#EpIgP:V+Z'OfmEb9i_Zhq/D655(gDdsrq`57H:%SK*O<WOL2M
%LHGbI_aBUukA:YpdW/\%o+>/R_KfR-)CG')^$'R-^9>Y+'9VIdI<!J$=MUHl7JL@;7[4H1P@m"(^!flf";VfZ8I0c;[]_qTpA$t6
%(p15o5>-1Uf<R*MLDf'gJ9I?HMJ-,X_a).Q[I>O!Op]+:-&/''oF<s;^K^?@^5d\'*FAo#C*2)GRg-q:%GL'Q<Nc5AFo%W3-^J*1
%_8'pnFWed2Gs?D8[sd?r4Q<\p<Js'8$O[qTUB0M/qM5o)MZne.lX9/'ch20gFC[9NE3KFH42ig=jd*)KYMe9fi;4"D)q',?g_c4$
%%@to)__1?37G7\)6/m!1@_#h8cusAhc_lUhe7sFf9dDcrJ>;fc-;G_SE:O-?ccYM"*G!lc4Bp'Jd*\U0^7P;A_k`N@W`;,Fi8qh;
%Cr__rreS)ohNij@Tj(enQiFFnOJ:bVa<@B<eSE?eotrrpKZda+,HS'.23T(.-;]_;Wu]DGSU+Xk9GBeY.mD`Slg*5Rem$K>W15]G
%]"=GJWB7jDRt<:gc65g:>J2@`NWUZl4/'-0$UM@Ap=*gQS+X?1cC2T?#?Dj)?_V,WP=R%/^Mg&ji(JW;*hQNB:DRhL2_I$*_q*Al
%J\5q7M!d*DCSfC!h1(OYY:V?Gb#Y`(Vk*9&[+WgOq<lgrZ5lQn/KX:94*`uWOH,9F;,Lp/TbW'65HbB745ktQb0J"1UUAQ3Ph'91
%ST)a/jK/pGdHA3leBWeXB4BuIXaE5J>^UuV<iU*J"7#F;Hq;$*D9$#OUWQ;=/Q-Xf/^T/oBm!(<m3L`7gh$,S\p+P!`/DJuDJ3s0
%\lmN9:2fSFfi[b'rD@prL$j.C.`qRY:b,XPNN^TNP"WE@+q-j6Q$e0s1L@`/e>(Qbl;ac"/[](7rC6/6aO<I<0;`'"2RXDTBh*\q
%/,&K1i5!m[COEn$muI[3QaoX60O(GG>Zlaj$tI"&Xl^:BolMW`;BE^pOa24\20uq/[(6oT4AWu`cH=_W_/(QjcW_-s.^(1VW=g4T
%'\4kL=e9sIPogJCdH^Z'@\C8Xf86:Y$a3+:nkStQ,f;<>pu6`M;U7#I<]?)Vl[%r9Z`NKYXeHeLk4cjF8k='9bf:5t(Vi%ZdFKs^
%Tb&]oeh%H=GdP!q=L4c&4^Fg>>c6_.@f%+NQ\dRu`Voc*rEF,^992(DWuDk/gQ7Yh]dNbre`VLZ/T#&7`H&"bC8Z2beQ0&_X9FuC
%?5-:hGX$Nh?ahp/P5a"$-4Zg0N<dl>B`c0X\X@l"r)hcIDQp1$bJYQ@+'VB#dGC[7Bcf2,8m'p'8utVSmH73pdH0L[\F=P:5c!XR
%%/l_b<B^huMB98UgilU,QT!0oQ)tUblArq,$+n%&D(F>"p6(JIj"IJ'iqhVL_Qjs?U0@!_FCR!'\/!,Oo'Jto/q4SW8i!D37)-L.
%Kng!oM6!QANlr`K]RAN1;!I[c<.iFY0!oCA?HaZ%KVd&![Cj(.)nr+G_Ob2'`1shg&QPtDOupp#l!+N8?#C<))/?^]JHT'*<hk]N
%0Z_LfdX,-C=[e%&?,85Re]lB;10t]j_LWVW^NP;dm:]/93BQ29HR=n=BQr<RF$Q0WXQS$HCAJO.7@Wuh/4TnIeN#GQjO-A)3EFSR
%DA"s<@jQ"ORqmVHh@.#`:l`'P8F8kf%n*.5)hFn4:>*NmI/cXEQkc8l2);AC_oTqeoI(S-*Z0KRQn'FlL"\DhUdO4I)m*kEQefrp
%G&$Uq\sJuD*'aR[!Bf_4phj["L9XK4d+HE+0m)Zm`HSOl*j4)J]8`5KBs*2UirPa)pKLBI<c40[@QFV#Bk_j9J$2LHfFBL_?r!=G
%UQQY"DB@RQn55hH^o#4mG<WF?gO:^',+5?]pj.4,.7lTL0(*G9m#gnPF-5:fOpU1@$AR59'bY^C7iI4Ak?(>/BV?pfI)eqA/$B>.
%">WiS(,aPK[u2]>Q(*\oZYF!H\)"$k#GuH;dEbE8_8tSXV@LN9=ENEXE@7e?SA\=/=g?;,X=V;JOi<)>QZ/6a4tc_*KFfiQFW73D
%RN&c[<<*t;qE.R"j"'%gGFcZU2STQW4M?CsIPnUG[Ah:/DBuQs;id3eVZe?kO%lqM_o'/QE[.81PIlL:kES)FT0:nrO&cdE+Nj#Y
%4&L-1]=am)>iaK/o\Ru`R!UfRa:&!XKX<l9&/07tW?&Y*!_jIi"ZmOS(>"j]gFd:ML?X2D2C1'T)+=oN,>XJp=sbPdin[?"\3!"c
%@8Y`YA0[2ceNj%+HG!r;YfR)QBP``k\3!_*>9.oLU;Po>rI+%Bk\n"-KLlhF-V\P(80Be:;1p-GPZ!q^/S%Zn@:@SgG8ScK+I<Z(
%@AB!XS8$VeVOsRCTeP=LKPYkC8K/mtP`bY%n>XTa$t6+sbXO6C>mYCs-st<;(m"k/1E[,&&FumV3?a'[Wh1N*KWa`=dZlodDANTr
%VI-!#_\DQ,Yu%7<PtMo6[JQ/%g/.J3TGuNCjjM]0QU/l-e@`u.9hHq(6(B0h?)k1"aY:F=9N`4PA`MnQV(Pt=rI&MVUD)rW9C<:K
%b%9%mJ3A5--eb]*nrh#6N6%)0'6[5H]4Q_r.\e=^GY.c)b3g;r5#`H;F]8D&V;(gs0Pa48F6Dc=P`a%?0l=fKJREc#)<12n\Y:9e
%C"9VL?kLWYMp*07)6$-OMU.%hE#pnAr'r#ZEEH$)LggOBfq%#K"Lb7%>#3)b3M#%u5.7dJ4(0<"?VOd1m;_#!R-TS`H6S'Z1oe#*
%.Q$8s1oLGY]\8R^M'aK)LJ_n#@`%6]GLJ-,I$7/ljN?6YaV+GA=s`D8$tD7%Jt<7L'p\RQp8cV'9_?_mSCKFYO\C,:Q<6k`0D45)
%-?m]0#1#<TQFlB!*F\t+q\hJO7FNNf@8U+.O#N/t@W^0sCJP)-L\'\A&cM.U/:PrNGoG7"7,>K4NuVJt@LUM#4.i_C[SH09M[<<c
%'O:H>cqQ*D+/]krk7o9'i2HnRVX*F>p0kUYg<-L`e$fld-XL:>(mh(egQ/\;G>fe)VDh`E.Ol'$'Ci-E8M^9cq%tWsB^=VdD>kD>
%h\?aUZLt$ZB*AOF$Zs95(?&l*pYDuKTil<k/+Ltegqpm.r&M!o9h.1.\"4^m4'@N-<j-$!jfQc=P?0uLqGNRcBR__hc'HbSou\Gk
%7mm?Pb-P2]85\2U3nf5.HTB-`(01+s4@np@1%FJ)#Q;2!&#s6\5)]M6L"585j-CS?^"/+'[3m4cg/X.;q`XU*h[SX#9[aW%i2>%K
%nU,HqXEH?O/Jf%A.["lh?%PY-fYb]qjh:Jd-QhbXAs8'tk=M+$CBdjkNO?=i>=6`7%\flc*MDQ+G0C9oSa6*ml#Gi0).,#c)dT"Y
%('M>!aea^@@BS#&U^)ekdS0mV'._o76`XG'O,mP\mXlY%i*j!5ZjMA6]%ERd+frgK6n?]_^O*jM(^Qg%XX]u>3C\b\FR(-<'Fl#Z
%T,sF):rg85\.Li/h7g+"q$:,O-[^/%""@j(hr"6$,dU^"!SM9IV4D\B8`W-iYdr8GCfJ%k\UcYU]@?*W8XlVc@UYW/$i7rQ&s!JV
%[hCr4%/(Cc,dfZH/p>YrOmKW$%3pP+6Lo"a#'BP?Y,r`rF^RA7RWOGUl&Fmbc15T(gRH5t/GBl&5G#uKUdZ'Y3Q99k3fSJ?_.ih+
%$CtEs=2W.iH6]P0?/MiumF"?ZTVp[HcSUZZ*_V0_.%;gUTG%j-'`pIjj-PYhZa/:YZ6!N+6r:]bj4,U!f<<%QS>D/;HHCV\6C,%s
%G.[9=Akk!<<V62e[!&a/DQPQ33EDk%*VfolIF_#lY%Ycq(Y7,#<%)U$p=7e%?+uWB`P('u:?X1\gD.-R1rVCp=GK@!^9Mj`m?,\@
%r&JOB/3u>Sc@ZOD_K!2-Os2W82OdTV&LPI-ZUZh-nb%fT.LVhdHS4h:eF2G:C`Ei$M)FIp'2`rt[u#LD\i^NmZ"iFmHj-UP3MX(7
%O"V^1e.0bo1[l1YNMW1X_!FJ;BC#;cnq0dBWF)g$CjMfslCTud6#TXO&@UAb-Qg7&otaM%Xk+I^qUrXT\t-=B2c*hOLllI8#K=B7
%2$O.;A"8jUHOV6e*-6D`SsW1<9AMd:Q]"BV#GTb;:^!Vogh9ocPO"cY_\Cu@a4_-Y5Z?JuF]R@97@Jl:L"u"K-9$Lc@,<F]A%#Ep
%AE/smXW"O#+K`>CG=![T<?eeVA+N0VaQgcWrot7G:])V]QJHh7X!"aN=F'M:[1c0X>M?N/[2V2f?#7,]UW37l^/<25`qT(;l)8VO
%[GOOT@Fbt76o[mn*GhXt]t7gE"isB!5u>$X/UTMo.E7ummhJ"8#f[uX.^*s+U>[6g<jWms^"\P.\bS`pnr6%TrMIsaQ;cRtm)!!S
%q)H!J!=Dos&e?Y_4=OLKAa+(oOc-@n_(_RX<V\P9bqAeg<+^L7m5N"A>"gkQe0OXXGOK4ehJ=q_\VJgWB-41,anT%?Fj#^X?aCA:
%A0\[2p1u3Sd2J)a(#EeZI_im+C,o*tbIV+$jD!;*mE3_o<We\FU=HiZ0Vf4@>$5Y`7$[)+o=`C1A^M0n/H4u$ALVjoL8jM]6[Fo7
%H7,Aoj.Lla^]GqrXNIl26/7j`5!l"&5>Eh<Vq[?OCU)5BlK7&F+^V+8COI]SJD1\RrKGBFf,@SOlo^Q_Sgj!.I8KOIHL/;_Mrm;_
%Sm*YiS#N=J7P[lDc]B(1JC:(ti.>A#34=8P5<R_'V_O]`RL(5Q@W<h7MO_q1WEq3.,KR$'S&r`P<1@g)nU7H!s2GaQe'#Otq_L(1
%_>*!g$l6DYB%"\&-[hQ@&_`9gpj+RW?We$ccTT=(9F5<mqulV2gZ[m'?<LI/$)jHG+8GEYcMYHj*ofUI\[5_%R&.FTfjm3nPY'.Z
%'X0B[p@F:a]huA)P!ql[eW%2^6=<4-bf1jrhqlXJ+LjO](i6UaMacbiBU+\:::AhJ6s5D=-^IrHHaG6]+MWT\g'nVqbi$;0qnlrB
%;/*S.*SQ:YGYl2oqCpon:0)[>X,j,/d=+#'r,;_IFo,CKJq3ETi`9[cDKgR(h>jCOFF"k7;osA_JXne6T9,mE&jpFr8+GM/Bqn1D
%\$S"?\[&lF6$/pH6`.+e-#8fTgWX$/FZf'L]U.4+>/dq7%'RotoDH(df'CHtKjo)eE7aHA1f;rT]32dDNF['h,#'I3D<<i^Rk\5q
%!iV['`iD0a]DdNnF")$0HMI+X*Q`EKV7-q(D8u<cjVIWrBFRe>C<<BKH1V!5i$>[\Ks''*+Z2>djuh!E9P6M\a>nTu:YK@r0(0J)
%e,E%J[^siGZX$;kM+P.:Y<^n)Sp^S@^%G(72mf<3.6`>+pJtTD*8`u(SMW'u0?qJ:j?fbQ8!Qg`;B\TPHW#(9Upafa3=R=8d?g3l
%:40fqg5[7+/L>C"Fe>g!7B0CJ6qiI2_S2WQI=TMA6fQhLYi(g9\BW\.C>W4UFQF*^B"fVc)Wu`J>M-^Hh&)LpS/MZ;o%DC[6`uW#
%HB;m?BsP?/J((GpRs)0Z)rQ[QS<t*B\)8d>QK#l;`iR`TCi:XBX24K.@EK*rcQJA$MB7(Gc/=K-lC_tSjgkjdJmq05`C7f]0+ZYZ
%`bqi:q[amsgUF>/>0Bu'n\^"Vf=8Na0[gaTbm9mTE8/>9=H^:=/X/>"nG5+.CI7a&\!MJYhZo<+MfuOY78G0"Kc(i$2l+8omfZ5e
%%(NaXHXgUT'"Mi>1B+@-PQrb-CW*a]EZI(r=\L@Q+qEE,J4l<8dd>%i16UL.KT94VVn\\!Bs47V(=1%&8pmJJT%>p^KUoV%mO-eQ
%->AWo\XuHfYHf?A+?5!RP?hY6.+?U'HM2&k4W3]VaR\IBKHZ8)Gd8AN!frdUN`O"9!>`*PFSQ?b0%7oX\sl!aARq@'c:$4E,jr!1
%'LM?Q*n/4LA7ldX)>h](B27_`gNm/.oHr/1k31eo.^=.=ou"+6X]s4"quUea=%9'(]ri?nF'&&Q9Y7F?h<W,$'/>mB1jXrSY(0Vc
%E>-QA+??J[:\V:@+PI$PIJ=^,34U>8l#`na>.(&pV[MfEA^AtkoAUBnf;E7snH48<kbWhgDM[#cCGA.<6ukJfLB]e`)l'8V(N,i1
%nY1*>8d\9[$fB2!7h)OLB6QGR`^AhVB%cCJ!,a5f9]S8k&&u__S2KE9K5gC$m34AXNS@;gi=*6erf3RZc_]\HY+Ze_8@om![,$Q0
%g02NK,:E$Yo(?hVdWa:WKFY)AUFlrNP3l2(NK96\]CX.XR[Z6%#'DpBN$#.HWkCc$gN/4!DQQ14-!X's$s]9)5j:LB+Lfa",JViS
%_@M2m,TG2S+Yt]8,/,,&,#6'OG-RgUa@hZb:AFfNWn7!O@f66$?Ga9=VRj+ZHNV`Z0#0k+DZJ%1;/.;cYa]BL[lO]k$g*/?*L*2(
%CuG.Z9)&M9ohrJ2c'cnE9gEk4&+>F6Z*OCQ&a.F(9)^\#bQ[:MjfAC5M?kXuD$H/So@tsa>N\HNs0fKX"T,[h`Q9X_F@.r_e%9\)
%]<dX6Mq#@en&)8QI_S+p1"-BT8,r85Q5j6rfe^N;CVI=sbnQ4N;f_Zcmr)M>rWQm%$rYlO[TQ?Hh>LoT>^&en++O7^Qf#RU'_hK+
%(2*REV1TZ0k1*GjjKJ"O?l6YcdlcG&iF8sH59ZB)J$-Z-r$hP$A*c[/ls5Lr64"U03u@XpbAa_r8:DnWo(r[e1JE6eAL"jI5>PtQ
%lqKZs5P*rK`&O#$E3V6PSSpoToLfe!Q8e=]RcN;D?t9^qXC/)s1Z88;$s.5bpiljlMX3D',cI_N%g">m#`.OoKMB]mr-=;e",WqX
%f-S)6i%J#g8u5dVr1qi0J=EFe\dcG*hf&Jtf""WZ%jT:D2o&T%jja!]**j)N,MC]"Hnl:>Oau=^pPI[1ka(:Ln\^Cb5e';Y.2/``
%&m1.;qFa_6?TsY4F13=Oks@N0l`Z#^>]](fG1O*&\P1q$r.bOr7<i-L,$_,&:ghW*\L)9.Fp<6*qFH/335?&TeA]<1J60n+nOs3W
%FRf]]p<U;UlU5H]VjVBh^,lg^]@#r6ZcH9XHQeh[T2c.d9>TfCLXl0#AM^UL>cm?^n$K!+,ue"$H+bh#HShbWm0W%sp>!Q;_EnF,
%2p\&U7WSMsdgkuZ*HNm@RQ*or=I%<9'<1&t-I6i*J,Qc]3B..Ce8FQ!%NgAVVO?TK*hTLbm^@_7CZs]>P>Mt:XWJ<['tnc@Se'b#
%']*cqSUc8sl[\r$/V6)l<hf]eoG710/s;_Fdb8A7S^6tGJMch8U<K,K^t:(@HncK:BL43:7`8m=[q"R1bJ08$dA*J=6,>=5r^E(I
%0E:CE)">kSkA1'b_VU4.+2:c?H(-P'J,>muR*IC:/[*sUpm7&F?MuAtF+l#(PqFn%ZZkXTIt:C7%,il,1/M81nE\cC>6.]Ds+5`4
%iBH=p?&Kg%kG6XuIpRn5]Wc[5Kie:`8D*SgD-(ZSbDD2<?TAN"rMpK,pt%,>0)U:4`/?jI$S;2,T?E^QTp@n8M_3cYbHpRr^YCj$
%r9D/=JR;WNIIQR^A(,A_*6EXcWU0FJkPb^93)<;fp2;QglMdofK+n:Y`TFLVV_5.KUS3s_5B]-ckYE`dkPWHol]-I5^2`>n5AA@<
%&&E2Z;qClAs*/m5fq2TtpALo"8D0Wg5>qFB_UZ3sU@U/#^N.m<rgUr&9MbS1=6I0piO!poJ'+d,rnPIq`a?5jbk[0NXd$T]=D`P!
%6.ke\6J&Dik9RS'J'D?7qV,f6hMcsAlHII1U.7!IdFj5AV:*oib\CruQjL.^T4Wa$.m,&77l;,q7XYR`bS\BY9/GO'rGH4_dFsu@
%BjSR"`(F[1RH28Z1:)JF?_'dEm@DIk'TSEGZg)7Qk.H,)S[fN/UUs'>B'(i.J"4X2@-D'E?^`F96O1$P`r/RUD.((@dp>/gAnNmD
%\_.-t]/7-)c<\^"1>:Td-smq"l@QZ0CXfH:m)Du634j8*E\eY!4uetdb6Z5Ce7E342LTeLb[t3?"1-UcbDW_$An,H(8mBPCq`.TE
%I?>"H@$oXD=faI7>)5;ec(&Sdk8)ZYcZ?,t];7M2I/#IpqTiquk2#(`gt#oO58T69MfX5c,VXGLHE#2\XgL(M/q]kR\\%NmoUHYb
%]q$Yp*L>h;:QY9.g:P1HJ%1..=6:=%N`5PMSOJ>DO0/8kerHiWD]CEHbt!IsAq%42>+.Z:gg$GskeWhcl^@Isr'Rm_3a[+\C\'3?
%:[.[E0je/S(G'-+Yu3Pe#VOUF$]7+]?3mCHgP)2="KMb8]@t6__U2A[^5uW&gK_6Kh9@NR6<RH9[aj,dHMfP.cj;71/hXL`",d2,
%rG#3?\.:3H:W%C7d6gE,gcrmp(=RJ3gP_E[V8hL^Vf]:Je?2jhCT79Q`HGg*)m/)Yeu!pG=>[4I1fFc6D8$kSV*m(d[<)O0E[b5=
%/1fW5=o"o25pNd:N=+B;4*ilm]GS'JbNlF`oWk&\D(TZj["?K5YOU1a3`mg^?QI';Q_,8tiGs2oMo.*\<Xj1_55r.)&mVr;?.&*#
%Y:J@S8nDR0T!MKn(E@5Pg9D`#E`MFCV,G%B?"lB]\#[]qchFK'iB48tpL\HHnL($?HFt#sY$N/T2-6oJf)4gVOV(i8c^a5RbhCM*
%CiiBDmN8WL"J"5S6n;DH43=sDf<4Sknll#a:9;udQ-6s:4^/3qk-n@nH70=27#kV-",GF$'=^m-jM97#j\_Z`4=^RrcSn1020sT`
%e/!)Ti(g8&_ZUK'Q7de+WK"H]Fa1V:X<,lllSAe:`d6S0/@TL2B%?QVBCB:-,h/.3DpAk7ej1>,p"/h':0:\WC^BV-CdluWXe]p_
%:<s7`cgaXOG:KX[*<m;BpQmR$'uf4pF`B4D>S?c_iCH(TF@j]50h8>6V(\Y?f5a9B2A]Gk/LOD\%V$%$da^s/=";i??$]5i0$;B-
%9O656jX3'c5+Tl24aJ7.Rr^[^9Bt2,AhHkuF];L^a&\JM%=LN&\6b_'Y#a]=ML@Y>;HiWr93n[$ZrQ]qT2BfBZ$H"irFB'U#G)+l
%F_sS!<`YsLRNXl^C!#Rb7a%B7*jo6qWN*Y#f*hGtSYGB2Ee/%mgO2&odP&&)MI'sW.se7HcK=?Odb*4,CD_i3W++OuKo_5aiQd?A
%Ha4laP'r]UUC.kIo/'=u0V@\lR/+bA>%ja[I2WG=BDc/O[Wb*jFpWc_lt.6(qr\Hi:0<A?-H#BK@Omt.hl">FbCdcQgCc+tKV_go
%@jgtJhFO"(q\ti@\%M67]Qr3>CgY4@[oNjZS&\PY^\N+/GIZ<c;!"geh8AC+Ait:PFaU^)^\)hmKIX4V-oVpM"+aQcHgA1e^O=O$
%V73Sf>(!s8Yfr[2PMPo&Lb:@KA<uBV4,$k7&b/*@=!Fqm>E0s9f?]T&kK@>qA^MtnW`j\)R\u][oWTJqUCYc.fk@.K?c=QEGe>6@
%,#W/+Q>*f=@`@-j7==O';i'`ea0#-Q8MD!r^FVh5NMiOF@XV[cS;8(6bDGgPIj@ltWEgkf04.o)n9W2M*nutOAF?8Lg@^5e2g<f&
%nZ]X?I#Pu0hTtAGG$e=;RsTa4(u'tHS!C[f;IXFF[ShP1?csL.m73J/?hVfao<J61F16G!gl[U-[d;\tK1r^qIo*_\[gna"DHhmc
%2\-^[B=;B'nLV.J91JM6[J;60%`;7X0sZrl?/3.6/W9UdUTJPnG*G-C91LY_YlArJIkDa3[)DA%V)isN>hccHT*14<iKO%h+J%<5
%FOj2n':$PD<3g,bqqH=coOIclIHnR#G#"$m1NRkO0$V9fVo;YQq.sb./Y$\$0Da@UZ+bWe4$GmMXP4-GRGIPB>it!U\WQR2goY1J
%m.Nn,*EkMG5.?H\o9K6mm!86s0Q_c-ff;36B#BlAojLe33%Abc>ne(f0:0l0Mupn%7\5P$QT)q^b[n,jQ+599mU*+l<gU[)c]t:'
%p$1"rIN?0fcX#Gc9#ckJ.Mm"iV:>35FtMe1e.Ts(>Huga\NQ1L+)VGs\ZNL*c+O'/2IF2/]?<(?meulGgr4FY4q?]BcVH?rHRE%J
%*u%A;I5pcS'HbKob5#Q:r&jMZ^Ei**q5_s/e$?::H&C.kb1"7F4)`C2kO,G=SVp/,Aga.S3rA0j>kfk@c<V,:d^eL4mOW8r[rIm2
%51:-_o?Q=/<RB<g?OE]VTin="gb.@(JY:`]c'tY;NJ5]9o%n/rG]J)[.9;<fo!9mhqp-XXKu`@KbOLq[dsANg?E[Y!Wg.2&XP>C_
%bGXNsgN*6PKn8KHQHns6AF<K609,/nc&0&./Q=@^&\ZV=BiroF`2QVImYH%'k,PjigY'ZtC(F55TY@pH0%L\oia"^^/o3RaHEccV
%m)bSh.CZ_4OG&hN7QU/9e8SIe#;FB&n[,.,?LD#R9tq[TRleI`Mrs&W^=uh_0:MhGn=.Y1-O]'Tb,)1?S%ko2++JY$P3K#/h;e;#
%L"(ME6WO<XgkhaYOj8'0@t/RL%R2j"L?C\;fJsITK3o;U3?oUV_SVYk,P^hUpMK@p%VFY:HutHKs1)$`p'4.QC2^ogHDY=4XC'?'
%FJ;,ue)>0$YiBfk.70Ys6T'Dn#s6!M48aF-'U?.EhT1G\an-SWo69'ICcp<!6+`-^l4uR.'0"f""P^WYo"Wp\^=iC@qTt7+q*rmt
%7:=bP\$T#HhYR#[$9B4g(`I&48+6@bO#TG*<[1`CN.bH^)oNhWr8Qekj`^<l1EK*!<mM"LL9dW/%-GZ''5]j?m\:Sm@E9Qg;lc06
%[qjQ-S1_[#.65Yf4rM&r\6mAqG1mE!7'+Ll'@Yel\bZ.HK5im&;F.g`YC+u4UX9MDSb;i.ZedKVQf<0#k"!7SqrN_pb<Pj;'%SEQ
%Gd-$`A)HI[e"^H.+pLbU(bXHN)%UEfjutkVJY5_4iVT-)LR_j0E/NOL1ir#2cOU=3OL#4o:F/X.h`(8@C>JrZbMBKU<)X7KT5^b)
%WF1(M/O,8Ek]&6YK,Pe?!QYJGh3[uq[o7PN5d'SRJTn[OjoE#1IqmXVnjt1oPCj]CYK`Y7Apn?.:gEZh::oa<^]![G+oOh%n7qan
%X`fsZQJJY:\`Phm@7td<#CF7/VLRcbKFcFD'[UAj^OT+t4[!9L.<O)$=B4,+ZVMO+]\((SB^M_(TjMcPc#L$\\iP5#!S]Sm;qQhE
%l6Eur<n,rS.O!NIbB:1YL1)"h+o&U-mok_Mg&4dkSr)s^.9V>#5WM;4]hB>*_.u@9m45)?ZC;pm/_8[m6FG2l3o,U434#'-AuhQ'
%6Na&dYE/[U-`^Qt4q]#Q<:&-+h8.r'Kf3CkD<iEJ6<a(QO'al-mE\8*@2n@YTLFce7d;@M7I!5B%#pfIU%;EFejn#W[)b<N\%ncM
%XSuaCR*_KP&*lcRr^g#oeNP%?Fk1VIjR?YRTkUk/k%)&sB?WZjk;Q+j:An4tDEh?M1<N+!U_V+9[90R>Xg?i^Da+i_6rVP9;G_be
%ro;MnNN\'Wa9B7YHbME3hRmWHEifkS(sKJWd:o41KWqZZ@>#.^M0X,0=KbPU=IN9p<O)sTe,F#I@4SsLF0B6=%@s:(3^nCa%6\,8
%,lIHuZ9=L*?i0ND8Pdj?p"6!IZPL,>n,Mo<:`.d1*+kQ>IcgS)@VZLg[BKO*ea;\:e$Ad@;E`o5@Ad=>M'^$2*&uU7SUA1::[bDb
%cupLr.f,&TfQpZ-jmV:0-j#@?X>a^biAkQDUT'$nRPl4RBKP:U`h15WQnL_moDGjp_j:5en_VjcU!Tg()j"*LG[+B)7Fo9M=8cSl
%E,p1c?_<GWNod.tqsq;QoW^%hbl*f:`o"kOk?Gb)+/tgOceMuBJ+S+<Q^jU>^H='Q%i(!dfr(>7J+?<DT8LE`mZ7B!73f(Th6W=:
%j7oo5<@=4@'FjrZcM;o/1pcWOb&$#KSiCr[RY^>UI\3!T./E/k+91RJ16KQ]?Y/s/3FrbSi!Y>Z&5^9AoJ/igknS!^pOb=Q^.[@]
%!*B"t3>;PbZpAq:3u!Q4c+;`,T=bVeAF;GOlTZN/kl"oH^iO.UjhhNiAFqCudII(*nqNY+2f\Hg>VC!CQZ*TC_M3W]qt2^6Co89]
%D$ZcUL1lJ5okn:5H8TBf#@$/b&q?3OD^peii[Xk#4pkWD^@%G[pFs2Fbm2dCS*fl\ARCXnpc#/d5N-/Vs7ok9$!dq"X\o_QAkEiq
%+eO1+$ibW\%!:=sclO%kWnm#+d]ouM^HHrBDiIQWO8iJanXoPMm*l/4:!hAm9hj"3-E';+.Ysif8JQi/-AZ&8"C2F&:a`#0!k9)s
%%)M"D>uK)B&@a@6#hI4mBXhG1W9AiYi0"(+.Yk(1V@g<P1_&;H#`=M5E3Nf//pn5"'JXa)+=TTT1s$uJ)$JG7JuBdm6E7u>3gMs.
%/m(pfglrYMZl<<6E)i*Ji;ML'O[UFlBG=T:#?HY&?r78'P,*0'@Ht3IKW>00Mh7Vs.*s)Q0JjV;PUK4k7%F@$$'Mk:+&>s;%L5m6
%a)CHd0iWe*,-'u>Ygd23!aM!9Nf#<E4podbO`r$;&k[_d`;>iH<FNBS6/Vtq7TMst7SuZ*1u8P!8:\:SR=$u"OXO%i1kXh#W$:R'
%/^Bk+<=LF88<cf15t31G7koWG-k(_IVIi_:!%s`RBb-73MSaI#'7trg(^r$3>h/m6'`qFCTHG'[N5H97.4V?ng4^"Z_srs;7"UMn
%._ob`X/#q>T`Y97o\<h8#&m!XbZ$H]0q0G?!/c\*;n-@Q?+>HcJoI(oP0=IP:kFo@TYe:f"-unIX;o_I19,&Un>)p;W+npc#E,$G
%R39;4Z:_rZONi*)l6ZaN]$,K9E@;N'X\tDbYb:TJ@3TD@S_>89/-c9nP,**%cFX:,%4Y7]#o]8r@].B^LI.UQ$F>]^_aGg4I*t:Z
%R_n"@6DQ4ReJlOs]hg^/PZOM/6+A81?+A%9)lSQ>kZqcO.9?LnGZ*mZM["*<LeR8J"cX[D0</8Q&[#"H"08?C.anb/V.F[_BZOG.
%&T29PB9FN]I>=4=l7Q<TPqH=8bQL*8VTdtsV^f*SWY%(=='bTOr_h9)!=_Vt&f62+@1nc:_S"6pA-"0:'HI64kj26hpM23[<m`Pc
%%'1qib/()LN>q/6U/J4i!(eAeWj:Rb'rM!8)FCG.33<pHK+0Lp*3>&Jkueh<jtI7nd#j_?#Kq4t+;gUbSJGVA1l^LgJL7E34Tt)J
%`k`kC&N1;R#pKOGpeb"QK-`S+LN&<[e\I6E12gj!_T7D6#)m)E-R)q1k;ft0J2VAAe,u1J7Hj(cIAeoV.^JD-#C9ul!muV&&uh9a
%^F@Pb!N[,!#D8(<I0bJ9VDFTU^f3#'%EkK]@?RGMBYFe?HOE8@a[@lQo=hg"Jp#o-?r`Le7\4AAl%>af3n5/PCQcWPKD72o$t-,2
%eK0[T/qI4NP^r%V9Tj-e;fp.o":NFgJaEJ4,@El._]^b=MB<u%?q#96[Ra*o):G<5)SofY>jq_?gaAHri(P/g#+f/M$'HJL$h0b;
%[",Vq_\02L;ptmU9=i!U'%g@7"WNW`_Bk$X$=0OG-\Fb$^nWGT<F##9/dtG[cqq8@(9a^qIV@@]TT&-j6F]K:"TaMc&,UHjW[ZMY
%WX&reCJ#+BU[\hWCC2W\!t,LMF1@%GeqGV2Eklp],"f*s6l.D3C)9'a]h92M8kkP'MFj4SU)0[M%tXu)AH_=`D<Se=g#u<ab:89_
%bg3rd]4Xg^TQa(OOO,:dVI3:d")u(5't5:#RrHhUdC"!IJCI<Bi,DUP>e#GD;Rie.Scf>59kQ`\>ndLj#!j5?O$R<8,=mdrJsi/O
%MDlnS1!jh^MVo8d.L7RW^efr()T#3$58'B`+p2T^L4]c]%$gQ1$R,Zke-@0/GYU!3nMD/rQtA9Q(kMt4:]gT(!BZ_YPJt2m-%U$W
%jD]K-`SdafF[cVZY%hbY$25[kR?)=?:qCV3dHF-.`e5K9hdrhA#ZjINKhI.dj'2c-Pr0?f!J\bTP"5^%@FCp>$jajSoaqTY?0+47
%geK)*!]O8`%;I.[HphA=:-!iDZNgsP'BKXYePnLJ_f)Q8#hKb,4NL(5@hB$sW'^OuD9)dd&mu$]e^=F6iArb.">3Pe#$sjP)%T8&
%L>]op]a$aJ5PLBr_f[p,+F]Ds8eA-Ro7R;p/9O&\en@O*^4n^GLqP&PrZPC:AoUr)S6cO#X?sg3Yh*Qs#ecVX(l$,iP/_SNiLi9.
%]e!Xb.PW_rd'SeLF\UH!E/b(+&km7I1gIPH?eK"08aZ3r0O9=@8WfDd_5P_>SAJjRm)$RPMCdm&2+)K_0kGpV@^<f2JoHG?8-N9)
%$\TZ6#DYn4W*ir5FlAF*8j%>3<=YABMXg112RmrU]$GskE'P$Fp4.(9>?h.f1tT?YRM+nad%$XNj=6nNKl_AMOY#cs+Z3(j[EE0M
%qCi!T.Wr9Q):WGk(da\H#=EAW;e[C[<"0WRj&'Tl@<fSuVIA=VD3[k;IG25(K,bO,2c()O&<oVVncg4-L0?Zl'.p&""o1K8L-gS$
%5RAVV"G0:nBZ^TG0\IrA!N_8/EmkI%L3">D3CDqJS`dGUKPF.+%<0Ytd78^6,\R;d"pkB--8Xek^n$k\LhLX1Yf:](*)N<ePR^j&
%-7Q+Y--0FQgebU$+Yd&OnXjJ5/mL8IQAojTl4Ro4RaOG0Xr7q.@n:72%'K-k%Y6Dm<@n#dN@*,<105b^Eu,<8+4"XX(97NW@RE&;
%Yi6rJ4`HBMV^eR")Q+B'*!_+g&mb""6/f6V,7D`6BTPNsHX^d+jXDtX?O2u57N'!e&>4T'CFj-!])grs+:n.:'fcPi<G6J>RMQ],
%?4CC`*\8Mj0^'ba)m)^`W>$K^Krg0?#7Zn@6j4^=RFUOUcSKMIOCA@#%PUTlA092=XBk$h[MjB[M)fd5A,PK+bq<+1feB_!M[HL$
%Y3cf(Ad]3P$'\0jb>b%A2UU.IBFWBR[0p&L7$$kpa^RFX%T\BN\ATc?&2C`P&J.jqC4X2NV[/SGB(SVD`gn-]GNq"BbhT_$+M]@I
%<!HF7'goJ]<s[Rq[i7bG71B>>HFNbPCabl%gb>+F#</Sq'#E$"\Oi[7]d$Vqa_-2l\-4uO;2PQ31i*BJ$PVh?0moLiUWC:p8-in'
%N.\+8S";Ak0arhT8dn:-[h>d@4?Z\=;e#?&A=eO+%E:b5A.a*A$)Uh`?pg,;=B'QK85p:h5\&?!jmq=p9I_-IDO\joU0BQinuAGA
%@eug/W$?@;lU/Q<QBGr1=>F9<8=0ee_]$?0NEWPWTi,Ae8CqMdLa<MPFAr!$N_j%Ja@.[*EY7V<.`j8Nb2J@aR=eLS$RqGH=5`$?
%RXNOXBF9K%]M&e'RuXMbFO2<Pr/g1h/\E<1ds*H;Q)V:o>7H^Fi.<E$2,Z5="ZgUoK`#9WZ4RNsRd&T\)$[4D6E1*d)`=o,AlV+u
%QC2M%E%99'YnMaOHVpQ#iioRGR0l[j+q:d1T_ep2']LWq#mlU%68N]dRrlqBF:O0tksR14;H+4O9H&L/R>$J%#b$KrRLHi,A/?e4
%3X;]&ktt(VAsIp55dK@#l22l)M3XM50HR*L*k3b-3EC5OA-=D0%@"]aCPpC_6'.6I=>q)##ajR`\eR=:F;;)\^9XK<+;;SQgsK5(
%_6B)3Jo"Gc5le-l1VAK^S&mtIZ'I[-LkIQkUZt=EXE-(:>6N0o"N9j<jYq?k;H,@:A=>BWB0)oI3LJ"t!?t8R19je!V*^ME0PO?t
%4A*C_&&BPWdRX),@R3AY1IrhVQ0s6,+.3%aX>+rORAq!P79soL&E>JA+fR;E;)P^,PZ_,_B#1'2.PWF!o=u?netD$.``DM<2g@hH
%3&R:C8Hpb]^h?h-jg@UHe]nc.Z;Ru"\ESU5a!OXJP:0DkZ*-Le=>`Vha5^<V'hem81jDE(YTbq-XUs]a4B+4MO[F7iiCd^U`j!5s
%ZH61s6pl(4RUC*X-F5Hgp0h?CLOhloj^>Eq:c_h2!8E$99k%MG<p*jXG,pJ8.YDmG&WslrR\\#1W$q1Y-XKJG%C.n.$^HUFBeEMc
%ecEr7Cmks,e7c:bTPK]Y(He@jI,a(!$a]R_QL89u^p'b*F#*sb17KMU5gTcHj:6'uJY<`EeQjjbVF12lUOnh0=?d-!X[o/r=W`;k
%P`5sGNY%nYXRa>3PoDIA6^MKB9-uddJlt-j@CJe66qopld]!=V7AQ%N!Rp.7)3Z[6THI_?`1S<Tjs(S-D_NsVTco[3p^,cL/rc*)
%R/UJ.RMO#\8ujG$UCf!&k_qb1[k5NKFB+;OTX2WFQ8^)oej3/<Yc2\9$l0Rl,2cnX=XIX@K@sN5];^I`1>dZiU13[*<K5Sb2+T&;
%+OXDS"(mYb6U`\93WV^.>qh9:!A#`X/(4V)Xc^H9Z79n!@^'YjXFS6c862c*"ub+K'nS:Y=6V\7'\417!3<9]C+7CH&LnaL\*1?=
%9FF1[L$7-"%b;p9j_I=8c;'3PKNT=Gl3\9M0K&5m)jR;VU`bL&6j8n7@8l)!9nA`6!gUlb10+WZPPIBKkiHAJ"gl7(/tYm"O<GGT
%eaVOV'*O.M6DH&poSA#D\"]mCP%D35`h9DV2%3V/^)4"Y+NpRd:>I64:t[<[Jm%;g(<%tQnQ;.1TIR6SE5<l"-3UY_gr.X<k&qr:
%FH2hG/q5>j4GX<%?SV0hg%#;-:22:%i<[T-@Z.KT0".Z+=CMGO*LC35V1\O]<J5^=E4?=XK0F!3MZPCVq/iuOZF_PS^_3?$ld,uG
%%?sF:6XU+&Xh\n:FGM!b:q7d$_,iXAO9S/pH>K.lZNc`-AO[[mF7F:UN^Y<9o2iBR!am35DM4Eo@h$?mRVWW(+IuD+LJX,9]*oX9
%V,NP.b9W<_aOYH:<Iib[2V;<7ApR+cI'$_jV-BB3O\SlI_*Tb*GJX6+1XaBsM8lo.<bU/#Ou"YdR2h0BV2c?=+WY"L"+_HomMK?<
%#?,HM`(7\NCk,o\3Ac3tFI4<Xmm0dLh^2aX&HYGBV6Fb@/XpIY8I*^8FMW\UZITS@9=,@[4&@dO=OB"V"o"5$\./?L'WR)49$"jt
%[l%E<k@J()@4RfI(3T%f'H.6d(D&GRg_[5KH!&C/U>sCt`"r@VghB3@,:pu/>elLjP?J#F"MQZ]1?kYOdKek@!UFjLFBI.B:u(b0
%rBEt4R"$q@a6:]W&ZC_:/Z<)CYUoAL$^'0OkX8o2.KGc:r/G)iU)Y;`#$L(rnFF6[,dHiY(a]Y]".:Vn.>\VI:_Y'XTaR;A(h&kD
%W*Pc_@(K%SSo2.WI9^E3YtR]3R'e)I\Nn7N?!okuS9lr0<#1''\62.o+p/oqdc^hM/ETB<'3K5kj&K,9,b5c!:XEYob7*X):J(eS
%;<lXcV,XEW!l%/LbJ7r#'EQB6L0&J@N=]!5#W5_/5rNbO*3>MSh\%2-Zs#_LA2,Td'if=k".2n)E<-oW<b,;EPBWE1d1?eJ<d*G<
%jab-h)INjgLU2:_l%a+g+E4%/I^";c1ta?JVi1W46)7'o^qmkq'O-.<LM2AQiMo?TN=aR[+tL=*$>uCJ3*]?@8da807_fp[_;a:<
%kV[Gd(Nl\^Y#1Z@JhLWE+&!;P$)V<%e>Y(4E#-@N[$>oXCh'to797$>P>4;t_A/B`iS;BE30h<[Od1>$>\<3CmQrS&S%oX$\hMuN
%[E;pjjD6/)VJ)q3P($-#C'\bZlcOVB8`T-D"Knsi#MLMW'7fdAj'[KSjG.m(8(M[d!H_kh`.7iTG[^1,Ua$$.XGT]ER*Gb45V('p
%AB1F_^cJN]'/6^;!5=/i!"ptt$A8cmG#u9]Qu!!`&L1QT,%.LLUK&OH+B`g&FOPbs9;8G\](1qS3.bP/n&$DY%6%md\:_cYjPW9o
%"9C#6(\Sf.\3e'D.P'8Q\@/Fm+lTR3SOZ/\Ci\nc,tA$VjU.1Z"#kP*/mRRu6+A*/=A%p0)%K<GC9g-$2gXE\kk#-\@!hWeO^+_e
%W'i0e(]mq6"$#387c6$j(!G29T=*=4U@KUE;rHq"Ujk;0KNJP^?jRUnd-9i"KWF6mgthC4Yk<1FrBTK!87[@TU69uXNW;sA@U#.R
%p"pu9P5F5+8e%X7ZW+FG8^ripasb8%"E#e"^dN;QZ_Rt'_Z^)CmS9h!SmCq9@^N%0AX4TmB`s_88PDjoXPu^bZ:Pc@<(#-E?,57s
%&dS$ai^<S1&[02tr$WJ$b@CO%CtXnm(Z*\`6e6O'DWi&\m"VX')\`Aa<b77P3Dnsc$Rr$r<f@?TgLPuDrDinW-+U'%OAYU<!H?iM
%q)*uAb>&L_"'#OrOApdsQ`8YN"TniCKt.c"BYk@EpeFo=Mb<q#,0Di:%I;j3.(D's)KJ3AKc\B6N06'9KhIp?aA!DX&>5`APC3GL
%D>Y"OJu+\C84l`9:]VhmSRfDE\L)'C]/O!GAXAl1>KatmR3?5rS8U,=E8_aXQN.bkN<hEPGHhgS-G.*S,57$%]]M%cJh'ouSaDfb
%4k"^1]UpR1?!('&A;r6d$/?/.P!WG9K.Cau%cO-WWt<>i4psr/R4ZRC[3EjcJ23VQ!/)J%AO'P]]JXY<=H)pGMUXU0q_].E+GQ[5
%^u-sU'S^&a&qq*Vnj`l\-F%t]=LXAsW6'DoJZ<Nj0NR>g![_lX8tNlP7NhirP>K)o6/W$2SRATuRY'P9#I36Dic9cF1C$@E@37cL
%QWmEqqiZ1oQtM74;T@LL<SL%tP!Vf:#hN`U@;,+W@%=A$NQ"Usb,:Fk;p\/CHs<$HIb.)?ZHfo(@L:o@-r=Q!IZ3T41<*E,HodZd
%XMSqp!G/k)JoHj?Q6D'''NJCG&c(!g"8?D**-%SUV$a[_)`mFZ`pIttbCcOq9gT+E,^3B*iXW40c;tl+25^XE__O$cPjGPcRro!A
%A%O!DRV&EVSuTf^ob<rko3qE8)hk\EO]Ete+3%%;go9UsRn/GmgF\"rDLZ6Q'uQS'H?,=4,$a98Z9`[$/$'h\eN$#KVAlB?k.qM@
%_8(5\9"5k\oUK=2MD5BLMeYVaG@cNKPk"l71$MqTkSHt)I7GP9@ONj)9t#_+_*0CJMPSbA2J6E<@'Vp-)VHZ.)1e3E^mmR83gjk$
%+fUoH\o:B=$Pidrc`:>g'K*JCO)Vfj$K2'@`/iT)l=u2ACT.RR=k&1AE@0KW-/i`:=!%Ds^*nm$]a)dTjT@FF^<Zt@NB2Ci%,mWu
%Fl@0(')0HbDL:/c7M?Vlo>l.nla]stbj`\k<C/9<Net@+KG1t:[Lo.I(#8fqTbBnN9IQ83Lk\AC.Ll,Aod0np'ihNGc.sB-IAcKG
%GF"XZfL<;<c)QRQ/?-9F:/6\+Lln_\\o<qfGt<(_p<'TB=ii.K98:=B?oqqcZJk+Em&_%."]88<gETs5PD-de)LI9$S[&rId(0jD
%b9@<o.,<n^k\SM9E*6c<qZ(hag'm"*(CYR^:?B+$FNdh.FFhY8P&t#P"cL?A#iUZ_?RF/8:'/.4-g:I3**m)2HW^<NMc<r^.,fH*
%P4&0pSS`&VPr+oT!=<6\qT]knq2T]Qo,q@-O287kidu]\1+ntsajjY+`jUt<$'Ui0MN>U4O;Vb<3&<Go=gmMg?rB\A"9blA/tB+6
%'"ZSaIKo#telY3g8tDQ6bOcF:*XYbP(MrU;LPY%9rb@'pn:X.pUWZ_q'V1#`6[EAIK;6CC+WeI5RRgq!"lGkI9V0/$"tQM]33-+i
%=e8XK^eJ4UPR^!Zq!;!E!p=-9nt),fi4qF2D/mEm@2K?%=F"OJ9Ej>"dX<enjDh3ApXJF%1*:gf"Vlqq-Od9r7<q8YXGT=oTb>Bc
%Z[(h7&^FF5LN7o"8&f+VQ=WBXCuSo)NPTa+i468;JhPPWE4s#(YS)I[f%Jlm"M2FN&;:M)p8dcYBOtJB]/hBG;-:1ji.>/M:tV@B
%)8gV`jr(kK+uK^>CNW_fA$<8^\.aEJ)<#COR_i3<LKb]3QKQ?QRf>TXn#g.nZKqk^%J2m7%qNN6&%U1!Zo[KFJ^Nc_eHsYpMlb-F
%Q%K0>DI;r'E&T^#Bh]k%PT+gnE=nV<9[_e8LNAdS`6Vt>n+Pq^oH^M;b.(nMRN<hb-)l+s5D\PFOAs&(5*5g8**pRj.:*<*Ons@c
%CJ9nG[!;T?Y$+GR2t;s>5kW'n?6Sn7=O7=;mrA`)i$gi4jM94hE"@n7U`e%INFsKfaH`hD'.??#f(J:a4oGR?p,WQ@jET[h!.X.J
%8c7i_%V3Y5K`]r&MYAicQrCqGm//\h^(KYV2+JGUUOREk/*a+PY6"mc]2U<Xbd#2:I923Gblm/>U[*-YTmXm&l#+)oL7H4BM-#+/
%^pfKd>Xf2k*QT1W(3ORq4?#M5=V"&RcZB*#r5B#?WYHXP-rBHS*S#VB3<]bP#99Fdd-:b17>rocl-5?_%I1dFri7(TN(@DQ(uSU`
%lC;#ki(IdkL,>1F1LTU7l_SbUD-rp,OWPZE8PsH!W"R(U"6I?jgmT*8ng!.-0T_0s1^.$STta)]V1->V[O-?;/LS?+6h`ET_)Lkp
%H]i`bKin*uDGol1o;'=6N[gET)ZGidAmo=Q#)GqO0G-G3F)(H=`jDI2n-rHTMdgs1.#Z,bpG1j.:[K@@Sts+mOSW;f2EU$jRtNDg
%XI#TWQO*L?nMsDuf)jIlBo$)H0?.X(ia\INqTLJW$&JA&c+Tj\(H4,]6oOB#T>P/pVM4nm4s;1D>#suRk98jnqcGXl7PsU5`!-<6
%`da&n8(Hc*@7N6d.A9XE-.6cD3)C406#c=B^]dV>pV)!#,aNtM7?2cK<Tr>^E4fe>(%_BrkjSn_VhH]ui&L<8CTY-JM&?0\%=6Pl
%_.ItJROB\*eUt)Q:2AIR3*f0<nDZrM3]9JG;PfLRr=/4iAV*eAlI8'^iQfBDHQ^%dEG#G$i9/bU/6B_(&A/XZ!hA&?i"iVas,r.,
%DGaee8C,M(Ud/Tjc]dj90E+?A?ES>i)C.Hu5PTL<8GpJShZ$P/MfH\KrUeT\3?+@MI#q/ee>`]>=Zp&O7NeKe8R.hsW9D`K*;aT#
%K>8M,!1u-IT*m(Ws7q3'c"OBMp@lNcG_]qM^",@5.ojHf3&ep*ie`(8Ag/kd1R:K<P;1@J"r?4DZX3Rmq#9OOdYK=o+3HEmk:CBD
%K0OEIfb`S[R%iD6L)5)<%K^2J_'*qL^^ugq#H-O^g3pIB?XlUgkrjc,I9%#\6rfs2=*"i$.:.nl'4tuc46dE_?i]qao4e,M4J6md
%_?7d^9=^]eVO@4O,M4`#KV'0T/m-C7p2HNPZoc/(1j\"7lF0]Y\kDX1kp[Mu?@<46a+GL"b*pd"8Fq]Y7f9uMs'thoM[cpe7J0.c
%:=o3_&=?HJ:aR%+TGi-H4MhY^>7fcX<8?r)j#8>d;2IBNW0/QA+s2!1*I>TcTOfktG'oa?ZO?'lbM%:SAp6+KgDkka&qWf=jL8A4
%&8am=$$b@fYch%]5+s;Pn$6`;2.39BSjhVH37c;2E/':Y!`eo<f7ZZ![a%l"gj50%?mE5rL&/\#nJ25paIA"#?1Gf`cWAg?5Z8`u
%a7+mhKlqu?di>6%gY,=oXZd3_R0!$ENlOLMFjni*@]:e\d9^fMnZLYVc2(J"F-QSIF*YFnO7Bu5%7e'iKn<8?0;'C,FM1V?5qIEG
%dFDFT(h`Z?Hft>#RJ[oZ5>?1re-@gmEJUtHp*(*;&Tb"%9O(dHKH%I>U:qa_$fLEt`(s31aVu9R.23iBQ>pd+J@h!('`$>Sc``$L
%1s9q=O4q8a#$^QMM:W]QPkZ,Q5O2nY4]jeb[ri7jR&[iXgh8l6STo$Z'hONinrQ@$>W7LS$Nq:Q#bYJhn%)Bc#2Gk?R+C+G&X*4(
%f1`$JQp+jd.]Qo0-4/.UV--+4B#fQ%6<YoW;Ptn=RcrGHYMZpQ!=&HU.^'JX9tGU^$t>%U0m$DQOY;M1#Z7GQ^c%N4_,j&_IX<`L
%P/%+$D*-h_pN==YCX%<ABnl,r@TbFrDF[`b:KeAC'[Xffr:!nLI:96@=cYUQ]+)DOY:2u\-)u/e!U"D>"3bBRl-Vul@9CbbI'/W=
%0/u77/n85rX<Qn"&Tm7H!%tOY_AYsmoWJP\mA]`ZZ.ErV9h?/P$1;SiT^)n*OZWep7(.PFi$7+AfCPl[e:o^jbLV?m9d>L#2$fA3
%eaTp>?,O+A?ts*68s"d+KmUa6!ZV$hET2MIp-k"aEF+1-b5]Gu5c?[uaiT>u<kk4ni]f)d"a];RAjg$[X!cNLFMYkTFnEa^lHeX[
%Ut5hUKcKpHP-Q9Jr!JW<_hZH=(.TV763KuqmU5*fe!,m`#qc[k14kijf(dVMr"ZIG:sXt/Q_:mJ1K3R5RAtY;%@Y)RYlGJ`(uWJo
%k]9edG<)VBGBUEuf\&ItqaYZF/E%q;1t5D7^9fk?"mT7nd:C0I.H2[Gf-=.,NukZ-HZ\'oKcdBlWl^eCGo6L"%=1s7bGNZ'q&=QU
%0O8_aVFb(d'i%G$QgpT8@r?7=P-D76*sPb*L[7QnYn1-jTEDu.m3F[^W`tD:8]*G<5m\/jOllnZ,4Hfq+jmWn:K>>0@%8Gl-2Srk
%UH4/q?St-l@B/FIX\7jKqf:RS^88l'[mp-*iO5?h21JK"9>^7HBoKC$=-kEA-]:bt$n&]kl_7*r;6DNqq%oNr<aTt&P"r$.W#85B
%64HdRi09o20AtZLUY4WZ^VZtE3^U&'1@XV)ADYTfaCs0s2Y$Hk[Pb/p/QKEPo/$JLH.i6^Eqp\/d6"n;g_%SLO?\X=7DMjn$0A@c
%9b3hXf9=OQ&`>6Y'3uSe]D7&peia=T)(%ECMX/\4_tlW*')oDb(KSDWSTh8lOBc!$i"[EsLIpLYK6kG>*TGVCokWKd#t<K9hC7*"
%!PdcRRQVXc\U&JrSM0ouTsaI-oqIj`0k:=;+\4MpDTM8NTL?au,P,fg]/q3*!3M*8q?VRB.GjPu<U!Y4;&]@P!HDZ[Kgf!!DMtU`
%^Ok(,,S6[:q)2(eI7lE[73+d5"oF;9(tH``;bKcn'Gk4H55]L?EIep1ol;O[O3lfi#SDf>)nMP,*d!W^PJ=-r!?5@Kp7A9g/d`W-
%V+2c'>!S='6)&Pcr-]$(lro;A,/b#e0D:8,c28j"PUJ(j9CIBS]TLSQME#/RI28lTn;j:97/-g(3R]&uN)F(Adfb_LUKcu#^OeMU
%PeJaX&S[Ekba8G_SHsfYQ%AF_03HCUpu=.%Kf-jbl$S;Ro.T)%Cdt!o5okK5kT37U/Mq*>"f;GhA,5L"r/.a7%2F%A?lpDMpoISB
%L`jm:rD<:LIN_RsPUIfYW;FE3rD'#U&ZZCp^Ja/Bf:niIVXA<0lo?b\Gm7H#aqg\gIZlORB579R"*DR$L-f5Z$I@V0e33QPoQYmt
%qBYb2!G]?b[9/`ERgP%?DpYV$eHh_RNI>1hPPOKPIiW&FL@'P(]!M;U>B(@18_]Z(];#5qCog@s/dt=iQ@I72HQ%\GS"]rM+j5Y4
%TbRXm(f&T)'q6fK7KqB_G##;D%*JNYG(\?\lZmi&JfsXYRcmRg$!@pA:*:$Or\Z3@l]!aM(PrmQIue6In^OI6lTX7[/7mje54DZF
%3n$?#MPfIK0K5$FnshS'rN^F_92I7W's'(F!T$7E_/R74=bEu/%T!g^C\iF6_aW2/8X3AMrH/+-;_&EDW]OJhR^*=275!ltdQ1k7
%6WVC6SuB^G*Hk5CqGl0'TE#@'(>#,"o_/Be'B61iX+e`XncVPD!ZUF!E.X"-UI%<R7X0V#%]:kN)3lF7Jfu"BI5rW$o$UDHZfDlP
%)"`6=5fJ,JX#9Gl@7CB5K@SN2gGX^-bCe,aiF'btK7$Gt\"gYDF9M7@\#fVN2mLO.ehj9W9K\]lV8TSp:6g%EZ_0gm!VG)!!'1:e
%3`G&kUlF`i1<'"j.#TVpakDg[a):@Uc$fce_i'cbjJ:E/a:MK<K_D^2rqt8gG^rPdqn9'Y&E=Z/T0^..=RA7Y%nW+V2D@gS*Wr&X
%-W[)]6`\J+mh#8a"=!&"l!bS_b@&tO!GqNo3$nmlJg2H]pYc2RM$U#10NDB8!U54K%cHpsIaeW=>%?^CBM9nC5aHSWIT9mSC<0kn
%A&B!ZUB(%iq@u#Z1baOU8m"MA_K%'B^*&#GRlgH2@-l'+O0CHl?o"6SC`;p-4njD*<acMB6uKpgO@eOI;rY$QYT+hg:<NZpgMo#.
%n,*rr8-hUK$MBRl0Sn`NQ>[P6\.%ekF5SQh+,g>B7_DKI[iL#1i*2*7#\8l-L'=h5)k^SF7YbI!=^lFLM3khJj"<o,f/kq1Z&/>^
%G`$Z3=H<uBh>2RJ:80tMdiZ,=4k!X?J.qC+E>`n3EK`XX/.76T!]pZ_>Ar(`9H/s#i\2^e5h:CVLtZAM%9+Xm5aTkUjh(2pcD.2f
%04R5L<oG!m:h=tbfp*sCI;sO^BA)lR_uUJFXkfNTMA?["rN%ZdhnLi(nY&%_n_\u@1$h0YI0kCq<3F<B@/b"M[1fu[$kO"mpP:I]
%Zjcdgq#.3S#%2/l!cQ,^d/*Z[P.n47Jlf>Mon<"7__TNX>!/fK%/95[cR5[OecCIrV;l3_[h7+l=D>WPfQDus(P9Fk0gno5/DCEu
%E:Fdb<>c*J*fN3=7RYGWD=TAH&LJj@a32kqcAfa]!h5)^Yrj^*5Yrd"debVJKn'u*j9r^L*F`IhX=6PQ]TZ,YlUMO(4c<2DFK$s)
%JD99tH/^%K/hXnXn[_$dcmg*s`9LZ?;"Nk"(uIP@+k^O>TV(l5Bs`'Bfpcr.W'i/4GaBm*N=PhHOO=3]:)bn3>V>A3MmeIU6UA[7
%^@ou32"DWMl9B#jWdg/V989;BqfLA[BcEcp4T\aLL.Dda>L,SidOUT:<QtXl32;q"-r2rKcB'=g*bq%r4*.hcgX027]G%^g1Xaf5
%,@Idt/*TXqCsHM]K-bokEYGY)nl9]6hJl:`8pH]JlJp^s`M0@A$KN"L?<eaf@nL2"#aH^=?TSL$jP=^\DD@$pE2Z7_'pu?^rC".%
%eO"-,@&$^2Eqt6TBHWp"jNgI)XX"+G1;C8R'[P2/HER\Lb:POVF.\!BF#5\a0Z_&),i&,QpqL<STngu][K*X'<=8%SNjkbM!1lLJ
%%64&gKO8JOn:`PacC4+Gi%bc?7GZ0rl"nD4CrHm2;`5nnY!aq(N]u6f08$LJ]r467(-E,E10>fL;)J3^XOZP[=e/T$=7D$Z116n"
%02<@(Rc=puM?:00[M/X[*POj"f;S!8)!>ksjX"AMgTg?+$)A)e\AAU*3R(*5`]36!!&oG^qMY@js4\1"@A<UPYBNOUemO*L$I>ET
%>N@i$P#M's(aJ=A$$bd>HWh9u4pBi[@>;+5jh>IX!I1Xte"F%^.gA<"RA1mJogkA^IQ$JZE.sM4f0L0iASd:7*?X?n1"*c((@pK4
%*N6b@EdjcA/d3`L,q^7GjX3ZF+%n,m@]gQE%EH.tTC_&,7e[G2'l@PVnU-[c6\YV^=(K3[cp'hJ)):ME;==8eN2&gWe#;nmIgl@t
%WP:#S8"=p\P+bOgfWb::EW^[2NEEZm<3p!9amjo,H&V_>f5&;/"]Wh+3Kcil&_`;8`maOh%"XsM:'QL`Ad2&6U@AYs')h:?Ir+96
%$@+4^G@fkE_:10=rI]%un"GV"TFI8!id\kkl4=t+kh&LWcopdkO58UP_fbls56pt1bB3qp[_3&Vqd,0STPc\si]@+T0#ZNYN[+S*
%$BKf7%KA/sIX63Kd^_NW!,1fArB?-#dZ[>.'U_45\6km2`Y:@BK:a*`+^c2/"O%&;hFIeKd1>ZZX5GE-^k_7&'nSNZ=J3G$@MDml
%X9!lf%sYWD$fKUHJ`94?77G'9)^\tobD>2rd/MDu1IJ;M2XuSp1VtDU)5!?TJKM_/-]DIHDDFKP1qJ1(4loG+J@$KFf:XA028&Qf
%$*uAsf8)=1"X!B^'kk>iJi(P7-s95:)L&0l6eEZ/_@]mdF@+=rj5OO#4((:4otpa>k.$h>F_$;f$9,Phq`u&W9kZaWJ,>FKg)SC?
%2Z)Ss[QKB<^4<*gX2paZ35g!9m:B'W^bVD"n@0cEdZN4phcsL89h.m.%p'eG1S3u^BgY<HrIfs]^fTJ-HegF:#`@8)&Pe8dohh"#
%l_$?,0W`q!q2HTqO(Y`m>:/2lHfQc7WkD7OBt=g0)lqtM1Z&HjjtaVd.U!c+2HI(!!?S-d>_[$BVtuO+`YipL!P=l#Yn?E'fKZCr
%5dOCs>='kt`=T%_(Gu&)Wr1&5ghQ,p"aKKhkm-lM[Dc.W(lpO*93A>Lb=n`74jM@:0P:%mZ6E:Yj8U^Q#%=p(TP])[9[A$?"_/Je
%],kpX\-Aah^,-,%i72d.$3-M?RQ[bXNA&Fp400q6bn=?Jq`*LGich7&&2aM>OeH3k%uI$s%Lh/19="SFr%1_'&WKLol_I:/=$\&p
%="Pub-bPlU'O,Q0#Ed/O+_g?Lom:NT.[o!LkAj([if.=]fPuR4.1XgjY^59i&=XU[Cm3TR3=?&'$FJ-f;=DXD>g>(;W1Nu`L]:\8
%Y)bor@sT#^UAPs;6`ne^Jk"D`)f]4N"ILK"@J^:.>H-j]Gh=Q]Ck$-frCp56IS5..5;0s]LBbq!%9Q^Jo]!);V]X,=_f[[QCD]oJ
%;`)<0/Inn8D<$Y0Igk]J*#%()OTX1l^KQb8R]![1&7IM\Rt&%dKctdAjq)\8_oTF8!mQTB3CaX)rtVX5lXmmLn[D8\$jnV5\qIQI
%+6`).U]?I6q6=!6<-,h!esOngr4EA"'"$SUW^+Im75,&8EXBo@_BK<eY!$T9Z-6o'Fp'?npI!i(M8NqTB&np-8SHhpForh8lQ=AQ
%r'`0c:W.C!'MeqG$,pk:6*+mL#tK,q^>RJL%Y_`<.E[B"\Fh2.,/,k_$ns7X-PWtik9UWU?-'qC,*`b*28W:,=YNlcq;VYQLlVPF
%^(^Kc+.da;bcdAC5=KNWe[`1Q8s-M[BA.NrDHp_`!-jK&_T=7)ZXDR*PZm1a%_.EW!&LdO5DJXa8e4s"e-NO#MI77&USE1?,]/'-
%gP4$LG#&dL)R$W^1k\dtI&2KtGAWh6NBa&-83AEfDs"9:Hb0lU5\G.NEQ(s]I\LcO^Md,j3bYA8kRS7\"*O0Ah24PeZOOLkp>I3C
%Gp#4?]uS9J=Hh***0[M:PUV.Ual"#FO4][31,(M4Q__qqI0.IhNAisEEPD[$eZ&q6?4*B0M-:nK.UaqHm.25>.:LV:O[i6-C!mGr
%$O/cgNo;:R<)c(^TUu[HOI^0]HJB.!;&C^2g/m<+%GSLuh7g`*I=QdR1jO2Zlcua.`G8[\*P8U6,c^QMaISrs(Y=jB#?\%EVkLLb
%UIU^k#6p$>MpFq#1Ym?<LefuMqe6>k%C6_4?$hJtVhFMt^BVBL:;_L`R;`iW5@'*e9SL[5Yeg8Q$&u0j.aZd5LJP][oln9J)=F8(
%#cpR76FL&dG!l?[Jfhj1GTh^BL';6ogp6X`QDQHGm>;13eYrR"Ek!ANSp"=ndWICD,\+2`5"6Al?,9fX@DXcEl<l\fVaRi94?s&F
%_05ob:;d[i!2tYn-NB2@C4K2]hG6R`UnB%moof+>[.PIU>@'ehBH`u+GntS$pS>4r;X#*CR75mKP[V1M6#<(?FB3rQWe_4:jmCXP
%ZWb$b5YO<IX!Q8+UXiQA-p2DH`MFn2I'5C\A1GEKc32:;:F'+4B^.b:_>oKCJ@!b*6(@#MDgBeSfrdLU+!-8&XP(Hekpm[n8Q7f!
%)c(Xn*A'eeRhKZ=ksDa25jFBM"H4p=YTj6VdF,A,5>q[gm%:r7CKVrijkq`5Odj%:A$3(2F)Yu8oI-H[0@7X,I"5m*p&+Jj^EI1!
%<#u3d(%;nk7`$$^O<`ZLfAC](r:D!$K]&,7b^D/6I`)>?;9eP&Uj_6Bku7l:hU^2"R:-U#5cE'H@%A,mXi0QT5h.\UO(AeE)pLt7
%7p)m$Bre)J4bDt]Ds>E%mDDBYDX^W4W(E/&]0VMDkYB6T![\a=^"U?N<a]?08.7VPIlupi1cCj75NQ[2Rp`[MhH_KNg>[%gcL__:
%+[.lq(Yq%)E[N0_9jJ'P:W.GmCWeN3dKY:(RZ;fS3<ARjbA&9%pI\+6Zo36-c@C0>l?INik6ErOL1=J'2ZAQf>?eJ3\*Y\&nAQqQ
%^`amJ/=1kI[rgJ:h`e$EG-jau>XqsjDJ`B55$pOJSIb/_@of6a6pCMUc0:22In(gLVGg$hnW4$WHP!>KP]bLEmZcT7/htqX:0PiK
%_nm!k^V_t7oJG1MTnI$8MCsYo[Cj(\:bqrEQi'?"@er!n.7>iJ'\LdBc4!AfE2.r:;M=[RYQ0gSh\0%caD35Ch=H?nKgNMM'-Ji+
%\selch?Ja=95JkP\b$;ErGicG?0a[[oH2Zl5ps-P@S6r!kMX&0X^p>1D\7/A$amk>66FdJ/(j5L5)nrbM#<$E<B;PW%-K]`^G0@+
%HW'B>T_ZE1YAId"kQ`s2,]]4-4.@Re<!(+ghU,UuS(_,p*85A^JiGOf^_g&s(Vo=<%_/JSc!XWB.*S@n>N?dq^g.oo^cIm*2Z/A$
%Js2mE/-%UD;"'4kdU/-#<"T9)U#1[g#Fn+K&4*^0h73=[>@a!.?<p3#c1V,J*G]*6W1X,Di9]lt:XaCMpM9TbW[Wtr>YHhZ1uiK?
%=I;4QiDMl8S&H8G3O@Y#ppDH=jjB\flSjIPj/-.2?*SiN\q,Ho/'/7ZQQ<Na\sM;c>pbjj8]EuSm5mbX($$3"lKD0I>;[W4YaHPc
%o<7nk/eGq=/T$-K$cMg"icrmcW\52Hen\I;)Wh)!^61_SWI'Xr\OSeKUj\r0T/$73"#_YrHu=[DSaJ1i`AN)ZP/D:o$ZEq"fLm3Y
%hs8>K?9$IRH0mA0gT:cOrWsZ*#00]D?GhQ^&/C5:Z[;FLepFaNF`@oZMQ_QUYK(N[n?\ZDM#$q:k.Rdq7kigsg5i+o-fH/n:N(`U
%S>;r9mJ#W-_ej&2BinUJ_BGR;9m*MW<NGAX#C'R[OXfd*`b?g4V5(SIQ`i1`/5%D?gl(9Paeu;aHc,=%C^JpPIhJngeQ(<PH^r*?
%@b_HO\%<QM--ibpD4<#96?@K^9kFqb+qb$+@D(=H@tD6&;L.n]C\6%;Oimh3L)Lc!.ls"%\j[+GL;4sVWaHd)e%.kplF_>X9=<o5
%UQh^]*?Ct`')b!#G>Zsf:n@jJ/roU]rmQV"f[KW:[*dhoXEkR_Vkpo?RU(f-g,sjAe<\fH+Wo)CjB=Sq<g!hC[Eab)HT*CC>;dh`
%Ncg'BD-/ZioK?qr3If&+Im2d.ILO,I)Ajn*J^LD!lsmS="/A@7?3H`uF=S.#(&&+mITj"\V[+Oi^4SXncM1Vc6L_L>>i_TZPf!T2
%GJaV9:Ec+FB'5!h"kS9+EN=b"6gLeSm('F0F,V(&[0BBr4+ae%@'&a\I<u[>D,Z5t=D,lXEeUea=%_9hOLG9;os!i*')rg<QCAcq
%;-Oej839@aMpgtBg&kGeA$IO>MLn'a8t3nRg9qaTgeQ+H9f+e%.+ULs.=qSeXg9?6lMAI[UVIs!f[m;C3Pj\'Q9,AWRrrg.-=#@n
%!5t8dACg?dfVSrZgMWiFdnI0$#?5gl:3p!qJ.GEtG+,TW1\>G`8VML]Ki(*%VaNJN$L0l:?FA&mQ%<n`Gbt4EJ5^`RPqE;'?,bcF
%7iO#qLS%^TTiKi7ciO(TIYDaXgNslokm+F3cMthu6E(c^Hraaus5R!1h&53H+=U]L'Gg97lQYq7_+iW=\orp/LZtq.*P8/*i1FVp
%%oi$rW6X$O<VN\W81i(;m[-(3:4:lQeN1G$?gf/RZ4-gshqj5\R@`7a,W=B:b!00f/eJ<U9)R!IL1@_]p/CDd90l0P*D"TG>eUpi
%KHqq]/J<B%`n%?A$UYB]2tS<a@-@bBWF%cO`AVZ.M!uV9@;I3#5@>4A!*bi:5$>ID,k(UfWW#R3'K.F)/"P_]UrI3!+bV]1Q%/c(
%P-r`D90jh\_Z3,[DcPd0m)B4B/O7`'CO:hC.'V;mdS8='h0-0s"$s,F1Kf^?9m20u<[YAg4%1U8'njgUi3R5Cp\Vi,-uY,6HS[s)
%6g_\]*lu=NV2]Q7;#m[D)4?WWVF.pi+c@eUDKmRSSnopP9H%qoOb0+-lAC+JY_;ItDL[fJR.G5NCr'Ad*Wp\UiN=_%\h:e*3>#NZ
%0YDMUT`'\QNDS#_2!%i^5-mas2=7TE@'ba8:UmKhE')_dGXrt"kIOY4C.\@#oXOqBKadn*QA_l81=3(:7_o>6S^df`jp>A94C\p[
%,J8LJ]6sPu>2/\G#/aW2N[iMm!M@e8_@eg?:@2C<W]3OAZHModqY/Y=k+UMa.K$#$,JNu2'CN*6hin,HUFks@cI..VA\G>YB*h3G
%X0bBb3Yk'c.^:`nZO-==p3<%+Y#_FFA*BMM*1`'rS)o4O^ITtUGFA2]h[!<cEM,>/<X/Tt=#kicVRI#]eTDQ+XMb[_)bjjp*q]k&
%jVoTo#TiJ9XVo*<SOI^;1&u@rN=G.'3$7&^f_#Waj@o3SDenK+\DQ8hW*R5(]gV=34f!+*1'WRZ3D(&5.j-Cqr!E-Y/_H&"8o0HX
%[3ERHDPYg%QPhku3oYp;.^3/u3`_tVqKm:>*M'//`$?;-$u9AW*5gS:L1m@Cp\:l!6B@.<GY.+Y?-`-;L=N@Bc5M/l]P6*.a-)+B
%8mDZ6i9mdr(s4M7b^$bbm+5^-ikE'ls*E&gXJ%.cgL+hS;kGqW%na@L=^pNK>$?!`dV]U9,U=dgM]*mh)VaG6bGMA,efRmYfM+\[
%BspEjG`t:Dof\o4:5?L#mBZIH2N7Pf[-e[2o'Y$W#n75b.%2Jm_IYk_Gsr7"S9,h9kh5c^8>7+H*U.qL%nE9Xa>._TKH.N:SKDQj
%:keq`P!;uC2!5i/]8BYr4;K15/%hXM%;#kE?PNhK9C,BI-<1uBKb\L@iDQW`Nhdfm]r@Y*%MnqqIp@`3&EL1]m1fXj7&\E\#t:$=
%LN@!Y7sn2Y_(<Fo%&E?BqPV;HUp97D9"]g4YJQu(X\=PST^#U%b5R<c;SrbI1!p#=JY6-.#bEXWM>.4H0kt\P6!l3CXkP&=.1/h0
%7rr&lFc7k="7:BS+e*_PcS0<80A1RmRcqO=!r;J]r![knM_>9Pi6./mh<!2&(l#m?8hFp5OUf3)9`+C5K0B7of/``Q3cg7@0K&l:
%9h#1kB>4/%bOL:\`jg(sBKa"$*ZW+_@Z"Vn#Ecfg[Wn<)/1n^uDKl0sSA`=;`rGb]C0e`UF@MeLemMjaCV2.779o'ucq7k`$Qged
%@Y\s$eH.ttVmWsW?IDg8&%Gm05@0C('o=V')+W>X8di5dCm@uOq">AoH`/8&h;nd':M([#;Q*?<M\AALT^lpofia)/*)1Sb+"o"F
%oO.KU\.>';OZ88e`Aj1d5Dhgo;i>Vsc]nt7%I+o%<TJqB.dJ?aHU17fq7FJi-!o/KnK6BC9>r+.8']6ug5ZDf:IInS7#Xlg>+^t_
%8dqKZ!k?hur\;!6(eOB8\J?_ilIXT&.::?kigFN,8W[K:/du9M#HKNf^02$CLjg4m#A&]'l-P.Bf8e7X^%9]1I+ogOfe=2L]T19`
%-UZDDBb"Ag!)YGM?F<$d]>I+Qk!Td<[_76@8&ZhSm)Ul,[9[/;^R(]'h%3cHla=.W?s5]QiiV?sfY!'V[>T&GD(84KpC;\7=,)GO
%a7i@SrbL%UU=4`teomh[H_u:'3u%J[55dTg_:WIGF11co]R@gt9[e41T.N!A)&%J3*+(.ns'bHs4GR>"jH[`^fs*M"Rq%)lW.rh(
%^k+<H_&[uMOO]m@jt_KXe6&@C4-"?Xr4t@I&76%$I_:biOTSl_XBOgI/B<YOm9Xf@S4kcI2M`QX>AnN37K@K+BDF-FB=s:n%HY/a
%MB-Lq[r>81LAO.03,]`/+YB<4eNmAS'lMPJ@I_>fX]&1H"<2,ZJ\>TR*q2o.2SC(4a'l1Hn!cAe&YC<?jr"j!<l9]Y?/9Dm:Z>SB
%Z1,YL@G/)gJT_V18MC9i8gdrFmYE2aT!)P#9,i5^c/'8g[3Gj^mQ3-nM2r\<c/*'lX^.:!YPQp7c]G.sj3MmS?X3MjNh],eml9T-
%dn)uS@CK.N\K`3chUc?3j2r,+<CSI:[]7(Rin5`CMPcoc8FR_e3;W4<5fubW5N)@]3o6K)&m#.:k@[TaptII^OSG'<$f$`<#^E3[
%1OQW\Z[eS@l'\e:h3UK)8[19P=r?^K2rm@3k0A'KH_U?N#pIsKjS6Ml[Z@r$"(Id@G:GP9ZhjIIqL_8O?7&;&88jdN2pt]+[YP;q
%Q_k:bMu$K'1<(h#C,n3cFRY6o=[Cut-DOZ,')q<`TfV`gSqV,XQG",W;t`K3#U[N7V,N^.d$/Tfr2dNCE?)He_[!UD49!R\oohWj
%W@sHlfG]99!lqo/SC'L?/0<eTY\!M_9(i9mSoGhVs)s2r&;q+e8mBA(:+tmE1LP"g*e)HiPEQ7uBMC*Ime8-m"aRh9s1iKHoTjeE
%**u=XL.TPr$?<$ofM]NJ5g!;Gp(SA*`Rfr6<ajJF2lmoI`<+pM.\]#G1NhIh[g>(bQ2'Y!ca151^[@-UCVmdS#G*uFfuJF@lZ/8g
%"b`7IT:UL,#h0TQnP#S.+AL7)p\a-#b;!etVJ6Mt&8c1-Z'r?7b6%=bkl,#U=cW@uTadlJR-q$,\=_S0e>N(X;&$gchck_%r$6.^
%OU4)l_ak4GUW&/?LTANEe?Wl3A\RNr6D5H7(;;q1e3gA-2#%Dq`#AVg+SRlLB0oN2:\<qb#5A-XhnQ?lT-rtW&$X:NGcYp^J^?0.
%CV]]>NZV,O_%kX,<,c&=-7Ra+lO3a&><Rd>5TeRd<24([#pj7ZTq84L\MijTM?rP%s(U/8XA`"rP81XKMkB#\pXR2#4:G8_QqPuZ
%!l!rGbu>G(;oH(M44S)W"9,R([S1h4@Y&H3MVs!uQ*u/$e[1?6D1%(n0N:QrnMM8(iD7V>\OpG;a^pf,!iBLOCdX*,l"[_].YJX$
%'b4lnLH,cS"Pl63$!.0rrbN0H%f!C7h1p3Nf@W$h^\5@A5%\u*R>HV7\U?W5rV#gc=k3e"SJIOCk',?a#On_;$CcQn-X)`I^\&Q3
%lc!A*,J9tt)K?b=2?E\*qJc,A02/ip*BTQ#`=qm'7m$E^gr=>ap#M2@PC#'?g$3d=mUiIKIN74Z$o^*oA+?aH\,a!uG$IL<2gGXA
%cO[E3huDKb^_V<VWr]j%mLR#lhEdXVHDE46H-7iFqjDc6J0lZj=^:'+G,noWA,^H;]!$sf,9nBj.Vb41U$tL8\FI#J-16N?TO'0P
%*+GG<eo\i!DYZ,<^.]pl`3uY]VN7(#9^?j4\La]lfBF>>iD/ATs(qG3=PbKXGBrte\!(a*#-koHgS4jD%n?jD*c?8j5<(-B2]WE/
%bp:$t:=ZU11\&2f$n9Qg[@Wl_chkuF2&.%Z,Y]RMJ.E_D<]ZO1_'h:tfeOVnTYBHs+hk$UQMnC7^U;<9@CPgefYqUCVGq1e1bIHG
%8!8XH>`2`HKAbY=n$fsnc=:=5GBU-q]0eB4jB]ZSDpRA,Uah-3E?9@)XR^(Ms"^_CrVE#Y#d)!Z<$EXHl:Vl%pl5W_eakPNYn-Yd
%Y(qKj&+=FoYm?s*#i`GSl+%\ASKE\1M.3\[WRD7F.o&0G;0CJc#tI@ii=?KNd8f?6R*J^lW8hEX+A;&?g0>Y$`-&_=?OjeV.5f-T
%.=^8tR4p_:D1CK-:$LL<@2PWX]pK57CQA#XiV9C[pLM)]'%-<E6(,8G&2GBB@H-RH2,X*+hGZPPCTr0EL[cDXJ0ufe"$TE'PelN5
%im%ir2)jAe=!cU`*)Sd!n(2mImX:WReSNRl7SUgV>SYn%<?KZqBpr$0[M't$j`cN66ru:6J$7G1`9ggaWB1DI4p/i-s56;<[MVsq
%39l'k[LHAOpc]?]YBq:G+1r!m"%K9FdW#Il,KC"rqPhRq)(VI',^$\8(GZ4QlKdZ[jnQK5*e6lPRK%Y`=e7pMiLdZ2e]*c9XOM(n
%leT"JXRl\%n9VT&5q-KPSD(-p!On7F(aZZ$$H8%Ckr)lCPaZ]YX-IL%Rc#."3BZf>h$ft/)\,ck]p:[:R2H!RW[_8L(2Nmoh0A$G
%Juk(ag4<T]G0dNo)kWRH9s>0WHN!ImrOoFrQJ=r+!=4N#":)10WQ$OQ!U^ZVVFP@91`/2q?gCdk,2cPR@hZO"'uoiXQfNc8%Xp)/
%j(^\$fZ-U&Solp$k:rANn`8H'2t5;Eb1kGoNjI6u!nG*cY0fJSc_![940<8N$K5@N,0/W5<TARp`L>4X4<gCL!cR4q<@8>*^@VtV
%PE7Y/<,qE]Db1:A3N%PPMnQc9i^:C-ako.N>H#28j3R"e\Q)cbEaI.!E#[L9?H!MhqL0)B15jupdAQN#.3%2D=YSjk??s_^R1VW'
%?+::=K\K^O[*'Z-]KWCLh3eEoDHRi:ofC]5*O#pnGts@UBus2TmeM%(`A6(j7/-lG9=h=B:[GH]7TM/in@1L-r=\Dc7Km$[$k@=&
%MDrpJES('@0^SDjqcb"4ST:s`g4a!f3kN/Cb=72"S,I&1qR]5B<]eN1EF@mPmG)X<cU+Q^!:-pgp.ulL+-b1D=GGH1j`rG+`:(.6
%QMZ$<_=Dl)O2tR1i'I9a)^A__`+cH!;[ZoVKH;5"RA-5ZR,ihIe=kN7eCq>tVa4iu4JX+M(P=tF``7_0k-W>TOD;bOoQ!&S-VcW^
%ACfZB)h6H.fToD%;mHUPn#9i9c,'[DUMm<QL.&<ZFDr;\c!a,/@$Z%YcZNK5rr'bRer;b*!dq&#'`k@a(55tD70],IQVp4b'&XR!
%NE>Ytr-A\SSk&L<'7ieWnHWpV)Y(+%X+P*>j.L%04c+Nh,@8k8j4RpSZcbMaV<oUY'4*:qo[K9f2RgtT!,eb`=C4lp[A;mm0iJXo
%BDJ3Kr(Oi.qW?$f5gXQ!Y:<@,'O@=k*BV*_g@0Yd1I530"ShoX)g!WEnSU`.^q3ZAOQt$i_B==?'(lW;+UB,R?.V<$IIlB'aU)5;
%%J@r"0_5B?>rf_W8,OsjJbBo?_l7kb*LL7ps,RAM:nRORa8>`=^&5[Q]\]_Agh:NVi2AP;0ts^[CV[Cq^3]\X1jB]FbEB4(8pjX>
%R(LgA*+n@0S2E@ccPbV'5d&^ai*3X!<1oQOEb:eD5KM#9^oCR&ZEq%5`)#8KMAp=.M"ZWQ"khR;21IGG&,->LHT%3uM/`p[Keb5Z
%5#kWR:)Z^s7bbSIlFIq'OFYYP.t[0UQ+i%.6Cbdf'`iO1.PMNaJ3Y-T.o7N4i]S'b-l,F5j6&:2PpnJb(Cg*4IW^l10cn\d75"/X
%&$N_:c7U$Apm<a;,-op2f)+H""o^lMCG0,8N6`-[7!nH@'n48dKO'VgE=>`?Ac=m<@8CfZaQeZ&'8E7DM8$%&-18/VN0NWFFkl;2
%@TiBJR+(GULoX)Y:,BHFib-en$$]b5n/n!\E<*rR_[=DWcKiF3\r!&1=Tu3))(GT<G_"]i`II,PN3F'/oG2KGR6N+!+Q3'5`BUQd
%cWfgC2sI:FcTa0s$u_^%J$)G0(>q8Y*HcS+_`59*bckX[m.^#>bFP*b-lc<QWPRMc)*g^O/!a;q'*#1IF7@p7fZccY@j!?RgK;?5
%C:neuQDp6E9nF]-U\302l%?j3^mfdpbMob4(9Kr0kV1VH9.1+/[^nhKE`\K=*hZ/tp>Rm8S]LZ+[*e-8,'>7%?9JcSm^u/:^`M5P
%huIfj]3o7(Uu9/.oQ-U?ea?*R>;#M-6Rnit4E(mqLp(ZXZu(OXbSeTIN,>K5_XHI^b6LH)OQ^gF_s?j9lmZ;d<B<W4GnLriZ@mY'
%j#BDq/l]Bhbnk<MALb-P%(s:6TIG26nJ6gsXRJTZW]PF*<pX/[0:k/u[Jk!>Y6QYSf.ilc*q2q%=RW@>5&0gNd(fU/O$#OI_57$A
%@0r7Ri+D'VE>]UUpErZScXtmlJ.KtJ2TOC8+`20\L)"FR_#*b/`2Oq!5i^%TV<E,#OGn=IGg15OIe)EJgB'-:q_HF/g1g<1FRVt,
%%!MGR@%&/ITUfYG-Ghf+'X"&JXC7/RK%bu4FKl:]5FT1EMPtV6Dg8!>Rfno@9Xe3bb9%f7@DcT]P-MCm,-PkGLg(B\>\[*Hf]3E0
%YJ9KOW/?H)l#+7!LXrL6JhlTZ<.*?aAi?heO@_pF0I@1](l;>ECOk`de<+7S[UF\-B$S&Zer&uXb'NUX?;*!-BZ\cJ=Y0=2_s[$D
%)<TD.m9eeF2H+5[K(/&,AG-M29qA+AeMA\->b"7KHLY9XC#OfMKf%JH2%@r/4*o[_[:>%/"#YRO7QW`j>:38,X/r[$m!bNV].:d(
%EI5sLR728$#nnRk4UW9.[I,_#0j\sP`l)1pjO;chJN2V$:OH;mMtD8g=q@'eX<B;s-0uqlY/t4\GX5upT..%JiYV,;f0n?3oP]dh
%/lod,1EsQ0FG)4-86T*YjfQ"G%UP`^i*YnhG/7(CZj-iJn\s\FhsfUqs1P"Z3+t=&@r&Lh-gs^7Y^3a+R%9hYoEGij(S'.-[g<!&
%gSk=e'2#81QA*Fn2_ol6ZgP2S]-ecl0h&@#RB//FQ_qT]63?=E^?1!)HAN*d`Shc]R<F=Qem\V$>NN[:DZ0+;E0?(J#=K6b"gE\Y
%<=>3.)+<ITT;cFVJrFQ<J@hoj>_Ch[mujS&?$tdHApj5gn+j#E8fVJu"Xa+,'qP,U>:]ULqN7Na,APW(l@l'r@i*5P`sJdQ-*$i8
%och,-`GeD1_dbYLF6;T.I(`4efY>_p;S;[FRpCF,Z%j!*M+[RqRcAD%Tp1%^TDm'rUp.UXADJ@18ma*1:P.j;I!_@Z4ZPZBU#_6\
%(J_Y%X%&PZf2/FH7n=A%]>WI&P!(H7+I)@-:.FK,ZDG?*-(cS`qFekP'"i2u%[:#jF<10c<>b_hg1+6EM_7,48Kht/,J3Qg`Yr,5
%CA6Gt'U&.'c%=_Hj6'4u/DQd<Th+`]4jLL=o-ms&H/U9]@`;&L)/DZ#e)%HNi+JqJCH8K6n*1/Y4JU45f:tuM1KT^cC#p/FL`LO4
%o@h'^QU\c2C*N[d#[ZscPV2@p`IEgf5PtZ%m%b;k:cP_7Eq$mWIOACMgEYWg6K:of<=RCc&,?9S)VoVmg$@>U[Y$C?n$oV[RF?#"
%8B;2:Rps2Se9[*,^K:2mR7Z=*.S%S*oJ5r,1H_.XO/&)Po!GnY+OkuK/O-2G:<4HJKn)*B-:(%Er+9nPI2_"Tlkf\A]7(C=hfYEc
%6%Tnf\`]SMjEZ\;)&*6l$5.ORPTGHTEs:_EL2cZ21naZ>?QHFD\0t8LRJ>+/nb7^]A;MI]Gu1m%J1G35G5E$ZTdX'fL<do!cZFAR
%Zn,YWC4$aVDj+3^hU@7cMPQ_%L]^s/1IpEDd4a3p(-B(_lJq)V\[]!NQ]@PZ<P+$#p/1j3[sqq(E-HOrle*l_;aV@n\PcC6>oWu2
%c8$hc\kmqfF3YMbRQ[PM+#5ZaQ-N7CN`oZFgT3HqWjT.:qe[/(,/7#\1LIdHH\9l1boCN@CZEcRU.6R/W.KB>UYDPdg?ohR=NrWS
%U`POli1PRt/,n"GdloodIhk!S6ua3LJnR@FY@,^&N2r-[nZo(%TOZA3s1Us[@$-f*rsE_8r*p"l!t6q65q$XMi<WgS<T@0C<5_;&
%M^Hq+3csu)j\\,$!W)!NrHqiIj\G:6aD:f._bR"#ZEq?5ZuZt!6[Gp+pE&oaY1OD=X'6sZH-0o2:+U2\7WP.((I./WPF$H#bcRWi
%/+>asMsoZ<mchG,E%0S>USa+rE4NWcIt^s?4GK-X@.i5Xj7hTU#D_SKS/qq8KqB@=nfHhnHHcQ>7d23Y^\V%C>g[3Bhk'%peMEr_
%Tk4K+h5_M8MYHqBIp\8'N.Va6Uju9TI=dJ]1=/1a3"p@OSdQ$m\O6.4@>r+*lG$\+e\k8$l^,rU&]9D'NpJN,1C*bA]\JV6L@DEd
%P-I$)InC$f34g&8[X.m/^42SF[r#Dh]qPn*M-=7FGrP'^`*9X4]hVq_A=JIpY::!sa!rEkoODYCr9c6h?]4!CMoeHlnXa"(&KXJ3
%ES-_m3Men#.3&&0mFIR1$5c8KlGU_;puh/GAOIQe:P/)m,@C$"pqVV[_GccO`iF)pW\fap49#E_B6aG3qE'@S$Nc37--n\%g8jH[
%E.'g!#A8Xk&aJgTI%Hb1%Y05/R>'/\>RuImpG#oS:Y7iEBL/n8_H(LefBu#=W$ZjXkSd58<Q&@]MDEaAHkoe=>P%Xfa'n=hS:QOs
%`9VCG5>7h3CaX3*c[>23B,4sCZN1;6WG(3W>[eYfFX_K%O\=fYK60m\[uDmg*9&J>*>%*D\,+$"XKreJ<lP`4/gK?OOlO?X9j(*X
%fq-1Fq(1`%OIdJkqXIbjSP?<PJcbh!otdnE<T#!6Z,c?6o16/@i!+LpE)fk$ii)GZ?eekJ,jm$KHl4#AH<u-M-j(,.N=IQY8V\5X
%kZng'[d;j@EBTbdmBG6]4SPhAI+Tg<KqXgo(bh4dGD-:7VX8>&7ko_L9UCD\#LZ.G0-0o`0Yh6;Bdn2rl,3'NGKC9V3j=8*_bZ;P
%qLVLFGFH_Z/hn!%9G[#'(`hdqItsf.4/rVO$32%kF5u<)`.)#dY1n&OMN[<4lNj]K>7OpX7*4\i[CIt]kH:M[&]WK[on7J2a8"-Y
%qWSH]ia@ik7CT=_m:\9u58`<I>Jk'Im!,Y9:-`[kb+.6*kXh0:bu;E"`b4=K7[-R$C14bKdI@`86Iq4F]DYpq>DDD>QrrK8?n);j
%QKpcom]I?7r0URj=%E_/62!8+!rr#=`8*N^'$HT,hD"#=)kpK14C;=^q`:6b'K<rZ6Q3:6qMPP#/R:8mS'jM;m^8J*p=U*cUHA?]
%''qgN?4C#6Xi)6R6snU`QUtB=q]3`4%9Vb]!mV*M?<jL\Nt]R_)5LL,GZj+!p'pIcEtdHf7>N$)/Th;$1!Ve9Ima5t\pp+/-#:OM
%,EFDlS]A4qinPk:<mnNQ_Q:ulrZlPdF1gf/DY/:#8"6!m)1;]A6UKaiF3X'n8FS84hc9>I\jbA9mfY^VGYLga..'OUqNoNc*%/U+
%i2VhMTBWjbbp'c!HVA@mp%j1G]G2*][ODCsX]JJW"E#AQi:]np1P^PVD5Y@95GLm#PNHa7e(,!F.:^hbGTp7H%rlN-^,:o6mMTln
%!q4[mj8FjL;5BZ$a`<n4mF49N=o7isr#X8KB'2)WrnkJBlUeHS7mL25=Kp,Xf)MHY4[j1;Q,S%BbDT;!pe;t*2:0j^Z%[PGo>3"g
%"b@!TkSZVX/p_8;?Y7-C2>A8rgNPJF;N).o@ZIF/&7Qa9[B+?1qdWlg;#'%KK[_WEf$EndBJq=`XoP6QBD:pqK,!Cd=5(G*/*k/e
%N"6uO:=De!`Zeapf0;ip!uL,QQk^NP+pi9q3aWA5JWD#4W>uo%5CO)Jf?_OL^%dZOo>bSrdUpbDj-E0F<@<XO*]mCj'94=NO4+l\
%_U`Y(=4S_WUqZUtZLkD:!^F<I)$7<.SUiHo4^Xf$\S%@9]o/`&+"fc*"kK!1cC[gDOc)J-]to6^9*65qA7=&iT=>;;7:L,m!b5L7
%dEjO1.ne-,VOGL*?i(jn9e!5ADq)CsMCZlZ[s<Dc'_#7)DgS,bruT\r!IIOp]nm_i_;pm=GDpDP41q4nGftWuicqS&>5qf`onsf)
%H/U3Q!+bqkAqp0hP*oYORr.bQf3rC9k_^d+K?*l7HN!Eb1jO[@=EU^X`(cLT9pn(kf>O`$k$C%+GT;Cr8j6LM"6WAUk=k@jJIYQE
%8^U$43P@,1V$th_Q'$WYaG2ElP4g5#s&R\fYZdlO*8\G($:lGh#/)1gegqZ%$l;._F:jdPJ=(6D<-PjmEGE]2,U4#6HlE!F1@CWQ
%-"\-E.:mZpIcau1354"TC]n,!H(\;=R?jiC^2)`oKps_$hoj2HECQJlFo/h]>-4M^[G-b+%O.Jh'Zf=)(GGS(p+e4-^[41WOW7u\
%I(3BFL]d@9qLbLF2oI5WaAbqk')$JT%Ne-]OK$L;A$i@:Ebi=R]Yo0)c#1k%_0HcK^lrL&iHdUj=JG7jG>FQVfu8e^DVL%b4&ci:
%HM79Mk?C6]'FSQ>gff9p,odcj.*3/f>DteIEW(XlpN$8C"LjR5Ln*gL/j(j_ReTj5L3TfXaSF`QKPm\N^NFQeC*;LM6H(qO\3u(D
%FcriXrZ2",e\m0m91hRpk!UM1Ku>8nB8?35R3%_@q'g]l;]YD/I`hUYj0c[p1T89`mN*1C/.BV3<eHl'?rO?ENg5j5I>gJ$OU$;'
%!+RSo6mjd?[)RYM0!a]b9RO$[nPnS0']\QXpnk,p5!BoM2OJd_lV6AlpH%7nAkRC5L8ha>l/#"bMCiE3`1)Ro`2EH:JLdRfM8Kak
%$a$@8r:t^t]$>AZYDW>]&I)e<X?iUfWJ9)BPb^5<]UiTD<,pN_MdBbJ4E)KHC9SjdE78.b^b[PoJBrZWYE<(cRTNRA\4i=-,QBa0
%XiKnRpD\YG[G%D'p*4G`H[>Bs5Q\"P67F#6(@'K%oOb>>QBf2Z$:[5hmmi7#n-nVNGORpKnm:W=$TY\73UeHk0DH+_YuJWr'RjB;
%!.GII4(]G(@.U.8%LrY\)2W9W^&s]i4)iS.pe;7S1<-m$qTuB&?eXu=F1Ttf;*Ug^*V5+`[?1L(rC$`O`KkpFG"WPtUE.(,^o-N,
%LbF&;5Z+Z$F8W35&\tdZICpV..ar[sO(T0gIAm]aJa`>*CLm,G%PK"R`%YY22c>FrMuOVX^GVBT`q/L)i%u`QO#DE;;hk$:G\j-7
%61:Q`(+D+"QL3q*6+iK8?7QPuDMW?XU(T)2=5p,GBqO6ZpEX(p-'<HD-b.XtLqJdIF%'b$*=Q`*EHimklN].*=-0#%"c9kSc=ORL
%/07WTS,Ra[^>_LqFP!"==)!X[J6orC*0d1s#&oc"!fr(>=PVZ\)@O3RB*37\K$ab@*ES#04qIS0C/_5c&@Cp"id,>N0V"Ffebgke
%YlFRk5>6d$--4l@_#V+YJs+!#Z:mET/SED'Ct8aoJ+*2XqFu^abm$>HkB6alLct7c/_c0tVNfD6]Tuj#UPj]CO(\_*Ip+o6GGlP]
%d0,R\..MUY:7SGPcep+JDfXWHCVKB$%S<965^p=&V2mS>cB.Pd,B_\0"b&>`,G#oq>0U&WKJ#R#ZLu/>,0S*r7K0/]"Hl=]632id
%+"kT8\s8]_P-)1h`E]j!h63rhpJ5sgNVsLsW]a[Ybu'I9Q33aHIh*]W6Q9\?FaOD-*?rlN99^YZ)q"Gjc5uUj`pI++5$WTog<"16
%LAbig?Vq'[G6dp<8cb!^kK:?H;YJsnM=T1).r`mJ@I,ci=lO'],Kc8:EQIY.EdX_)[d0_N.;Ebr&lt4h#sGKTq\#p=j1t>q!lml_
%++4YiT"lKo<P/UZd$TZZ=bAl1?JP[*=0Vl?cbCQ)'nBp_qh?3c3$UWUqtDV,@f$&a,hePB!5HLDY(1G_.G`P<j5]Zn41(32a;,N>
%X8O"k7pZA;rIk7?bC@9fpL0!oNK9fVD7qV%A,M;?d+iBh9!XspCG<i%ZW['2n"dbl')$*-)rmG>Qm$DIi]kH_G1WQ;LTH&#'mIoD
%]A9"2F`;]9$L6ucdaYXf_l+:bn5A/!nT4JqW?=?.k%TT%^:5bt24>fOgY>k8TG\3b4Y'-eOp&PL4Bm8oSS("u4dK/Wk2tZ#K7%o[
%*Q+aMI*Q;@.kM/&T8F?N)OWg^37IofOl_%L^9DK[qWSgf@\ESRG''+LlXQJJU"SmDhP-]ol\r?Y"`>FMSoNnt%c/hR+32^*%o9VN
%$Hhl&k5]jN[8O30l[-_s([ik*'HDURW]c:!<r7dcoe.k7AUr**DL$s8Q/D'd@R[GA$1K)SFlc_YJ?'&9nYL+p39F60*7'K97dZ9G
%nX0V&i+]H=C*$t1e8>3^F7OO[fYho5YWKOn4O7BCSA^b,q4p#M<<ur"gkpk<f/8utQ#HGYL[S%F-*n`8o@Vd(INP#+A36cS0b96L
%i]Dj\A9US#?AoK&@4tQ_nVWd-X<_1gLX;lL4*,15i?Soj(&S9F@Kn'`[h]S%-HWT/KJ!pg\F+gY$+JLBlhbrl\lG-.pX-<G%nts^
%,sH1T7pKX'^mj+?)cA2(7L=q$EUrl7*L)Dmn;Q2ID&aL]9]P7%Fnto\I&Re!^N#@S/p"EZ^pSU5r#N:jREb"m:aXS_;JBf$>g4V@
%^dWe_gtg9'X%I;g5:_LFi+JVts)C'5dQtpOM"C+3i]<4P\"hs)7'5t?58G:/JW\u!rq#/7VIPN#@G)ApGkap/>f`A\Ajec9,]AOH
%.X^km8L)nM,=+k*cBt-,kPALNMHc)^n+P93QPg\[ZFTQQ*l'feaWX`@eDCeV:CKp'/O$\^)8buXIn$QQ>PiN=Sg3*&e26$B^$o.C
%q>M3q8l,QGV:bC:3m?^Sb+ti^Omp*[O6aoS]?n_^NZlJT.`"Jrol;k[H)I8`MP8Y(G<2<9gpI'H!XIEqUddAK3t+D'"'XMFH7;pM
%]"hBBE5&lu(C9qfaPd'i`#ZF=](!?[Y`>R__,[8fH/3:cQ:ZcZ\$Ef9Uh]Cm:jt+0@r->kGQQ-6'ps'pA?T8BRTN;4\d4m<VnKUX
%[uk]^$>4gt_\i.)!k^qaCR.nZ^S-6'kVV.DC'J"o-O3'O\HUMX3qB_#kJ#)@dELFLI&rLEj1E<eNY8J.Ye3Xfbr4^Bc[-9HLA@N.
%Ds@pJ"HhQT90DLTQ!].@D_thZ9e3UrEncL*(M6>9G,'1TX,-4Jh]>%dG*O.b^FrE3H\!iLdttOSZ/:3^Pr;pL4(ZEl"+9n44&9>?
%00C?S+M$8@U%cuAr5Zb*S;"4qO_$Vc1`U'IM9BBFUd=1Ng!r_%Md=5X4dH`WH:Fp%4p/fuVc2js98r!OnY(]6?jSZN%i3a%rVH5V
%8mHs_>c5m:T.]#FFt%)H>/]if[^j^Kl05uAi3qPAbE,*6noCWQ\]0aj.Qk9)q1eonr-YFc2Pp0#^-T_bE4"E#ma&.^csZuW[=5?X
%N,KV?i='(9Pk[69\!nF+M?;:>Y'q3_dW*hu-b:u20cm]Ki7Fe>4H#tI7(drca*'#bV9c2Y@MHMKJ2^O^f^u+(rGdkdGFrQ3*;Geh
%05tK5QsS2B[k;B2`k2)o#MumH0RFeQ8iDHjRW#"'.e'-8IZK4uI[+3H:o+$7qhBS_9S^'@:Ih8gCe=$#L[2cI%C"85`/=\KKc!'R
%ke+T[kgD#k,3$4pf6l@Ff(NjJJNJo&]^%6Qf;Im2AV2\2=:ol@Ik/1cb3TOjT;Nnr*Y(T@2\P*c2OlV&+b"'RESW6V/pj!`/j&[5
%DOYf_**;+:_6R1=0nq3G_M;bR4Ssq$dX`).9RHsp([6]Ro'^!t17bR-6iGR<[la(A8s14cfkk:^VK9\jhlYf4jDGWD0DHbAFTu`-
%;.YH+otb3p(#N*RqRm>#?e.#.I)"'RlR%(Fjm0;Lf+m7g,rql#Wpf]"p%VDilt9hJ_(sqOFlH;GO&JC'ma+84WZD?V;p-$Z*`@Za
%^l-A?d"4lT<b_EsR6KHgTWfm,H1@bcVLX$X*K0:!Ga0ZuM@)d7)D4>%j1\%VYRLUcTCDQ-@rICM^SYH+\$<2Q&FD,Sl(EBA9Aq!s
%FbZqb^s**AG2^CcJNe"aI.Ss<cSNOq"o-0(L2^4B3'mVa(%>cL5n(9@'@>%dn_6kBpLt.bA)D1qdrX9aBiHjk:;^ba:Zl>r)W5Z"
%%t)BJ)Tl-:Oh>5d/(k!lI2>t,+J]-ND9LIFaE*aJ`pF]d@2nLh?,IX1X>PoMK<:(CE@jZD3[CU8/gC7!pXXZ!_=J,.mS^F)=EJT0
%4j9(1FPnBJDOCWYVF%M(FCM%,d33lUQU+J3FIRT3WJ5nP;#]$B!k6!.BIN/K$Rpm5rBZ?ZJ,ZAOL0)2Vc,Zk9a/SdfY28S2NLq`L
%:&C.!%VY^_URtWIP1^EhWXE2Zg<+m'P0R5(h_]7#n=n4^W-K,=K+P\aEG&YRO4X!Dfie0^R^uJL:j/-F@Ag)"[5oITaa]6$QR4@X
%&Dgiq0!2q>'KPY_>idu`M+/D$WP&9=pUe-6O6b2imdi?$a3&t.,0t7"34kjm3,_ttOQY5\Z?MRpl"D4k)>%@/s!DUg&UNtnXar'W
%aB^p[b_4eHMt*HmHB=alF"hRFIs/03ZI@W1fCJC.)R)"Gd[CNUbOU@u;m11WG2%CPINJ3/n_;O!099\/49i+mGRaiKg!.^)-FQ6i
%Z:6TK]s.RoC,E82=RJDOn"I.jeKNkKGNFkfkJWsg-j1.pUp]R^:.HM+)2T<(eTFVDekp.K>(PIMYX:@i>k1>BRbN.0#dkqseJbPJ
%67#h+jA&VF[NMjo0AOu9EZE\\Tp'?:!W-'WVs?trAgr!!r;1PA[]&fuJX^mbhQMb4G;S>&N\uAqmrF=>@@fr-jra:7D(m1;Xu?eY
%?-<E./9QCN?pGBXrG(=U&q>.Or]42!ecNW^kj`Y!-FU)8G)ddR*+Yt^s&!i(5pP7!?M*Z]$1PC/7b5S;2f2&iST=iR":fFF4o,-`
%^-V[8`g:mPWdNgmo<"VsDelN@5"EjFg^gl`o,G]Ib3D:H1Na$*Y.,6(7i1`1*E>doWtJ845-?mX`EATrZ<K%iBDI94.L5(P8JSsJ
%E<HLs_Cs^)H$8mqndIo<8ZaZY-_LCtC:f;6g-.$8\D)6>X[4J0VJ>=*#HeM\UNNB-#jjgaP]+L*T0`Xa/j0hlPZ`Tj5$C9YiZe7@
%GUb)T?LQeEG*AS7b"fO>:!Y9CD7Kdcaf('ZJr2W%_jgo\pMH_e*eZAF<+f_7BH&l`o;lF@MW,ru`-\L$l]d^>15C,ATifq#0-9M^
%TbDdEK()(X"2Wa*,QR</MVk5=I\IWT3R\\[c"_f*'`q39e@*5\R-lDZ;C"^-oQ'W])tTOT[G,BSq609OY0Dkd$8;VG9S]t^rs=9=
%R%$Y;?4\.Vn]4X'mU0<NC@S3/oYnVa99Tf)F%?:U0bXl2mRbs)pEG"(T/a$U!5kUn*[K<G`d\o`^Pn?6C/.1A':"^ca8;<#FCh(+
%i]<(78ps7"cZ(/J:0c$3O5oCtZUn=_&,,jgq9ruQIBqm,i`Ak#/i(Z*57QAXidu6DM0HQCicu=PTc^r":64j63T(,IV,DffL*[AK
%YKK93!A@*+gX`_L!.7<4g/3grfC%5Ef(-c"o"ZSno(J\h2fX2VI<mI?ZC26&),ZH&m)G5,[Wrr`d[%nLB-pDS.?.sa18WscU:_-R
%lVOo,>l&q/,W2UHi+sjh)Ok?NW*ZU;D=q+QIK`jsnMZmZIngi,*V<?G(-7H:nSpfu`sZk<*r,XcMq_PELYj/3#>V_q>LlpIRJ@LG
%@2Je'Is@9.b`L3Uk6"%h$>KJs*iAtabRXN,2g1Pufc>#XEuuCB^672SF<r3R<\sh`;"$XJU290HcKu4m6=AQF<%u8(p?X"UCLuk)
%F*kIn<J;\L,"i]U5dG^OoZO%K3o!Iorgka=6'A$=X=tgdlG))J$hcL8eB>J/X^jAgWlV7l`_kua\CZTKj6MtP\2UGQKT65e&jHs;
%c6_oA@LLDqPt[lgJIFV":92BigDYMXhNQo]Y3^1&CKlu'9m?iqRN5M:&a4VsSoP5YNO!#@?Mqjrhg\ZP^V^hbg(BEmQ=(bYQOpHb
%D/'A`D[EcCVU'`takFP6Sf8WpY.UL**`ni$U)3iT3IWj<cUG++qe\+>km"M$goVcW=1bi"X7bEX^TjY?ju;%@nKA">M7ZXKd#gOn
%Sf;>?A"dIHo;*9/?__ML6a7fFeASG.DbkD$ZWZd#M;sFFcc2^aI)Pnbak.O]bX?kkS)H:W;ZpE2QAkZZCJ8seM?AcWnT+(p.!KU8
%bEk;eGGl+R)JOh`h\*)4)e^O%@.LSi;!Kg"k!]UO$H4P_iA!J*P,t\(!k1THn>\*`#VXtsVP,U*]#I81-3@Gs/5bf#'YPZ'<=*Qi
%->L3'Ek<lklRb#bIl%!NpA?:#Z>R+Q[;KVb.5`Z-"lU]hL9]W*GF6Zj.6,s2kFL]e@:0GRO&?)1@HNfF2BX;pYA4ZfSV[&4-pF+7
%j6[Z_nYu:#!lp5!@ko*p>(dI%?KVn4r'bFoT"[mSYmIE^+[M>&rm:^Y/"2&ON:tHi6,gCMopL3=&?eY51<H(5Ppq'4#$0^iRN?FO
%Wl3^g&C0ZhC?Q>,qB5-lF/K5F1N.uHN(/AjI7V53>8A3'ID'F0MniH(9$PhjRlB:Lfb(<o4>EIt15uGWZKq;D_p/$<TR00<B=`t4
%A87OeE;Eqqn*t_OpBD:YL"@o(buh#q5ji_g+?_%h6NWV'+AUKGrST@&@XP-Jqsd:!a.sNRgOX/\X^YE;+ZT/W:P@giMh@VtH]6Hj
%^]4I,S&F]?!8O(qg12i)]]]AM>]*7:-*QJWgFUZ%*N%Hcpdj";maQ&Z@tJ"VliE]U!2e<@Mi2jRor'&Vr2r-%!\\G'qr.AGrPG&Z
%SaJ3[8(0S-d:4p#QCB,gWCRcbk2UE2*f!tp/7(A7n8@(L%8N,e9\W*:WnfSV/3EA6rq*RmFX+%Yo6Ho*2r(+QMtbiBh<j6J?_W!T
%3]!rUs)Gf'P^$gGM/Mk6Jq:QJmp/G>qOM=><@/Ma]$o=hRML5ZFW+=/"4+R(a`3ueSNCi?.mjUsh=GG1)k4^[A(WYZiaESG(1o//
%l1f.niTi6!?o>g>?KuY"7E`VNs7GkoJPXg=d%/peHT\\K92L>)J^T1CSn>.-Cl2^Mr?<`9ZYZ<Y_(dCHjAn^^RWYj8h`]#Z[bfor
%.>&/kk>/Eg67a<W=WK),A/31H#C/opYj;Z:hG6,4'JDoeL!%*1ZBWgF>iHm3M\F-66%71B/<"fNE?j/R)W:5+E\A:tVD;Ns@hkhu
%ch>/uAc8ACb!$kGLogOBqR,G4ZnEEWZ%>c0r1SOD0asmu_X.a*l$<)%6FJ7Ss)?uH!=@&Mh$7i^"TrYq#^4s&^6Og=lYJ8)DrU?H
%$":""!Yi&=[`!Tf^oNo<6cLg>UVFb<#0c/HT?gTBqkB0MYrVEXg@7LH\7afASKbdR,i3F<>hBcV,+.m]Y'h5F^W]g"28P1%oWS7J
%)<e:XYRMB<S'84eA.TNoF=WBSZ`P=(cW`lRN+1f@oDo@(gf%bKNNAf$2Lut1_nL4I:95&CRqC9MnbpqqTG%VYGXR=2HXd;W40>f0
%)NXYGg!/R>_n\7?Tg[m0a3IK@qklqWap-;9Zg)hr0VmDUESUcC6H/32DPKse+tn4Tmkrue%A'a@r&\[<HQDt9U@p^#UZ7eL)i.NL
%KDW_b2_g7PO*6U`j\YPWGlKIn%-omZgQ<*-02H1jN":\&`:nG,"kaUKO@1M5!lC8?N)/J\DZtEVmB*Y^YQ:mAC59JL!%2':0Fdb0
%H`C7Q0kiAJ"0V>3!/b7M(Kr_e@aWoB3Xu`[!KSpJYGA@<Dm_!(P0j;0Ni,:;"bW.mV*fB5h>q]PJ<Mb(3uFG3_hm+0%'25X*H5:"
%0G7^iCW=!C9sOTdB#s_Q#_aEqlZ"^VkiYcM#1XjaZ"56]f>Gn5LGZ:"%Nl5()QUe+*#3Ts\Tc?4@39(=\\t-Fd@?H9DJSu\r;:9;
%2dQ7kO,_/NQi=oWgE5Xa&R42d4j16W'l17["j9[j(#\?TJE'&j3$V[W*LM/$rbt"aT2s#JMR1k"HI)13U:an&',Ng273Y]6>5E+A
%gc0#Zi9F.,GW#uA&npl<qq,4ur5Tn^`Ks."Q'<Kf^[h5sZ`"ji#'9bu&t?5G?R(F[Y0GoVSUD6M*=@X!Z$]&hG;0MK:Zfe1l'haH
%We*R]l_5Ed;3X*P;j!4;lI3HX\M9k)<Z4hC%o=m6\9)@SV)\]d_=T20#Ur\d`3jE%?1Qm*$_p&g/CDDf\7/#X/Xrpb&(Wb+0j=S]
%s7aq<XWY1e8KV*@=e4=r\MjR3f=;4[=&?I$]\\ti[;_6_g"/m5/T;*h6(@?YJO$;]#n"8Vh%,jI/+%.AI9kS.k9.FoSsZ3`K;=rB
%DoLD[@))K\N)\V(nr!Y&K(E2LHTEs>\^Xl_3`:YC+/LqcdtY!`3o,(p%*5(!e$\B15EKluo0FhZBAZ+Ze-R&)Er6M57jOL:a5bl4
%pbb/'<a:(W/o`[FSF6DUR=:@9!qn&H!eEjh3'c0ECS=bH'Uhb'JZlI4E#;^jBBdkXk#q9Brk;N"LJku+:Gk?3Il'&4)m8a3f?aiY
%\f;tBc)VBW:U_poZtaUMO/8$p-jhMFqOTT8IAY/GS/fG8O:qY=?R4XY0*q`i>TF2!EgVI]DdFJLglH@g`D:W.HB*H`H+e)PJ[ISr
%E>f_i/DY2uc!`1E/XKX0O6h9c>_\3e:8g5VJ+pIKJRGRlps89JXlTjZS,+J`aGe'6Q<`PkGo_AH;i>*EP;dZ'Y"\Aah_\q35Ok,U
%[:;P,<]AjS%j!egO12q&ksFqZMnWje"U]PT'l7YPilCps;6VD+TRQtc?mKck1K<coC<OLDcKZAgZ9%>Sn\s;E]ad=\\L,nN/@?L3
%?tjb_bSQ0(%Y&E?;?kR<DB'\q/V^I,<<oYR(+cM$dO2L8eL6[XAcVWGf*?sIflgB_*1p;/->UN^K4\n;i)<5KiZmEeQ!X?"IuW`6
%gVnE&%[M>]l"cDGMC?1U4_cAapH#03K4X@Q"=^5sM$D8`d_mN\XS/"G2uRLGhgSSH&*,*qQr`Sn[T*h8d[bDgZdYN8['m&Ko:*aA
%TFT8s<g[_+>:-3*(o3YGK,WKmnQR"oJ^8L6(qc"5a7sG^VLJB43KJY`qqP)jhH]nQV2L4]!jqd)^oKhlSYQ`h[<l1sGinnYgJcRm
%1kD\IL%K*t00U)]')0hb5UdQ<[SkqG*I(MS/52ScMc[$)0QTGg0oD/s`0\5Di9!u_Mdb<UVS9!`VnIE[n5Hfe&Gu1!Npki*l0*T2
%6sKL7f&ilR6^arOgd'iIduP;Drq\k*s+"j<P7K';"#1\Qb(J\d_%qqY0N_<oH5a$`=K*qFrOdXY5QC3Pra2_3-NT6#&9F-k1':-S
%P0hj$JSoeJ__CKA0JVO1$3MWL9+7s@m\i,#_KSi.4YLPnM!G*OXq=OBa'@!_Fe5&b_SB^i<KhBpRu0S#Zcs-YJ4UE0[K>hO56K&C
%oQ(gfF,s^HiqQ2)r$An'(bD"4J^Um)OH])n=P#/4cYCQ&['Qo02\+M+/Hg0[nGmFkq#p=fW/,G_FGb=)"g&Yu_C!drO&tkEs53kU
%?XIo]Ni.VC/hFuUBK9FBcd2:Rc[ejf*a`*La-4=<LFT+XWW86%jgGB&_6)9Q?]8!pYS'u<h(S@!i0X%Xa*Xc[@fP(X"1:bp__oKZ
%i/.*Of8:\!;U>e'gZ%e.0P\4&BGgkUhlgZ_EBA4=qoK.`@*u1>p\1WVCN)L.3e2\i,IPVhcpKk<RpkT)/BNlX5^9.2ZCiLB]Lo0=
%&Nm13#/'2(Elh)m7D,qd7i/0HX$e1fI2eY%$\gGA<_K+75%taJ/Y;^pa&gg,Ugj"1BYYIhopL=82/4i?>3bq">Ap<Xd.b^8#!Y3^
%4f](M/%.IRIpnBi4KAs),h=FGD^Fu\pOt7?IMtp0M?h/m`/?ig]m(1(R%n#1iKqKe%hmHCmNkRCi5Xg"60KsFI#l;g?rsi5:D^.f
%R:/+8.m_C.,;?9aNn-kmnjAq3*FP7J;\C4ka>EoZbim,-j28t.Rk1Sk=<d"+VQ=O/7Z`M76F)I$Y:#bBJ&,!$hrJr($SV_@pNZ=G
%D#NW4mim-ic3pM]9qLe_1-g:g3*DXpas@\[:Vo3,]%L51`*1cm>H^@c5c+[N^i$2a-j_B<[m_YJR63iGa5l/&+]-b#2#Ka<'<^d2
%Yg2bFj`76`Zj1i[G767#>;c`req`Sm6hkpI-fIF]1L"rIMV92Fi'CJB/.gde"bOEq_s6FUk%`B7r<Q3R$3,J*>,?6.-(P;/SHGBS
%XO8@lmJra)l!LKH6e<-EqR0RPI$&l9:_DnkZKoE4RbnPZ60.sj%0/oc=P9"q)(n!)?a!j8DI"7^Cpa70B'3+0@F9[=TVQ#3N-s:#
%XYZ3VJZ^;%?72'Ff>.)WWmVA\24[!.e[c$('q=c#A1Qc"K=deA$.3K4U#5S[2a'DM?m1j(Z7*+D2a*6M@?2_-XiGlOi+ks2FA/[9
%:j8#p>m$VVkQZjD!8;S7"!+-S<=k-WiW+Um.lQ*,SK?7$^rZ.eLL:`>Jl87oMLFhkcf>Nl`@OF;R/pPd*n(^#,V.a>Al+&$6V?t]
%%m^R("rq1NnWp3pYllUWg8[EkhaDF3@If*^+u"B>+*\7@-?rcS3J,Kk9eJ)'@k(oA*N)A4!j?aWY8DquFECRh$`us-Wj9Gii%pV\
%!kd3e!Hs\SmQN<t?R+KPgcQK/O$^@I,>$F`8##Hb";RCB:A5bISqF^<ij-aJ7oa\D_bYCIIAKrdl2aZUS0O*8(NXi"<9G725'11'
%.PG9c[,SE^?&,a-*5d$:DXE$6dG#VeNMR<)_;Y*oBbSfS752[O$25^QHU_Y2e!E!C`A>9s>YbJUo+^E#dIDo3-ar#\%PU%R[*dh\
%FQ2SM2fF""8Ws=@#n1JRhdn%8hd^HXKMlCN`->^;N5>W3:96$oJsF-#0A=)F*sRG_id-kes$B>U7l1YQV*'G<7gh9P2:d_5=W">o
%<?qorF32IZJ&[uW@KT@HL8Y668O<":W.^kRCht%tE70UbdHh`8mem>c<V<4=V-c?G%us@V]_2ROa4UqDFgJ]e6!Wn-GXt+=7/TrU
%K+^&I>&L-H^Q<`;0bN\m72Zu9X2WZ9"Y7TH8]P?]$af6D!49[!B1D2g`V#^KBlVA-.WdAuO*q!baPPbY=)WVpX:'u(X`2G9RKm3@
%_j/U8UJQ!#*^ld$eqh5_mS*p#35Ca1^kNW1"oJ^cHVOXH/uN&,/VoPF!"=u`_M?5j\0k%^RXD@p%m:KWQUnf@"(mE,c'd_ZJl*DR
%go6sD^:,K&8\RUnEjflkSL`p=#P]'1Yhrf<^C;YS\2#9&=lT5IL&)D#ObE&KgEhg."hii*)U3%Hm)TXgI@1C_X5mF=^!ZV5Q!tZI
%]9N&Hs0rUl)U.%^p\o;+YmmHf,e.Mu$ui4&7EBji$&[$iWYKQ-')N?&cM\^[hgsf(%lKk^N[hWY"^_A$`F[@6TQUCu&ZisN$b%)D
%Qm],H!us)AiW1Tfit^NSm(h88BXJ4eX00:`M[oFh5NTh<^S$`Icrt1YMWtbsa(btu@[^6S:TO8?QOV48VdM`iLl5JN>GnYJMA&:Q
%a6E7:oB<D#23&@Bdh\nlkUAr)nWk[5RhIOr8i2_-+.fRr+du<&I0ndpGug;e")K>K#')n;:40k[!N?],+D3Se6Kec<c*9t?_mh_s
%6+AE<9*Z>!Aj3Xu3Gl&,=7aJFEIKb)mO608B<0V$^peL6^nWP_3,LRU'a*R287*PV3N"4\K2[M&,(2NOkW7Hi;l2:q8c7cEJ(sF(
%,dqXl]b.(1HT\A=&D"Q5(F7T[OKE'n`_j0TW0MNZhj0Z0Niq:OD9+>8mU7KsH[)_LL!7&U5kTD-+dk+H!bZ&3fRk@2<C%s'-F814
%*'`,EcJpej!lYN+$d_<I".U"3?Zd:X0t4N5p1OOHNMYPm3lV#G%M:D-'&%I>mNamYTXr[4&b;UYgdkD17tD_RFlgs*aU,UH]k%7.
%UcDdCSAgZl$2OC[FG=*_ci[i:Sh9-.Y3YgLd)t%Xq2:%<2#%duoo>8E,Z$h&j-(8B:Q(k88NIL)=EHgjP&QZ_q)ritk+'YY@u13Q
%\qW/k,Y,$ED*>a(T_%`Mds4auP`f!V1kFKre+(>cRWU$#Enc,unH@sNUBo6MhA'`+W6fl2)SrFPrW2;g,I"^kf<6q%5iMOJK<mDE
%2TT3I3V83s=+!>"#B_M_BuY!G8pJrA-pUOJfWa>daSJL#-J:3YJkMGhe6k6O`%JPgfE"7/B[L)3XruY@E"?iVM#+NV/es_ENOB3_
%",\%ASW+1a7%OOBh2C42:)=54Q]HR)O=qq6T.+ZSJ:T>1.k])T<&H*aaDfm$6msRb7`YNX<a"m'Rq&cD6KqAkoJ1!8&WTjSphK_:
%a8NY)kGX6UGK1[;dA'Il7-..t=Ok,:6/Xl$Hk.94j[fSrZFSVA6mL1\F2SIug?r'0qq3XFSIaW2Ej$Jp/\#pi).HMGZs',PiaqS8
%jfT3S<CX?RnQhPnLh$k<89POD3GTU-YpgE+"PW,Vl,*bGDB.t[M)<$j_7ai[OW18E+"CA?@cktQgdu`4?_8\gK_C<1.`*[S&q5:K
%Gm\6qo(jO;`#Q@/<Vg[f>&J5C>lQcXpod:9#.oh2(4/q60f)o6<<\+!a:<<mkn?q$Yl6uTpO4=7>*V."(?e`/@+!^3cPjfD7;X.o
%Flgi_Tki_\0?W\Ecj;4'F_$5lkjHg.CkHEKoRN.uU`'>7f`rKLM"<28rV%ac#=-+a#Pg[+i:(<0&?j,;Ds)nk?aqWi*qhWoSd_/Y
%<tgJ2\jh/XlO\SQB#o["YWCR/#/5LiB^8tATXs+lU:YI6odu+jM-as&IugWL$oU?E1'Ca"IuT_1XG(J]@Tt6opt1boMn,]371"]N
%4E3..,S&GpO`cT0=(Z.3lUe'n%&91s_[@8X%Wnu1]R@Bb*&:>Df!_o#TOrk<2W3uJL2:><NcC2B109'6lU0@+RZn3"D-baPVb*`"
%03aL!Nh`)e,>NC)rhO_!B0WV0UJm\$]<[7ENBV$g)'uj\^[i7Jg_\Xf>!?p60/a0*[=i%oiS^H(Vr\T^#fbD[+o',@jhjOM(6&KY
%JL.<skbdmRp/`:;@!['6Jl>dOXFbd[qm*DW;?Gk)n^bT`J@iHGOoS"TN%'=?T%6W<h[-o+%kTtJ0L9]ZfWG)G2>d8^4-YQr+@Zbk
%-fKLlatFBM'Z,EP6E_s&dCe3=bQAL]1rFgf5+6IG'rkg+iTWF2P[<ZjWq!n">_TKVdYjD+nELWlICO(sm"cE%kCsHb2d5Zld!4QW
%g8SP>?l*KemNK*kArb'([%b(;$&VL`k_N1G)GfY2MidY6.'KtpCGi\*DFD(<a]bl8[;i6FF$iSVd*@Y4aM.!Z1Sc8GfU\5JSs:Ru
%_uTnlA;s5nIdC`='^nG>4GS/H?]/4l-\ahS_W4!"Rj%A^+j88!(nFr'8f0O@l6$N7$E;kJXscMi&*%t!K+Gb/b&6S0\+-Z3:F?W&
%>iY9GM:.a9%H4r&8$*/@RSFdSYH]si#Q1S+;iQnrLn3OnVU<;<nF;9+R+2^Za=Y,qn:77h(uTB[Z3/>EoLs^M9D^&2FlXl*IBmB=
%4Q11kU:uOr6%HB/<"C[b:'i_UJR!O_+\s^->bI42GA<XeD+^/eXlAq["_b<fU9oT'4:s`WK?@_h+Q4Msk7A,Da=X[Zeg3'H,C!O,
%7:CeVCeRuHa<hsQVF1$SZ/\n1M;EBp^s=,.`e6GFf<hN8%gmUQ8fA-/4%FE7%']R?WrBoN8(Fdd*.fQ`(VCpC%9;$i8\bV]_Btp5
%!j57#>+c.l%Z<4nA&lag@G(?<oIcO':-k"nhEK9SiQ0$=/^Ydh,lHs=*<ZjtG7c$.KT7N.d@nJULN0`k@J?E+K0?AA/:7OU,dnV7
%\;nXDYT]I'*(rc,",6;:+2TX&QSGLN=(H-_A1Nr^OM[(*U3\-4H%W]7D#8_j]<Q!JelA`t+.'%i!idR/3tX-4AW)S&5@Ql+HW>Im
%iQKH#6$(RA;5.^B"R&hFh%/Pc%jEp-M%!a7Mff)ce@q0`Qo[@&%51r90Wd(h<3d[9AN5P-W,f&e)E)npLQF70#n7m$jlb"Z<lPgg
%KG!,VUGI.VGdaguLl0#iarO>k!N<D[8)M0P"<eq]6dsR!d$B_*]<YJ`gfRO)hmYM"_QJ;=!fL3G.7H9t3tgi7<Ok07=)RqL8?V7R
%(T-nbK[WI,d>)`7!hcrZjS9e3eAW@let(oe_t0@BB/i\k8<'sIH8%#IMB"!cC_'7)>`")Fm35T4`r7&HVlCb&)bi$tH\FucQ5@R9
%!,1,l2h/?m\.9El`fU`='5AK]iXn1HNj2dE2,,&LVt2j<eY19/$Y<u05G*\\LU'!U5591UbYZLCp)J?'qZGVRE$G45DO@A9I]TEb
%*$k=40FIgZg%pjO99Ni+X5phm&*Q-Wo.T,>+6Zu]qu1H.OCBl\I8N6EbJTn\3f&YiaPu!q&(gMkR:5"NF_TZVia]+TKE?P>9,r=[
%oVia/$Ofmul;/\';--p4K+\Iph<'hc=dtt,/Drg;/93EP!?/(&R=1>F&(03%]$XE["pd^Gi^iH\Ysmo_g^$Nn&rN>u)O3Pgcq_hP
%4Dp?$nddB>6X\_HIZ-iU_\hKCl!_mW#V\b#.Yl1]bPFNF,RD9W%%\N`#suC4p:$3Y,i<R=69Zo[<^>j-63USb*ncslfX\)H]q&P^
%Sf58\pLHLfEmHO=@=hu+%Gtc([mlH9OmV"*kYd?BP[-PeZWZ=VJ%/kQ?I4\)o\%2S(dS>Req!jTr/mEf3h7;$HS+;n,1=CE-FK(g
%%eXK5E*^/f7A%=0E<9o<Hun5S3W.MBi0`#0Af@i"oHA6!.&@0"%.e9cNVrad%^Jo8@:BBQFS!SY@eb:g"ALpRXWc5b6hM2[k+e'O
%bs7Wg6GHf,b;cLCEO\=/X-t0G:a4jb#B["(pC"Ek1JUk+qLsC='aDVjJ6)3KI^lP0YjUGeE#"t-+oXf7O*hYEfS[.hp(7V#ObX*F
%J^g)@=J=h"jSO)-'VXKK4)]lkJ##X_;mjbtWJb@\991O(dAdt[kb0@`<W;cB8W=Kb#J8Hk]nZGEcuC8'!5=gKf<Am>8,;nUI.V5s
%>NE;mdG>7q(=&&>_0=BDW6*"T"WVVu+&@4)(Sa#):'tBki)QN1%3S3.Kc;6.<O=pjh(0Dk0NXD3KX0M%M&JJ"S0?E^A)3^jj5XGV
%M96`.A"o)FL!*lQEu!9uLP!O>[0B,%AfM[rWk+6YbZu*08ob$tkuDY,e;GD4K-hC<8&C#Y;D1D84ciT3:]\WOPg9qGiDsKQ>,_-!
%Muas>](YulL2pl?V9uQLK+0)S.W_,(L'rpen.WYTh9Pdla<^=o31#P:oYXu#H(J:\2,J`fr(U$l#/75lNeaQU.RsQZK2Rr)?.3WM
%"rFTqGhC:.LJ-r'#;tpGgq\YC8i4$-1&0E55%80400A)*bJ)bGId7pEB*S4N)`uH^Y,pMcZ!"8d5H]Z>_]^BeDr?(dYD\4&aM'_]
%qhi;%&6`olTZ@PMD,*K(r+d,lWJ\&0BsrVi(/)#5km1l$ibHI"0`qK!<2mA,E7\FXiAj@H#)q\"L5ZI)i1]<c@@+\X;R9&'<;.rm
%U?(!;<hRX+Zq_p;)O[JU/RD/HQRFLS%mfZRV$;6E>T0Z>b6^4lful[n_"(Z$e=_S*?'`u3AUrP=g2W7[oQ".-oX'.BoTnD_Wh(lF
%7);F[Fr[pM?-l_a^[S,H'MhWIEo'L7?([ta;#jZ5icn!,QQD3n.[-\[p"br'f\Ej4.:tLUI&pG66$BPGr:a!cL`:r@7p?R1p@_&9
%],oK;AoM)eI.]4f/W3K`)WK118%6@kpC$:7T=kYKI>d\h74SmtEZg!%Vo-CP?JX^nUD8c#U/q607C\g!IU_[\rp/9q`X5]L@XOfp
%j<M's-R9\(FcP_Q\_]H>F>c#b7fA'-$*9,4A?q&HR1=]7QH8iDR&pdl>O)mK:aq7=f+e]hANV(<X_*07h6%hFA2nHX4M>QNAC3$S
%YT@a^7>u2Z`XZ%QXcu`(Ftr:u!VRDnpOt]h1&=L$F"e_`=q!K:$[@cqE+lDWj9T[cU^/fH*+taj\8O#S3(dS+;^bjjDf?Ip!h2$3
%a@fX03E""^K3M4ij?C.Op?e<+kRK%FXNdG%3JKV/6I-4WK'Pt-,^QhgY?Ir)i#7#*[riBBr,?4q0T%/rUa#Uueb(!R$7i0E-u(>%
%p7no'2>&3aU1(7T!hBsqqVf#G*2rA]e<JF*BFi\@(Ps+Sb^-Y#;B[>!"YdaE=qr3g2L60%PS'aZ.D/-BCS3OTq_An8=R-3>`"iUt
%@PU:7pcHIO,@f;17n\Qq5[uLAYq%TBPd$jK;=l%iTbE3[W[ABa<R4qS&'$q"]FMV'\nUT4bS'Oa=SAKQIW3l#J2]E`ZUCeb2AMG_
%&,.jm(0ceQ)bE$rmbIO#7#IuPhT,&LW8:CP&=j/VfTZa@46E7;2[PES*]HtK/a"rB?4V,J)pQa;-+]t6ZF/CUZULr1h`P\$hqj-$
%-rPZ93T7):'V?XM#WOI(/[ar0(g/guN,a^1\V?bHAY7<;=8'Xe1c5(^d<]#`Ha]rmjY"5_/.I46c\bO#a\+S^ilJHai)<nus)r,T
%-Ml]<_&V_8;o0KXTjTeh[p$Sb>/!tq,OK(8kYr]6M\0.2!NrEk#rlUg<7i/@1Id8eM@2Y7FZGl:&i'?rD4:28b"[X!jF6(fhR6p3
%M?<@^+;\"WfPI#bG7.MIdmRhZ$9CVJKhd#]/[W.-&&Pc?kD][AHEggRcPqMI(Vh(*Sa?YN]d.Z2s'_$L1J8tXdO&3C&4-J_Uf<r+
%APPQ49O#cS!I&-T^a:\J2WuJH=KJGUX!18<(OF5S(2<=`?DZ_(jQ\oni+T7sNE=(SHlY8Q&jA+f0rhN:C.MaK3!`&Gju#/mrU=+P
%M[e)?s'^*TKn*:pJGD8_=.?Kod5$D&Km4Ob:.e'gUNdV<!>KI\p0Pn-=,jnjN'?R,;%#b+Kt;h<H]>aX#h2JFGE@VX,]n4<n):I^
%od5%)j?-D#k`Mc/.P7ro+U8VtR8&CB)Q:@9M8g5ulF2VgN.]b7DJXAm"kj3U\.'UaX0r,;RFCJi8O/PS^9D>-LqL'LonV;PF$R6F
%6uskLdnMrSG!M$P\(ET,0:N=ZeS1@2Y0gGk=I6><&!the7sd&bo.Z5tZ,\^4kbO^n$@t]XhuUr&MF.sB&Ld^NbS=Pk8_@Y%n>m"&
%OY@mpX:!<sQTF7Op9Cbt;,r.l@&\\fH=FQ)ZteS8,4qEq3tqT)*b[U:%'5-3bpTNU*mbJbkI6fEfRSW79a*OP:)o(@Y%?&GQ#so/
%Q7r)E;/k$A%VQioU7/:OL1ocG8!X*$'RX'7J=(Htn\A7KRDX?t)+bKlB--`nDD_D),TO7<doKNRH=E4-eYDAmIJ^[lQ1Z)9EfD:?
%%Dp9Zq^B1XGG7UuG9(lj<D*"g"Dag&:l'r)h5*Z#QAkm=fE.V[=G?mk%[e8ffus[%4Z_C!NIEFgV(8Ks1&RD=BGG0<B^f+A1TOgc
%l_YO1#*7Z/=[Z&-kWa\r`KG/C^qoB5aZErEFH]!rPeenrrJY-'Wi?E<W$k-iE25SO=NHEeI0I4lnY^0CYN!W,2kuO1jZ(ORfOq>"
%e,eHlFeu&Qq6QIL7kM*'L/cP2M1e1=\f\)Ua+R\_V=FrJZ<3J%efjT1A>#Ws<)l&tK@s3lLg'?t:d?[ZVIm:7=F[idQ8]@C&'7tq
%YuS4,6(kUg2llkV?B=V0YJB=s]Fp2F-I?%-D6'B1:M<?4#O$"ZF^Tg!Xu!;tif"+aX/Cm2YSK/TeB.U*Xm3TNrk+\':BpLSa_&IZ
%B^)-M']9%12j=dq%4sat0!aRaJ@*EioWLnL2FTtM4#l1BMtCrK9FeQY;s6n84e13*Rf6KJZ_@&RF[2TDm0\m)_jqg3oSNr,1r/$a
%-JU%D"R7lKV?nnfPlqW@#nl?JCc9dH.L3*t;%g]&XD>UtN="[Z._)Sd>_3Q?!dkpD+Nb"*3eU"`A]fUUdKSAV#d=d!TjEm7ALJi7
%\_'6DXh=FY?am`OP58BTH"aH9Ep$j?@Pm+F2(7H/[aIe`l*rqC"]84;?E5?sO&srWJYl$N__u61,?+hSai*u[FO\A@!^/+B^9=RN
%Y0^Zu?DtQ`C%SUpl3G`:?[-mI:[8;ja"JEC-I'ti/si+)O<?:DB5Z+Nn9YVI%n;O_W4lP>'5N_H*C:=1j7YJ(Xi^16q"lB)mVr4?
%-#+e4iOK687W)iYc&(]Rf@Ca,I^fR?$4G`hY(WhG2pe7a2PTiQ5_+?dSqnmZk74I@<(X\!E+.((bTVhgTZPW";ikf2CCMK1p'`FL
%<\VDk3h-H=62dJ\\rM+U^0b%3G,%WT*7\Sfg0s""i,)asRB*E%#hMm=+Xq4F/m@6?gPL*)ZShErj#VGdmERUX/0!E)2/K.$S;k7A
%^@N7AKq7N\q%*5dOTHH@@',.fOQu=<B\)?PUHTss_LkbA'e]aOC?[SF)AG^D3de=3iQD#AM-4uYnG\4M8V9dhpd(ZijqQg.&.LcS
%oZM^L)S:aJ%uF7CiW!4f^\Jj4E+m].Y@q/5@=#()@\W5P,9GJ;;+\a"<BFFPTGa8nZ+OmYqST]UM1g&\KKje4oM8[d85Kbk-kJ\A
%kJda)f(FPFm`N4J.)0+e@45kHEKI'Q>1C^1%:VCnT]4f.'l+_'I'6uqObokil',?td?%:qP_tF21`]l^W:B#Y\;jgK'V,QY\1UG+
%ER\BJZmQcG&Tk*K'u<11NSZ`B<n3p4P^Z3jL6OY/3)Z%8Ld\-d^]'-@fNDl`/rX66\%5r=Jji-5bNG*0eplSQQt8LphquQfitm'$
%'rX%0ZM2-:]90_'FT_t0[+ujD;M66:5N=GOoKsT"#d5Wagm?cgC'",l3(T)"_POPp'3[`?QTd-f.8qRqd>f,#rUZc*TR@LiU1G%;
%>=Mc'%T6^'.<UR$"kg!unCD(Ie,/VG7HlIg`2Lu#F9'JG]dPkY3kIH'B;[MeW_W`a$ri=jD.4kDGbpJe*,ZFBNm?q*5[0,^`@b2$
%8d>s(;[9>K6`Gef^nU!)_'N"rJ:l)[CcYIL%#VWcQL@(Eq'*s,*B9Zk)0hm<&gf)'=.nQ.<g*g(^TDa?P82!;\:H(Bnk?8s.2&TM
%WWUnr(8oT8UZ>\pOgg?1`\W9R:HZXU71&pmSMIKJaH)Dek_L,r%N5-2\?/F"()5i^mdg7qS+XdR9_3D8@d.F5=C#AP0W8."dfZ`b
%SLqDtCZE6k*HY)#%#I^[GgLF2,V+()+IS.(hY]n!X,f.TLrTB<U6[_q<8<.P8&J2pr_F>620KB./+>t+)U?/O5m+j5CY`b9WfT-,
%>IEju,8/rII@N9Z.Vf&;]4rX.qUoU%"DkA!>(dm9+f-8I+?70NCkTR\oLB&@H\a"X4dWMoi#-hpi%/#-o@YjI`>rE-QXX;(Zf\Q*
%X4GOG#H]]1d+NVid1YW>8WA*PTs=2Z&s/iL3j&I+/fmI\@bu4QbWXX4,N7+,_U<>B*F*,EM_=Sr1:nYIC*2*CChWO[$].sXJ,\?s
%*rl$XXDT/^PrRp1MB2XFn<HBSN5m-pBk\_85%U@;h7fM7,;gV!.m@pofH]Sp#CpTlrT%CEQqK7)Ft=;U6iuhA*33MUNPQf_(?;h?
%4<h^32-=n]1^@89nNK;uIa7#"F&tA+IQF.VeG8*E!Bf<(\MT;,'<bi]dU8[`Qe2%D$`g]kO9)CUi^(eL5ToPF],jY<guMd9@-W78
%ro.!orZr7+"/diC<Vt+fa+ErieC`HOAAnV+k/`VtdON_RF\#8_FE(q^_W>gj\i&MrRm[6.d24/$=@p#Z0+`AH1\"\e(B^r%3p$U=
%g(q\ETL8J%?@7Gf5N:^8_1dq\#]R1%"?o.f)d+Q[%\P6Blk]<og05a3P\ga4oYP_"eaGiW8;;(_-6+]<9J1d;').]`$Ush';BEX>
%]SSShfMhFum"7[3OCJTZR=>`emVm)6cDZ&VTWPU95?C^VPdp(bJ9Q-]FSHc>H&O[&(l?ikkn5UpHN.*\Aped%TW?Qa-EHYT5k$5b
%R38uG"ZN7k$+D'n1utktR,NBPoesYBS:56]I*GJ?L)kkHnr@Tj&cr-\8O<9mj9"^;qc1[i*BPTFDrJa-GR:\VG-9`sG;YWTg"(M:
%?.K(:r(oWEX&]Z5#0FFf?T5t=6mcNrhie[kpo&3NYRL7;#qZ\X`qkZ24<#CV?i/R*^j1$8rn8KHpq6RERJs#.kh1Ed<p__>]_a!b
%*(_"g>*Hj&Z)VM!i*'H3L(+Sul^X!_+j;cMr8cu(K,s82KH0i:+%s=WTKOb=M:W;&$5b#*T,a:_V0V9`>Y*5)02H43A_r/$W_^.,
%6?h>Q)XoP#:1u@d@G$GC4E*(B&oKk`2/(mW[S>qZ/k\QjOe-N_+jH!uK*$>XZc,0VIbqhH&cH.sQti[rCD1uWJ8OBK["O\OM@j_T
%LJggXn\*<pH-6F6r]dXb8af<lIAImlm5/31l"Z^F[QKNnCq7DYb,,5YE[9f,>[P-YQ4SOS9gOU(f_+CTdO+Z`3g2!.,2P1gn[-TE
%Tj2cA[?Ag7ZBY,5?:%P,J5p9>gCqoJ7rgJ!)krm@_-7gBCI>pilq[ZuUbnW'b%0]6qn2n;9eYPQ404nLdn+L:#MOPB*-mD+"/jN)
%(QG0$S4=Y@Ongcf/\o!:R0k<8HT4:n3&KZOYF-$9f@I64*gSXO8:/]9%!C/#_BJdr/"/UV^`kqNqOrqOObibA*GXB++Rk7uL[ZJA
%"lSr?j4\N:PVG2-*&>lHkEjC2]G0oK[TPp66&H*b:_#J)bHEaN?",-;1@.Mu4TM[7Bcu)IR6W;s4KAa?r#u(BA?7p.=B(O$*K!-\
%$moO_:A"i"]7pB,=]HRhX3=9G;YZ1EEF)nD+S'G/c2cP?:64Thb29&IiSYEe:J#r5+W7Mk@*ipGY@#iB5rXEZI/V7;`=RK7eJWTK
%PTmYB;E,PLPV0K!jq08]Ph](.d?8c[JdHgad6I-bO$9oNOR$4^Tk6U)IGcoq0#\R+-!e?p=q8K[D7>)"(1S=mL2F5@p[:#.(?W:.
%V?r7QZReC]Rp1%b*J\HH`nm!3ac34,r7Pj]>3&`QX#pbi$I2I!"b'_C*'9Hhi-i@b,;G!j`nJ_YA'LBuU$o]/hm2uE;.+[rU/[q2
%LJFJP@][pN@-?I6lnDE(_BtT<*3rEc>hG[f`[D@:b^pMd<#RSi-9Nq3rq]jos$Wp:/ZHu+E&<#pOs6c=3t1bK;$MA9fb))$DViGQ
%Ha/6ic^+;[7CZl*'cK<jgE>u3Z#O)V*mO%P[3G.8X^iuL4$(B<:EDK^nKpOMiba%+@In-gc]*(M6`FY2pTnCa$73Hh9aUTc1:n`W
%^Aj.=k0s&MmN9l,MT#YKBn/*NR^&pr%9_I2e[8adB0GaIp[P_E6pQ\Wi61]:Zmgk=Nm`MC2cBKU]-3#4p5=^&4KWV)mYmBD1YT#;
%(q9X9gu-PLQ4FZ9=lO)gqghiKrUpR'NHk7qTd+Z(70MJ441OMefLX0Ka+r]C.jFJ'I%;lkT@6qCXG2Wg1;Ib5N%i,_52\TRdZ+"$
%4eK7NQbc\-LD_Qg+[d=Fol+d5)c]RoT6i9"@d?(Y*/mSNOG(llq^ROic4t6C)Si,f1(5HlLC!6=QAli&]?L>bB,JcmSdMRTPS`a0
%\.2*Wglu,?"&7nN0FNWtB(^*EXoZBb]crjH[CN'ronKTPnLj]&1q0<WG9nVX#Z(%;i\g_LQ]RC>S<_Tlpj2u>[VPWRj%imYFP[GP
%3aZ-gr_C([p\%[lcAo/4deHe7KTrKKai6O%RO<.CqC%ip\m.MQb&2T9=Z3F6&%pfZc1J%%)jDUa9hSEq.Z6^m.U#>X<th9ZDlq!3
%!%u*c^ia<X&'=H3KG)su.%@mrqZ@op&_W-("e=D+`EBXU]Pp^p,LSo?3ndnJl1uE,Ohe#-NCJQV#][X@+7IfE,Mq0mRFNLqG'1l.
%7c"YD4V[0I*BY\QZfFXOFKg<S[h><qOf'Qfi"`L!'#e0aO`%<W35sRr@iorR8-sY+be$)QN*jGWR]D6[Dm,*o`=t=3O5u.i\;7!"
%gQ&H@).8`c)mg7O?H0J1c%llJKTY!;')1,]?=Z;jr5bNGKgsD]_F>cdolr0`SQ2Z;1Qo>lO4%r7pV:E:>qAckA;&'anh&26_YE<J
%\1UoV`2aCTC&G]_:3\%e.8#!/7]W@;dY!1((^hCGgoJ-`M)5k+kKK@JYUn1R8m/`('B_)/!meK!:*W(u\=\t(]utcr'+40GLMXDU
%qe:Vb35?"2UAHO;h.18].!NAoPVj\.VK4<\aD(oC]Km2Aqf$(hVG.IX;AORo'U_$5nJ6Doarr8P@Uge72SJCW"T63#$N]\c]8*AK
%Oq<H@ou@^YBLDEui^pX?gK6gpl]_8Q2hc,(]J(@NDs1Nq,7XY:^5*f_C/XpoRFF:2&^.X6[V^1Q&7.YLVO"d,&Op`\Ld<m^#:`ke
%/8*ueVTh8^*EFG*G.2jb$.GD!\8Btbag3b5D)?&D]*E9d<afjL4G[+C%bb1(.!oA_*ZPg#I,!8e?mNcc!baBH5g=<b!OTa^Qqg.Q
%q5"_j$eH4C3/u,9i40-IjHZ(4+"rqW.$;kil/:-kof",VWGgO$K?W2;#pFV]/7,dQqtK$>SG+&\(?5WgWMr8@K%??S]fW4%04(Ps
%[.l,^bQ5==!]'tt[V2M%U8Bak;JGg572*Ln_\]/C=5p8UDfab&+"ZmSl#![?D.geb2UUQ^;J;h!\J50a^.[C4\<M*caP/slhHB=t
%e^(hK@V]:pSE<pUF+&>@kfjoVD).j=RC@eXEl:6\!GU"8Yuj>Lh4Ul(Ko=hWI!V<1\ggJhQf0Dd7_(?<YnH=fDi%&t$Li&$e+gi(
%!+]j08('WjTA;XV&,9/:j[)m?f>/Q2U+]bEUcD8@-jjfV$/1VKA>"0qQm/[ELAp9A_19^r(pFA(KY,N9a?t7i+r=*XTt8>RYI61q
%l'!,Y7o^c@q!l7RN3m&p+&IdAK"=53PZK."je!Q8+`^uD<M"SW<,RRLI!sP5piBVZ;5"M]27+usgs)A=H1iPk_/75@92!GPhsqUK
%Y0<*q_@7;CR:jiR_VP!,:*-nU2U@+a'cl7qBKdrVhtKub"F`rmei^-PAblj\nNc:goZ%&``sn%8=!j[b,AIGeDF7WAl5Yl.cG9,\
%Is*RH/m_[sQ&o?rp_%D\BmeU/Q?^(bajP\iVq"V"mX9HPr"A0An-'M9/SkhRIn*\@]Qi$fUKj!LdtRKUR0hoL/Fb(HXqEua_'a7#
%m(-%;m*Jr-FXXXtSP<>C"!jDkQLO/:&F_K'Y1YS7CiBJVW.R+,6Q+:S&jB(gM0FVHc5'BILD$4:dj:hnh%$/]Y2Jt(>s11B#dURe
%$AOl8$)N^s.j0^#c+FN7`Eboad.gWa42IST4Y?H6dZbk\DG93+@U99L[oX#Xn?d@5>ZTG^PcnF4IQ+Xi"7M]>^q0rAi3:DUYYh=0
%T>XfXn[=KS?b?4&e!3tB]/@<8iqK#Ac>-+,dlV!!6,9hF^dl=hr9&<q/aY<T[sT9u`aJ!e@itLbI%17%qhq'cCL(67E=1<kd].83
%,R&YV(^+HEO$V51B7W!3H,NLCL2`a0Z&.:'R91N:l\d]!$BQ?Z#N;W;n1")r\.cGdHCnVaHb=`Jcs(p9+b.aR(#`9Z3MDq<bm?&l
%-hK2<Mhq)`b,/PNc1!TB:?Kq>+7RWa03+aO'0kM4@93^8O(^'HnSWMWjGNL<k+-%A!f[['H:>NrI`WiJ;K?*OYSr2G5,,B(r'Bl=
%bUp_`AXu4V<Ke=XH;,&AP>/n0esVdjRPY+*-$f^!)ilgQ/:,8rQe]I1?*IKX3=Ua#8AH:lo7W`IkUT`L;p;UL"n2=CLMepaU)Q3r
%U_tC"qTO"M7+\cJ0k@Ka4LkXc!C-VM-G6(h(3/[4UI4D8hJ2i!`j==a3"'gU5]D(.9-)q;<G98@nr/9[pG,_XQHPLc+?[?_@66*^
%231W5?F`Trq2m$Q2<[^l&SRnIm^aVIKIK?WV7T/Yi,HiMTMTm?U/r`_;aDo(HidPsBGEi=kP3cmQO<BPN?)\Kd_[SYUB+=QhW^r5
%BesXViNYuKK:hN(1(;@IW?8K!%+-(>dhdA2^B<iFJhi.29sHDYcP-1tU&L-l&=ja0C8!0A@kDYg5fT8E-23+:3K_+6kL,)1i`[sN
%SGPKHoOSZl@XA8B'nrBAZb!u0DS+ZunC[2Gq"Fu.G1cBr:r%usAb>=g%D68tUKnCh7`g;$X][eS?.[+\S(0>$a+_)ji#,8in&IqK
%+VknM9_p*SV'&A)6u&,B$Ar[IcF(:\`%^;R9"_=keG*q7kLD@X!q%lGn>!'.^?tikX'V>`5EmGPpk`Slp7n=f<`-kEc'a<acqtIO
%Mt!+i.?u5Kft^Uo%t#YZG.^I),;r916#6#P-:L#+&t`t:m7:dQJO)[UIQ<gf,4:'m.I+Kk;Z@t,"g/n>i`4J3WZ%:s94Nd&a_78O
%q%cHnhP"f=9n.dfn&<L/8X'k%<+X%+Q.8uAAWr&_Gdpj1(h$D*@Z!j$pe7ST1M'@?1r;1f#08ql^;p^8#'W]P#DoT;?9mIB16N*[
%n!@$kWfah!K%gdQ-1#Bt#]/]Z%sKA92+Ij]-Y#YUQ-<#+8id+pH#9r>&ME[d[GTSDXmaE4F"]-4KC,.G2/i'XCM<0t+G[XdieS8>
%NM77<##9Y?F@@4FlU?.W@2uXb/"86N[LbY/Gt+^L!4S%(+lcO7XhcoN&a3*X-;cf2neu!d2)Vnr.sKS2apPMUD+5:@K[E*=[lE0t
%8I`IFLTUZb!jsgL([UQ9fX4SL17Nr%KWc@2>:n2O4uD5s!@-?%cglK,F(_Ds5.!ZXNc=GB`TWXi^hB,:TB"7L_p(1OCo:ER@o.RN
%$F`+un^/Rh7ffKC$SauL9lQ@RHGD!W5p+@aPsMsQDGG+I+'INjg.7q$hEbr5=fYoKlP5;X1D8>^<RVjN^_<=dna3"Vr!%Y(kp7qP
%,>Q,4e!^A0i^XkW`dr_=C5pqd&3>0t?#1D4o6>e[-F17?\@6]#7a\Q^9.1L[MoY*&`l%RfrPeMXQmkc1FdAq9r<Lc<?@Lg(CfG52
%mQbbj6I%SVE4DgT3T!@ul;Ye(ME-"hZ;7USUKWq=cE_'E;GerPkXrVV:j(tcO0d=Q)W_</pC^PK_-e0MpPn!:7!09Tgp[@Bb=r#_
%Al8;8Dc:W*%2#hifC[?,ei0>?OC;9-&T6=3QQ2S!hoY*e5!SNkVcs5XO[Yh:@!`OT'!*>7p+VcH3LZh5b0'T!ihR503kk@fZ=9Ip
%'O"PU\!(gM=.I=YWbc!Ca7SfK//QoS#nR%nmC2(-HVt=sF>Q2N/Y6qCMVRbX9n=X5`"R7T!F>/3[cqHDg"6#`=pom3nq-7\.Be7p
%9q#oTBbYf&7k`U2["S12#3@.U[.;(De>*e*QgY?A>F%+7B*,b,@Ph(G'DV$)EMk8*HMr*Y'bga&"^4qgMWjon^n#?EI_#g!2_F?f
%NI.Y&LNr?''f`LOT(9;cmkIP%#=4!;Q=o,G'O8-r3J#R#4&gR@9rGOPf,E5g+SC%YE@V;0!tsMG$SuW,_H3l!;fjR_,)qk3<UD'&
%Zb[*]=0Ic-K45P4a/]4\]0hJ\<]-`[p<rkE([X.b_D<qlW:unB^W,t"0NU3q+iB*LRZ3p0,ZnuWi@QP5R@WF6g(<5o`,9[P$*W]X
%@UoLpA1Ul%qJ+CI;$lb!**b9)]L$cI!OrUtYWln\`5U=]ZU0J&$TBga75(hb?:$^4N^A<BTgLX7ZumGrEd![YW$8ngmNMNE<!C)G
%c)A;@97`TD37QVXe5Wb!lqr4#4FHCQ<F7R,3mci`QD]HM6E"9:Bi'3e^t0aRE3'M$Or?[91&OPY-q;.5b*jd_=5KTa8IpPpCmLF+
%=G6aWR_K#N3T!@LaCo#;GW?P,"be,J4G\QQF9+MYeed)[?NIhEdrl5!H>3QMir;eq8neGX?[0rioF5d(]4:0I^Y?33A:oBo-'L=h
%I)\5kXkCl%#idGr9TVh*45kJ8dDS/Uhe[XD)LBaVN=YPrZ(Q6oH(o&[A'M0[c$A5>;PUdLgZT<eUt0eKAl,nn2(bqn`ru7Y/[@HR
%S&G9@'c>2&Z@I9+*JdqJeq""*!d3Ek'Zkr$H@$^MjL>M^C)'SQP3YW_T5+!gS]8-,liOZfoSsFD\4K5ZBrccmT63<L\>3_/qT]Jg
%_/4HfT0E63WglKX"6XKaK&M43`,C;1FhSgQ[5dclc)&EQ=M$RCgX@YZn=+!2a/XC'oiD+Zl0k*cH4McFdj#!DL1dn1s7fF\W9):G
%Zr*$^gSrB+'+\4jI_]UO#tJKnqG/SeDZ*/RLc1^n&_$F,`fOlDEFccC\A+P?S5+/Dm,V@S.ND3(ZJD=6+t)bV1T&K@&`^OR;Z&\c
%SKkqX'c#q3Tu\$pFik0g</UpsYC+II?E:uIZ<hd9lIb-bW*VfP:=JPQiLqXULR/Q&Y<MED@L3MFWk=dW0<s.sH<5S,nm#*aM4h%S
%5DjBqh*2T!$lk&'i#`$P@SXFGZ]I88!#Mnm$+H1EXGbJ,kd1TF_BnCKrO<[!,<J8(OSds!3%\M*)!ruZno9@8\0\Dq$W&abEq[es
%bKC8qk/1/#`Or_XirW:(&gChD;%;Tt1Ycm1ecFZTp\]Qa'@hY7alsqtff['FPbc]qH<>/PfPsRmqVA2<9/gp0d80P5LI0HsR.afh
%'DI/Mbq@G.h[]mi$tM.#JtD))"&l&+-/il9JN#(!d=>6kL0+4D*<!FuYcIeSh;Eg)]t8"*a?9-)?qi6]2W@BST+H(P4#AF9<sR9:
%)Ct;8N_dJsb/pd6ZIGqqaE^6mgie0TpSq6Hb9%5uggn@GVWMGFb\No1S>QQ;qVb@=)!9IjoCM(Ko;`?YWSo=e&;UQc(=b#RJh,]e
%qKJ@ZDD,8F[!ggo:*iEr]&g]X([YZIddlr,+RMQ`L!9hbj81]2%WEUgJ,iKddZ>F_W`q.EL7anY?I+3/RWen7P7.54EDocdgL5^I
%FV=jt1==\dYNhod\:;13T(S?o=<fCO!^AL<S*Z5<_H5JdD9Fdkibr=['@04%KQ2@S6R.B]LncZ&g?HA/7:Vj`E(f5]psK_ACiIk`
%Z5I(2gJGQn`?lD71D;@1rpq#W=Ma_%"$X(6+WoZ#\'TN3Qm"X5aTO4s$LCY"@r6!Q'lZYI'-<T[K@-eS5Ejt0]Ql3Tjcp#<a^,MQ
%F)0b9GOgdhY22]I_uk+D&jqY,$#.9cpinkM6Q%S@rSD.h,(EAI95H&a3k@>0e<i7eF;mC_O@g`%1^(ckPNV]RKt*7&]O&6#a#:fC
%/b#0u@%&`oBHe>/UUiCG:Y)OP-k"P+RB\"k8_b"k;"gak_hA>;"Ea:obGgCU?G'">;/+^7=M](%`fh\j+pP<aKC:$b[8s61=Y,;8
%!ES2q(/l6b#oqSVVF\Z'Y<!"g"/AE,dHWOt!`5%h\P15;KNiPci=IBQM:a^]'g-j28JmC:Z3!UrBA4^K7`'SdBUfPu,L\%"+6XEK
%V34-O8*q1i?"_sF]+?;aPcoJdV4NuhVOM#ifpbA9d$),58aM(P(j$DQ[&3$"35sKDh3#gf14*oWY$qTO![lqn.gm&kF&FhaW[a"3
%i]4h#+GgJjN:SgTG3i=^g>KW+s3-%Eh]A@:%<U/Qr4#uu>`Dgm]mY'oo=Gq0DRPK]G'Xt]mVg+6\OGkb1GbP+@b'=o`2>&WOiYj:
%l#p4^H2lNeDt1gMgSaIGlf7tGnr]tj&j0/Ia<4o(MUNU&5^V`EXl9%#f^^V6;hU!cH\Qj_p9%Sd:3DtKjfVd#Aja(U9P)Y*Y!iP`
%$.1'+qc]eFQ;a*JcYt?G:1aUdUX>-19gr'PSGTO"4C3HQN@t^8J#hL4=^bm&'9+Kl]M]tEF@==p[[Nq$K)AY?WiRinN[mq0dQ=X+
%c%L$fH4m:>[0WBIoRMB@@jGdpoH<:Kp9NE\L\)j4i(@EYRUVS`?@X>*Bu&](3QXn?73GqQ;]i5a@YAArfYYp"LP:V+AQ`'X5Bc]"
%%,ZhiaA;)qZrHg_oGsgg2]K++5(&"@;YH0d?;r[&4;-H!TqOfamuEYDB'^qtZ<jnW#pQ?X]^I*!hZNS)o6gbj$=QTA-E,MCI=+jU
%-dg\7DIY9OQJC+g"!(IG-%+@,=rjsYefVegMurf_LD<g^!Y-jn;C$[M,P,R5H&:cTG_NHq#Z3UVE0;Co(@VrjX$Rr1e.<1DpToW#
%h,CoCd63$E\B!qm67<S(.]g8j*C_]o?+OI%PAqABM,\\Np<q<-MeKRGX=WS<8a<Gi%bm8&I[G=S:V6uO1?PK+rgSA,)j4og>JDi(
%&"P5l"KNml5)QauWt^'i[h_DKYUM_W?t*&h;%F83']QrP]8JlT?Jl]QBD4'rj/k6,_rjX%*RYb2T-:eZMD1$r@U%X*0,ok>^81<O
%$49Y<XA;:hH5-'>L0?:]2LE;r%97?nE&"Q5_dP5&#Is$:7X.rd/LY>dPieX!7=f1f^i[T"&8m:k4(oU$6#K-gFt&Tue,BB3k%>'-
%0l62IFiXmbLPg(??6TNcF>T%3W#DW)*\5D&'`a"@`^CfWrG\^h<#H?cjl?`WaP^QUD3$?gG+sm=h_#!r_!R<Q!K2Nr27[+0?c?8O
%4<MG2+Tcchm.1MQs%2oGi+HlM&(oW<.ph%F$cik`N2a'G#2!hQb1>?n?lH_=.C;*T!V=Zdfg"^YP!0,P\j-LGGg;QuP&eXHhk'=Y
%O_36U%(6Et,h$t/&M)p-b8d+2,-M1jI]*PIO"C^,UgC?%EA1%qK_FYa;"`Le&`b\kePju3'%_:R&9U]sA+n>fa6(;-J@pI([r,CE
%.S[<nZSc;?IZAZ036Z0>!&*_!6Hfsdk[L*oB"-l,J02gXn\"i.B9pV_XaCGU-TqMDZ,;$E^fB]S;jCPdM2ri=2K7D(!l$(:q=DEm
%]OkS&>o=H"3rE4#ZW2K;+?"1-8oed2n/>.gKdEY0IV@e=A*@BOPuT<)*6M5DXtG2eF;+1t7X1.6^8iTgaY*g[lAA>.Pd%NG*kIjG
%=+$^'ikNM-MTl<0$6)9OQ&arChF^s\dC`[b\FX)hGo`t;+`3!:>.i7@)p.p!UMtM;eUh'2h<oNk)t#',/g^iQ2;s?8Y<>hLB%0i1
%paA!sJ714WZ$D\-"H)>cVI3G.LCol7()RN:H4NU<WoGZAdKrjkngeH>2=C]#)p4HjVqb>4qdf$:n:J//\Pe87`U_q=S<]&VjD&U%
%!l>uH!Ui0<rC6$Ih<.rsXpY#jU.2q.:%LBBZq2`.G/nK492(ncM9dNc,sIL9pGNN'kF+MV,n.]G$($N:<hcbr6shIo_[l-o>JbG&
%=YFkggss['E%rp&1pkm<.jL($2I,:7hf?qb3dtMt>2H&PV"VKeD2C\8\*Zoq>_8asHDf<MP*Jo:1!4g3\BfL5m]gXnoJBO.`6h7U
%9u+a$nQgPXSA%/-\=h@gn&hLPmACC6rO&Q(_%thWoA[AVT5@Z9@"0a?Z5S5?.iHP%)VHZf9,/OXF86#Hhi*%dY8`kn=NZf'Rl\Qm
%Lg0Xel6[[r)(A<AB\G$LYe#$/l5%WgfeYe2"s+9c/2B04k%Iqip*-<Ff^YhLFYr)n\jX2l-ShJGV[JGZSCnMb1E+ie]"5PGn%HX(
%,OfEr:uFJHZKSQT%-.N.n_g@e?gR+VSEE2L;66?BIWt5-MPX:Y,0Ffd9Bqka29K)[N]Iuac(4>D&X($>hX_Ohr3^="/]rqam^jl;
%<4iN"k?4a(E4&3Q6-#o5ItTMs60km-^sB68fWAFk]&S4UV!A9+`.JH[Xt(>2'WZ((*)/)B]9Z/R%b[UME*?+kQp"?O2)fF:D_LY.
%$E^XMim0X].e#.J4_22o#:9?Mc\s*[1dbta4mkqt9+l1O[F!?s)]pMa;j(]4Yf+Zk8c40[/@l-@/K2FN3b#d%)-"tZRj[!A;i7(8
%T&MRag"062<JMCsi%AMb_KYj0H.;1QUQmQ^*q_L'F#+\E+@'c_6:'Zodc6!4jpaP0)'jMVcdkK77J2IOWs9Ol(=6J1F=u8jFcjA.
%^C6Kf&;QOj2_>ZZro(SU1;[iE%78?;VI?aIA/Nl3-E8[H&j:rSOgbY)f*UE?9gJ\^g9_.5d(uTiY]JnofGE[:gqS8akX1?Y2HBeT
%LkCs:^4,kR'L1WD(.b6qFH.UdlN9@ls*2Nq/Gu&mmXT):5uTCOkWeFIM#Gi'#=>--o5ZZIrR],UNG5mL\g)cYjHK/:&%lbBGaSE/
%$+I//?ogPC-T4LbL4ft!bp54?;TK04VU[f1\\Re>$PbJje.<*m.9NmYV4_IP$6"Y[Zte'E!B<%>o^C03J/6.4"OQL*$O0G=H/g#R
%I@Qa-l52oZhQoi/<8k;fk="UnL@GM;S$XUG?AmJ:-Db9DasPtf"A=<%kd10-4JWBKp-d(I:Ei'S7nGOhA+Y`p59;d(.gui(pl$ON
%T7XcC@C(4f&\M(X-!\;+C!H-_,)gDu0Lg^+W0UDW_)P[nNTg*@/[El\ZL3%t);N)WJtYOKfr;4Z44XHOU?rf0FnjKE#VTA2s!erf
%<6W4@f$PejM]7,@.muQ0dkR#t:Fgm5FRP3k*'k84.,ZND>hU@e55K;CRf6h)5QOrC=qtpq2@Q=V]\=OOof'pCZP>Bls/>-&fpe+K
%E>FtP])$A(mlGD]E](;C-:]>3j]:l(D7S$qT%&*6/G`BE2$M[$ZD`%cS:KEV>b+6S/2tqS@F:o"VW2'rIhgb/Z2i[T`>=;cVBLMN
%[8O3V:IU#\'cg:5Q?)o!)E/_I8?eGb#TJF-RoDrG?&GK*=#=\oHZ!g'9/pa"+;*_A'=tU8W>)S47L>^.">fd*9<3W$@<@V5f'=AN
%?UiTfr"I?*0raUi\EZlpo_EV_B+BmbNCk(4/n`un$H=R."OD;oWB%L7;Uf(C7-O]L9iXiYp$;UOei&Tcl4snP`*UEb<0,Yp/mAG7
%X1U.">:qdYPSY/nV21__Sf6159*?VU#cVjoU2+Ls&/:D34lIWd#9;[Pnq0X(0:Zp55HBQW*;k\^8$qNG?qe'E?_:M6;=H[2m4lg&
%.]%Pu?Y\N74Ybu@\*91.lQF4$1+*WE^ATcCV*3Ye9!o;H2^klJVai_:!F?5Tf&#YtHF:3S[*'?V4X1WUUODgm?bE"Kgn>l1(mbm=
%%XXf7o9X#7YmP4"!.:e,6hBI$4B^S.BbEthMU(R44FT.4GY#^7)DBs:HXU[^C]T=*M0pSffu0`O4=L4nnrq/P?m%$]hCj,Mq$*Z7
%IjjeP]%AGpX/En*>VP;7hS_38:cFa5'%J,VMq9(6XHq-2'i)S$-!]fl(N>5R1.&8*'b(P&,`!%j\QVG7KQJSRTQ9)qRQt=_@g9N[
%K20:1ipPKBWaiq[Us1dUCa;_[;T"_>))$I2Zc)gL%4':[3:@nk$NG"WER*F*r-Rtj;H7MW]MB(@]2c8)>!QLW"m([?[TA0:6#EEa
%A$kh'j>hLsm:..7SeBdHk-+H2A"Z*uDg%nsX6e?X)]i\>%Hs3+W;4l?9Mq=<WY3#P>eQH2]c!'NhW\h04OrMODi(.FIHSYf@7PeX
%r$l,M>YR_]5I\3:?[(#<4f3afldP+7W-QS[a_Mg&9)AY@js@722sS64?X&69Q%+iER2G:h,UoZ4Kj9!YR7lAsJJUo5Q;gM%E2_^N
%S%'Pu`m,e*Z)D<*kmOPCgFRocAcE?6C>%iV).0qLTsk,/c($2a*h@L:RUj!pd;28iY]YMD$<B=qj+FX?ir'PZ])7@$LA:TVAO;#V
%IIX2cMK+eb%:Obu1\t"YU]rdt%b9_J2*@LSck(HiC[!YiEjJWi),B5ooiMTqO]\OfAFjtpDguhlLhi''P:pE-39%>VbNLD<rVJdS
%o><mdI;q,eITT0(Y8JksZ0Q:b`tGS(qf05i`%$+0LKUccbn:&l:(MPq.&4GO*_#GLe$2H;LdaEYfFf7J?nU-3@\sAlLVC`8Oo%7$
%`$P.$I&^Ys%cL*1<d!XkX!r9$feSu7S&(Z/4"%CRn]44%E2J__:ZfSAk6I7Y0/.&fcE9M;7l0,#oaAOarU)>5@-c@f;Kh&"o:PD,
%f0^Nj[k>0b/_,NDqHtFPj\LfmGGZQXo7.#"\p9T9JlU,&>e)!Z(DW;3W6:+#4`*G^';H]>0j<T*Bl;'\k*Zai[A)-?Jj=k:!YZ],
%.G<89WhiW5baWXY("r+R@7!!lTFp+PUmb_7&I7gXfd13@Q04Zk.D%.'I=1`35%>,+Zm"!>?n8m)<a\uWUB,b@m0UtLr3Dp3$+nV`
%!%-S3COpL3_=uOJ1j5X]3'-L&^sD`F?"=%1r#,(^Ju^,/i`_0346H(6b;4DKkOcI2B&S:e=0)Y1m">YsB*t:I[>F$F>oh129=`ZB
%8e8ih`tarGD>3XKc`AbPlr"fu"(+4c]U?A6.!I95STCKd+I-57f0]T;W`#Smrr,(Rd]AIM75!]jMKak-TpJ4)N`tceam#!J-uai#
%1iPP+"E*N[W9WUn2nDR2ih0F[J+92Rj##]R8H]"P%c^h_<T2EiK^'0"kVBHG##Vi2X@@3D[h<V.7ADhLK]]Kt\p=0(N9B(O7AX\J
%4*"a1m[47VWl5IM:M.DHa0*@$N-5s?/o7f)*[B"jV5qoQ7uEF6d&PYV:$4#3Ko5#uYRCX#*i+<$e<LQE;<qJk%;RBsb'G]kVT8GU
%lI6_)D6N\p>75;3QI_D1U%B'K8!M-WI7ZE"L8!SWHt`r^/*h)\/tu!>EYunuqdKXr>_XdHq=5(???N,3l,a*=i*H4(#rq&Fq^so]
%=:Br;>kR)8hc7KHD-A0A))g[t/Zft1@sm4?57:CdJ%>@n!=\]g$eCnUX7(JEFH]&3Ypg@)Fe\=ABDM9*8kK#/F+aYI;M-:43Ko2"
%<JldOCCX5rpnf>MVjV!'MVpDh!.QI?G!q*Vi2:@ICQ,%Z3pV%]2.lPkWL9I(RGUh25N!SWD7r.A5:2q6>EQL=i9:\D]XU7LRXr9B
%B1_M\;91_-M_go%4gVC7[eD)kSNCe1HTFma"0_GGG6k^bMo>!fM?m?0WZD>Kg)GHgiFt<\4E@+%IS\;UGX[9:J\!X65VQgWf;X+m
%a.-3XijF'+1nRR91F)*"Sg[T"/]<E\7M(W]>NGV[H)P&dh9?nKeh#nT*7mE-3ob>1>]k4ii,0u.0Yu=AjF_'k,->>42=D1`_<LR-
%Plf#_D@e<fNe\$="hMWJF]Yn"Y*F&Y4)UP#c2uVb1h>E!`[e?CYJ82%Je@c`DkE^./Uhm-k_^X.;&1a&S\/YPkLU,c6#n(b^)1cd
%fS03XjC"S29^RTcr.n5m\/?A57H6B:X$.bs.aNErXo*#b?oE)/lk;YdS2lK;2k364&\LpcT,t>Z'gWE)c*[f3WDH7*6RPDTjU/1^
%B%C8r=M80+:\tW!2H5lA@8/H7P\k5Fkn"p>@cl.ImcK-;nKe@Mp@>F;_X@$TP4^+2$9VZ4!^=;L$Gs/%[GZbo54Oar0#Q_=(3R`<
%3d8@6*-lRneLqBeG>f^%V=H_9'J`8u,rIYG;jdeZGGCC-O3mH?V0<(IPsUJQIc0XmG+,Q8*3;'eHp4gO0tH\YCcFe[Sk>bS;&6r,
%pV^gJqrbOha*DZ]/VdhknA6U$4i::6"bE-nq+Nc)JA<Q#QgF*)!7P"#XG;[i>C8]/@GWQtGaS7.\?"D5hE5R>JMO1U)u3rk.);=M
%$2+aoDLa@N6gY(99pgZ,n#G<sU4skI?!_%uEmYtR8EcT5<6N1.2aZS<b74G/!]_8`kQ4"pCYEVAXn6$?0Ea>tlO!;8't>U$&&LJ'
%cO"C#!iuGVPk*WK;Q*rK<.qef2,2r#ln)DP=jqKY7,%fCp<#p*]H$^l%)5l*iJT[lp<k*FG=]Ik^99,<OHj)dEjQ2Ep/X)AD`c\E
%;lVnpMT4e%&Qd.%1'Dd#Vd]/-k4-*&Kt%2'FJU&i_Y-aQ*K5Na_%'dXh6Ws[I+PV9pT$U7e'=E)Fk6X'RHngYqUSs`\G''5F=Y[.
%_o3<8m?26-]P>Afe-XK.-<KS6,[:5dT?6#C_N[4rmrHDXb0p6WTC<RZlLs$VT\=u@R4"Ab`)2hN-DiEuFh#*upH/[3O7,Me5`Z%i
%EsZ,4#=)+R;,j"6(A<XhU%'&I%Z*Luh,K!\;X*18>0RBtX1)*eB1K850h7o&^hCV_'C6_RU'KPW.QEq17].uh.)skbnMXD\.@376
%R\j]ZU<`Hh+hmpL[Yfs6oi@TXRbP.i+k2e9A&1XrBn'JYhsqhd$G2l"Uo&?ph)E96>0-UZB"F+ifAc4ka;.2<c$Zu6^meJ?:4';P
%&CRTL>/FmikR&J+#^LWJJ8DT/?0(Z*OcueOp1.48BaE[BOld"Y2S<Z6?f!fH?PUknX*\><<uW4NO*"4mpdI]ggps-@XGIDgV^1!A
%^FpJ?ZI!l']ZMh-+nb+D%)Qk`DXYlP-Lk]*D:2.QSo['3b#+J*Yg4R67C13CJkYDTCR?^hWQae>@oG:_/9N;97<Nrc&UWd@)4ud<
%KN_G-KuUR[+rM#@pn$)nrY#ftR;hsmcc$eu*ltpQpWJO*pp-=!3'hZ9;*qtK1JLMLEW_t@XD?3S6-%0C5uGtPm1ugl5M;=7_'p`Y
%*PFl^_*D,8,s6?P-KReb2mO3?$GP,m,@[;*k*tBTCfKf)]&o%9"e3I*`sWnWOl)tM('bVepXW*HP&e^::X*'^#k(efj,SS=a1HPX
%5[h$ZC^Gu#nT;8B7'#(9ZrOa]SFMK9TM%dYh"g'ai4\=sH>0Kdge_?%j\JirIulXGjmb+b@1fcI-HdNNZ(DI[@>Q9JnPpe[Q_H7`
%k%-4^ecW9IO(FlaJ3abL6U597U>9Z<Xi:\4@XfFs(+^r1>].j3@bOaDZ><+g:>50>-O-Ra1CP5Q=aI>190<M@@AShecfWU78.HHl
%Gg-OeoIQ&@\9&U[e'BTeE42\_"Phb"L6i(`:e$J\R"K*U7Abo#&8:Z]BH8A4rO%fm4sFu>]k3[O6\\_1PuKXiY&fr@%6irpMrSt\
%#(o6&S3)'m=P*&)@5QO$[i_G^Wj3@'T=YOk:RGW6]nkEL:Ks9<KOkQWf,ZF\8.4'dPKl;Bn1`1*ReR9.j/\i.K"JU,*80'sjPqcN
%*L3^dbBK+TRGD\A.`kVL]<3&-(dWI7^rs/g;t7^Vla'L;FZ]`\e?4ipL2%&L5efH[6'L\B2dpj(_3eg/g'7f-,Ygl=!cV!@!Cm:S
%PLrI;ik'$(>0[MrJ4*C4l@B1KL9/[pYH&rh]eSI!Bh,fmAW7B&k+4[DLYO_W`O6b]@4n\8`NGi\&q.H:A)No9Uo)g1@R1*T;k](?
%Z-ODYQJAPr.8<=enX=dM7r#U(kAJShic#o(0&`R1*57>3"L<lri@A(ViLAD1el@:/pqErQ;pi0^XWGVUUo513F8IR*!+5u?J7hH]
%ep75`fR$Uq*?!iYBL=E:4Q,-<;;C,jVm>ZK2C67Y*eJQ./4,-2h:-FYRf*K8hn:#-1`<pAT`+*8L4Zf?d"G\qmqF3\Hg#(H@2.-c
%2-aZ-O%!A(-M4B?jjF.<fS^%01eb%bha:m1=gEW*%=ZB":P63+K;*\cS,U6j=0E6F\(0"c76P=Ad!62,<X-?\A?2,n/$s\iO^a#5
%HB<ff7GnVU]dgJ_97RkM4RqOl8q'QU/TrQ2HVagKkltUU=L%r\/SLf[a_COspe@7ioO5cXT<Mul+IOb/6<GsQ^cc*D4H]"EPtBVD
%5J)Kk]D@IO$Lj@8"5<1@*Zg"O[0!,09s^,@;L+9UEihf<CJ_@J;.&GI!=t'O1ADI1%(=u9%J>:6:I'#5>6_EPnb0sVPojmK^,9G[
%6;6HBnJi%ik=1BQ8PA,s%4B;8841r6D=G"r`.j(_AcRg>pq_.7\,lpFB*qp=P7*?:YUEV8]eB2j@ous29(S38\Yi"[G`4&jT*@fF
%)k]nr!7jdb!lTn!IgS+"Shd5n>;$CfndlRe8q@mEC!>D!El(b$7mN-&'ds.K7"DbQf$*5G`EU-!G(9?7_#X>*Mn24j\K:tDnR%WZ
%M-7nro5TR6=M_<RCZCghF(dI8ZfiY5oK`P':S1ALMQ?dtQ(J?s;sgA&1uPLt#?a"sQWASbIg]5V4].^!J9;d(gL9VT_8G"t!I1P*
%]i87s04KWs&bg>+(JudXd&WG40&Wm1-=B%^[]]6eFpN@95H#bF4,UGeE7G;5-uu7)jl#1BOo_d8#D?S=JOrknJjb*WG]5XYM:P-u
%<5%sn:P<_7U@KlARs,a*UFfp=NscR7e$'`>#g6Td8UP*Hi'Vq\2V`M(>ejFa/&Jd`%g,7W%-g6(#!-k'a-h,J([6Bd1rgXJ)6q#A
%NEG3GU&I5lJ?_L%$.rsADmgTb\T=::!%5R$':5OO\E"IY,g;.ga4A(DfNPa9P_FZ@\dJfb.uM;2cccg[M@CEigUBSi)+Q'nB_5r'
%-@>s7E=HGc7FJth(g29[6Ye]:Q0?SaaetG^bX\jHe'#f8%CK/Oj:3JM)(%m-XOc9\_m8,UV9Z.#XX?6dTLH9ZPMgD)Y*^*/`G"&V
%E`5].U/n[CG3[FDp$A/H3Ef]"I7Y(mG2l<.)AM=?7XK8m]ddqiL\B:E=41%[$?ULT,;cO$9NoqaF(B(i['(q/PeMMKkcGgrjRcce
%dE+QX2L6b^[@,7tS\b=qe9AKmhp<f$.@^nBmhX@E5fN^)g>gd]<mYBmpO#1($?RdT#.gQAmB!O3jD,"8cYbU8Zk7.T:Y[4hJg&4^
%JnU9<#LF4r%r`rI!2QIUP+(d#]FN;7,U_5B[!OUd=l#6VeQTc;:$/V^!P8('/bYfO4(95I1JS[eV/PXr`:Gm&Z>8bRglkmlV99Hi
%(B4:89Bs'nj"JCkCOdlbZK#jA?91&3e5mSHiS3KjYVtcAel5n-]\=r9U1s]&b?(02"l!_N.)j4[GDcHm+'`M+X#>VnQ-@2B=1MPN
%<Cr%mc(u>mour(6V#Yb0r=.5"h&m=c8r/(iU&Z;)=Qu`hMT.m'CboiX;egi9LNHP^03O,3D+fR$T]<_?mLLO-e-JSH*1\njHQ96J
%-"8\,4/=18Tb=4J$W_![X:nXuqZNM`BVhFfA_cu?TqX,`b1),WN8&$.q?'ShkJ;*e)G8_qWF4%S;)"jt`CbC=]E^p<qCsnh%Taoe
%E0sRL+#$nTir5BAbYXD"l8QN-'[7T4C,]OB*@SOSZOf!*`CsA\mgFtnI=t(pPp*Zfnc;6IH*-]C$Ftn"fNftWLJnT-A6PErE;PZo
%EgBD[&siA+pfB%l>asoEAbspk,@T%A-M>R.eTunES:"lKbAEhi<PAn3GMG+smYA_S&E.DD'=N9KIQ[`5a<'\*X_>=G[L@DJ.W6!E
%[J-^g%Gd-pZiH[q8>^W'bDSoe*SsER(FQ63hL,:M(W<rHIu`(sWSmm71W*PnHU)/8aq#J'k#`T=D%'mJ@Q)3KL>@8X0o7d"h@2Q\
%`Ac.`ISmZT,h#JI,`DUuYn/_ddgr_kDY`\_5;hD(11AX$rh?5m!:M$4!8^UAY4RJ#[;f/=mF/aYr_efO8j0SQ=Q1,-O[hP+.P_O]
%;H%OFW-f!=p$R\u9Od&O$+QC7p)4a_"hg6RT\LKO'#NtB_9bbd+e:-A,#mHBSca@UYZs\1rS^.,C62[j$;^hA8p!Ep7WaSC"E,&S
%>3a*-*7]ri<N1/Kd/PZOEkkl$(FA."Q("l@hf&Q:WSb'/F&#\Dce.^*/"9?DFV)@4JA?-PVMD%;(akl"6RiN_S"AhW;8ChGr"P%V
%-[YGi$!RJu`I>O$#nsbsVeeiO*]P&)0HrmUY&aLuc]0[pS\E62!$*5\"dPu+)?2^"h%JF@kF0e\GbY+?7:CaOEESun4JVC^F;23"
%7q.,lq4h/V=?AOi&SV;+Pj"i$Go^llSfMD]4]41nMTOCsOUE,/4H)grOok!i[rPE9F$^sb\!KT?HbuVJHoFKIV*47KY'(:X@F6+)
%Ab7]&C&tg$;dREpM=1GY4aC7+Ms*Qn1\))Z-1VMth2E`hSsUc7$j]kXW,&EbQqk4ukF;<@#"l5Jd/"G+qAs(e?=D6^qCJFUe3Jf]
%3e7c),)(?-b+5nKm6^R<]j^MN;IgZ-d[<XcP]//l&aKc5b>>],BQ9XM8(TWA>tYRP/j`&K8]u`fmjWPp,F##.YE<$e/\2>NZ1dg5
%=/D2f\4CKBXVXTi_q0*'rNF\e]GdBQ'?Xo=r?Q%hdgVBdHVhNOib:4>AUGJZ3f<$jT+>!40@N!J6e=#gJQO]IjS3d@J`0cqF,tm(
%,.)30FOd'N=QF7f$0>JN,EMW"?L;@WrbG=gd?$hS-sXfDf%Q'Ph31HnWbW&?UA100Qbg0>U?u.%8Mh/!d#QJ5KoVuj+FuF*(1DJA
%_o2Z&8pQi?g0RHS^aFNifc3l^HdH$(_W&s1#9&ai\G)O1^7jZj1_)onfk!4CO5L-$Q<h]UXm.YE]^:N-HqVtT#8::iS*Sb4NWZFC
%%U3?"SsZ^6:#J`Z=&U[+GhqQ`#HJ.1l.mlO9%7lbU/d3Yk[r7NKF=qg:"[aeQNVQ#')d7njF*aVM5C]X,RCk97rSbI)A_V^D6NR^
%d!a@EgYuJ"<cF6mVlkd%Y+mftg8=aTb<^40k*#(K^r='5PS&=eltdn8N2j\pFKVEZ8N:+"#Tk]aimg4P\g:RUP+pDXZmMeT/V$95
%&T$lBPOdTr\>3EhJQ4*D3j+ZNUMGD,Y^X+7mNfuK^\tP,j\l&/nB%=nSH;&XBOk"j2DT=O;B.IccDqQo5oq>O196R7LB'`W;VN;9
%P+iCG*!V$fU`k_Xc=VYH>#QZd%(Jp-&Sr[0g%>GsMW*i,=!fobmWUL"%!B(oZ5-h-19c;T9HO[e#'=IG"J38=?[).$(-A:fj5SY>
%ko;Cb)noDjeoA-N326RI9D*(n];AqsIF2VLgBG2jS+*uVh6ZK8hsB$=)nX4NJGUs%aAC;%IGJ+u%"ue3^WptKkXGpSHsZa,dmuGn
%,g`SlgLu?XS+>Qm`nET7].JEYAU0+:l77HhGq"Sub=k*U1[6YZoCqP)j=!H;5g:]GE-=)I:lEi6%Bt.<#ePE'n3??0I9?(;-uaE'
%\12Q"W(7bL%6DY%DUc9*c8rHcng]22eV`R^rh?jag3HAh^SmUI;#4$Of\o"KZQh^lTMC&&'t$Nr68ms=?h[\B3C"=5%W+a&Wk&d+
%U/\c,-se1HUWqCn%CVlu_=#_n749Rqa%E`PS*]M7Q!!<N93d5VB!IV8nQ^\l<,K_b+5:IF.hL:>>p_U*98%:A0!6iGSmYAI<qCI;
%@+s*1];uW+dl?\L*!k`g=`V,PO[,7mP^!==F9kNIqk;D=Q&gYlYUi=A<BoPiJPP*6qlru4Nm]Fu3V&_-@5Kfkd#MRjBFq7X&Se9X
%U,U$K3c6Kt%3d13Wq<m*SC\61PbCH>LW2$OTHr0UXAr+qSu@h5c[CRM`oSpYRIg!#:$F<<M'9bYG*PmB/4k8'F9:Pp3`PFq]u%%S
%$8#`I!1feo%_;0[mgoU,dFeN,b9I<^RX6?nA:ZcY<ULSq5[JXR9tt,5ru-m1YGieZpOoTD.G5T48V/2L0e)OHp"WY6aT_:ii<O`E
%YueeFGpHXk:eZA.RI=U&_pUIiW\,N\[u.h`(28H$O^uABKk%<4"7b"6-s:(=pg@d=O%+8`UbFWdChd!oQOJa7=-0/Bo+k)%asNf0
%dlT$e:DsiZ;MJ;ts+Vgu>&90GR;9>$gf`'-$<?oX%6$Ag7\V_K3UE>X"ThmuIH>ulRQA<b16S%2,h!>9gRuo9RQ[(ChDlgqD+qq<
%\-ZFj,QR8GR,qD7S7J+o9<OM'lA"b)+_Cs:rIHJ$#jN=eoB%pC9C?fENCM8#.F#)&PlOG_$tI5h5a\.H?IkFW1uR5/Ood5aob#]8
%Stj:-W-V(l#[^0^,F^-;Gm@&EW^)U^lC\^"=TD/CjX.=\JhV!rM-(EtCMj9OE_#1:66@Xb`l2:.M5.Hcm_Q2l"_onqk4,a!I\l;[
%BJ$$!m,Y.3Ygp;23M-4$.-"XM;_1]CU'_!YXOXh#EDNT`oH5UjhO7*Ef<STifM-?*H!RoSa7WURlFQ-]MM!Jj(naIS,D/=9+s`hH
%r`B^L&ZOHI>DBA4pD392R2%S#_>?h?<hY_h'&G?tl's>J<74-m[VhM\,7Y=PE`$4m@9LVT]F;8I/XKIR;aQD4(EV-p7RqRU+4B=i
%3ntEBF026^O%L<5\b^:[8#!nACXm#9P-m9SYKN*5]OhZ/NFR57Cm@8A!Ul58CmH(df.JQ@&1pIJ((`jnjG$,eRht`=k%943=u\Q'
%;Xl`&;Vbu8,WZf^/XEJ'lYFgTif7B5W\;\fD4)^tWT$\8Gi(FmE&r!ar]3jehDq4*41sLC]8To$W%bpNV*VP$8(h0"%FSC02kC.O
%OMMT+Bcq.n6G#9LJ<oIaD6`k5nS(-PouFmO9B;S.4E@fYWK<%@4]06Xc*lXIK5RMXbt1i.TOIsTMO`@`E_)H'"&5@s5Yi7eFUgcb
%=DVtN0q#nQ;LDKteVQ)R[n-oHElpn@IRpf$A4EE6<3FVdM[/+Lfkt@=nT*,)Ltmp\#nU=ERi.W@`$`Qeh(5!V'4"deJ4e)bYU#es
%G,9mBg0mW8"'ga4OiV!=e14_N'*A1H7<B_:2-r*Dp7Q*.#5/\A0A_Abb>_:m3TmoG&_S]+h6Y)hor*D-JQmU3P>Gj/=ZW=^'@-9R
%RQ]dhFA`;"li)7p]=;#j\`.s'f-\;4X?FpP)nr@tW4$aN3djb(PhbYPf%(BjM^ubgUBuQTd#QK,7#u-*i%C7h&Pj&,@;;6VFu_9B
%iC23!.\R@A6t8jbV3Z+s5(fe4djGE0nq][[H^!!l<FkeA(7+Ag//a,,rYj'*dju(BUe=XiJ^"li@P1N"CY1=7U"2O<dtX\dKT8`k
%58"n#fQee0_cK@"%?="05;OJo<HrORQb^_AKasL8]-_IRSms(e39[ZV>FSRXH5(nZEBQ_p]p.WP)]^f9`AE/nO2,<f!4([uiW27e
%fF^bm:P.kV6$HgCP4H;$H:B,Y\-Qn#-H')sJ).60o39G?#`bJZVMi:)Re1Q[>,.t@&0[3@NSQ#qor<Ht)!7A8a"k]GW!feB*G5JO
%.N%A0564M6Vu_Y;((sV9),IUfSH,]gQ+5,$IX'8#KZZcVP5Z6_Sd+a*\Ejpk^L`Be&5Q)ddlHmeb*IEV-^rnL"HcJW'a3O6Tkt=V
%JB6BE@B"B;2*uWVB'm!?dLS;p:'5Y'"L/l5B.KV86#eMkCO\_Z$O%%gbDL$=Cf#WSMA/q)`&QhM_0fHml#!Y["KiD"5;F2&=k'JN
%7+C5PoRJ-BMLMKkkkIE"6i;"]km]0)'qH4n\dAJK$sD\$imjiJWP[G.G0`(T.)n:J6?9KXQUOlGJZLWdR'3uFbJ%,PG30!t"PB^=
%&%tc&9=6%L$a`?Y0i1kJNatR]7;,a\!kWbXZ.@+jU;U!c)*c3i+YPZ7A%*DCg;,/-h?1g0M;I3_q.7_YKH;pHMafH_np]7D\.9b7
%Q>!Pc\,<=B-l,I.M<UWbFG[I0*?Q;il(Jg_kR2LnTe%t2_Rf8MVX"eE`W><]I3D<he7Mae!sl+l37'*VY#*%rfeK64rP_Oj@Wb;b
%-%)C/WSe,R4>$>Ym1U#h-+S8J@5sQf]%WAueJH6nbi!VHp^P16CF.LWH_WpXRH"L[V02>:4jDCdT&=g`(H+413f/I)"M]5dOO#T=
%)JK=p3$[tiL%[`$O>Jjh\?"\B&a$"U97=APX21%)NZ72gNHjXpI"%pHiH(hrCr5R,[lM=/0=m;dLXScY@"`r%Wh:6o7dbVQ'Vecb
%Wu<ZH3AmmXOWdcOJ1g-3CCf7qJ;JM=\R/<u*/8#j#'?jR$b]&e6@STjV\#f\qt4BiRU3["?%PA]kg#Zch?CE\,ZNFAoo%Bua3EaH
%1k*=538IY8`;?S,nBH&T^Od%s2#A5N*UDo*9bNc0+WYX<;!(Sb>[KB]V*(Ak8'U!()Sm,#+erQKgZP1dF.@E2MSe;mSLeR;NbR`I
%K[+?2Ku1MuN2S[Ke-rR8d[=mjS/WQW'q?8/W^XuEmiJ;,.4I-#=cCGDqNq@GEIpn97V"?nmLPn6)WLCh$K;9/)?cY>6U.<Zfj>:;
%SLCZ;kNJ]S"Wl6\3bqW[W#TS=dE7jG\s#_'b=&R8!Mfa7(H![T44(\V=&5[R^=Y[_-85fg^shN3Od@D5;3R=tciE5Hf3k*$%F&&p
%IuPPu"^:T$'.l#Z$:Q*;U5FiL7VHOsUG-+.6n!\dWW$\,!7Mp+>VWLuTQnmj\;_3@(R:_qo'9MB&^V[>EN+5@r1[`a210"/GY&$m
%qGp+m"mO[249tP(&YJrh:Xs"ap4Y<=Fd7kk_Cb<@<O3a#J%<4$Dj^Z'ETEXZYhb:(l.!nZLe#Y9JRe,(TEm3/'LUqlld*tI<OW39
%Pnj\r=c<(jfAijI6#S(8bPc"jg[(M_X"D'gE,LC4Wi\i`r8-'m^]]fGh&"@;k+*`)?@FFV/L$m^e$8`i;tf7?7UMGU+Poo=a@I\i
%01^e6ESMC$[@-e%a`m0;j*fc'1(KGF5eu2o_HW'YBITV/+gjI)p/A!-`2BoQ'+ndS4aM5#FbSFmkDQP2rN:I5`b!_j-rPnjplSlB
%k-!3_os56=U-b^q(@e*aTOKh1HTS?J'@(5s#+:/']]^g;]q$rhCSKl\Uaa#-FXEK8>)/q^eT>ts2gjGHob6:<rs:j+*IHK;LYukt
%Ci"-sL;4Nq'R1"'%*O-Gjm&oaE7WatMP=p=32JdrYj)fQMc93HncBpI`#VDD^4Cti$41Tcm'nH2rN9d@:Y3?4"ll4pj5$h+On#pM
%&]sDLU&ZZ0]s@X[gE!Y5HVOkM8*)I>:mUgcS[^Gp0+S3(>Odu\cqt&@DJI&ILdAD>(LB&'!ca/HJ0H=t;$UqG8htBh-AXoATt4I`
%"\uOsBRr[.LA6^M]TXR(>2np<lhf9cqG97jhOj$Q?s!\e\$."@(Z6G>U="GY@Li>T6HnHT,'r2SNTF$(rUKV@l>_BU`ZOsa>c]<(
%qZpFth?IY,+Q<+!IkP!WM9A5DpaXM7[E5kPKR:(+"Phai8(VND%NcFj!$gudQuPEh.DXS/)J1"I4MDEHSUljr(N8?dD$X69YO;pT
%RXF%iIGgUq%7`adlN'Hg._pYG4@!)j=-PQI%]-n')iaWDHQ\u.U[jUKf(m:L!F@*KAqBiC!G?1)ohr&@&Z]nVX/s[?/s&.,oM]21
%qQGB$H3+/.'t^4X;W?ns4f0_$N1XU?0lT/K"[2tl7EDeCQ\gEaq!8;[;h7u%e\cq^njE3)3>jQdA)RQqWgHQ`.HAh3aBKq=7D.7;
%RaT?nDu=quQ%k_T!uIX9S./&:5<)\Xl'.iLeINVoo&&bHfidDsI=;"iDTW3r7>C^_3E[nP9*rN-1$s>S`\a>>mme8i`O?Wu&A;)"
%K;Qk_mjN$Q]05Rp^!j-`;$qteF+JS,Z`LZCe[<aI86Xic7n<FR/?LA#Ke=P[<I/+S-NM;KfCOKaW;E4e+o-f9#S@m0+RK"<hWjE.
%Xc-\`B=_WcE7@e%.<(hu_<b95Oc[=%f'Z94EoK_D,M:mA?u:[*6J[VK=)C$MCD7pDD3>5eETBUj=9m'cI?]BhHSs@9qpWR>J1\t1
%^BMp6o3_M7(Ms9>gQK"%#G,\-7dG<p^t5lf5V&_A+Gb4t1kr_cA#Sce@(&EG=>/ZhgX2S/ShY$sd)C"0pu"Uh;kP:2b#X\852fR`
%6AIp7,BC1+`/Q=m:RBXn(-ZUQ)t)(Ir'Qk*E^JmU($MemjW5_P)qL-DX^5b<.J4<mYer*4jLQtL'JQiJ+VO-;2j1XPOtK.3h@m68
%4_!5/VUOB6KbNFoIG.Cn]"61VT%1CAa6WW#\Io_#Rni=(r8koqSBfk^m0E`J4'u[Fl%+tMDsiMr8WIIdZ&kQ+`0!>o\2B,=23CrB
%VGS6A[o[F2/R6Q#@>V_rFP$%FF]4cXX+tNM@/#F1H3fkM9U;VLKL_)<)l13e%cFVQ8j.LF[$q8$Id9foAm1OrC3YCIgY..l&)ACG
%n^Lfm,G0lU"C6Ju(DnGGS*5E-?]P\eefr'j)S+osc2.7pdf*+N-B-Gr]3rtV=(@8Ykl7*@&U+t22&jO)1'r//O8X$?s6ukF^UiHs
%JZ,IMH&#k/KU\SLY[hWXhb0-8_^?-]8)f:8ShYlDCZkj^9Y,cf2*HU@h9>+UCi:TU>tjPpB;Zj>=\f..g+L@FFpDC<&+T@nXdp";
%qe^^k_b7Ht*Nq8fe_*D0+8B3pO.YPcgs5J4*9-u`+;%6,Q@9e%ZAId.8]fL3Fi#1oo0Utkottq4#JZr/h:2eL/b3jppd,hGAD7o)
%WfF>`XcGnbBD%d]8R7XE2?Z6NhS0Ji9HC4PdPQE_@FdjeJcb:\q#IoE>7d]LB/Nj'f3cC!h%)_U?,$d5OrgD_<'b<$_TXFUktQ/m
%P8].<IXVf=.Q\u+__GJA_E1Bb&>p=!!<;AOKE)MG-5$,e"2hqeL-Z)&nD\RF)t5Bbs"[#1%Bld>fBO@GpGLB/J^;8qW,2t81\hG^
%YR#I"g?]F_E7MNBZ#Na5_5h=knG%\:H@p[U2*BLNgJ&[*s27,]_lU=MQ)P!lVa%,EeT_BL!s@@O48s21r?bE^29J-C.H!)T2d[_q
%8\YSf48h&hKJ:?HqP"."0qi:%c&Jsob+PWY<1`)F2XC0@?fItFd643N/.G1lFWpR5H\=eDK$QfDqrddjW`,F8L>'a.X%CQcLVVu#
%T77p<'@SZ4e1kM[W5hP?d%P6`+((1SUDQt";`7r2ZR8B"U/ZCIpT9Pe=N?S;f@[7CTKXujDD2]XZFMr76q2jlSdHgZ2I44[C<6W_
%eE@>'VaObYdT/BMr:Ekh=Q44?5VnA%rU/\XCD2:i..8=$</2[47k@^5&'Ef,q]k@s9`u-F+UnFT3IEq[=%;;A$u$/XU;`BL\"rR%
%@j`fZTC3TI&!Bgm>nla@603>WAotW)Xi`ahi3Wh*Q04'WjXj>*?KCR?IYT\CZ_^KXOH;K)A<dn+R)H:Wb#1gpMi!%!fGc5#.hdr\
%P`HTYKBT@76YIAjU)3tRm93C]I35^HMB.Wa:Ao]5m(FZn.,BcX8uYu]e$%g>A\0RX`,>;dT'KKMW`0]<0XRB(T5!JJ0mr_<Mel<P
%M=<)tIdK2]iPQ0@q`hUWK_Mb869`[k05/.2-$hE-ERa\3O3sW75JYPms"Hu+HnYh9mG%!AN"HFeWgoXU&1t),UgUUN>8H3e])UK,
%W#mW4572UQ[q3i];#3OCA@'t\9IE9'h>N>ZHk!moRX4c=\k]t19@6,pTk<_VhOtW2SC;/T<[;C"NPLP(<!RCbj:A`#kGYpAJKb0d
%dN<L:Wg#2o:3C6F\im\1UaQ@@g[5tnb1ZpIf0V-P%[V"OY?jXK"n]\q`6G"DdB[0.,!=pgl7T7[W=Dk+5JCn-E!6SX:i+sGRTEGO
%?^HbEj2#%lrt.0[J'^mb9+BVYeUr!A?mg3U%USYRRo9QP++Ph^1FTNGIt(dET`XLSU4;!LmVL;PqMW;V"tCg'"AS`Q;75Ti4cp7[
%A6q_($Cd=S*98EqlhKkQSl&lY6o53MJiP&X*B]&Fo78fU9`UBe8#`1ea.VWWGVOAarYtJ-Q<4<(C,'&WKn;.s4ZO1*hh%U2n>^!.
%KUIrHg)G3@!AA.e!H'Zk^#`f[T]^R>6AgLh0/B)WdOJA4T3k]8jYoLfKkdta_XsKGGO&rm#gLoh*\SMV4D:2+Tmm5'q$O8sl4R,J
%3,1jeU\O\i1t\J>c!e+?ED^T\WKM!A63cALW$+/4bM3F88Y[TK$,Urob8!<4aRs#BTh$DKs4WJ\^4-n-?M;-=N<Y:5rrL=$XKFHh
%_!3-KrTV<A6L9R^GSDdsF`c"6N;jj9p8(/,2%E5HH-gh=l7]a\VK7ao(]HNoF0rMQ3q6LNK--T9o"aIQT+W^\`u$90po0#9YiBLW
%#hFC.OL0C(g5pb@:7CQ#0#aT(V>m3B6nQXHG)dCG>58b:rpTu1n\3Db#DP-R,l[uc*p>j:7QFN%c8DQK^$Zb7'3u7+PR'SFl<jPF
%G-Cpb^c2J1,hrEO1gG`WOY*@OjVRqPI'X)^:ZqTa`grkf7Oh*@K_b'YE_3HJ.R8-&"r`X!D/"%9g;<QN0_$!Yk^Sr5U?;)KacHKC
%ece[f%FW^h+1k<b[>-6G?J1\;Y:m5Wr%,36'NW4/fV;u1S>?,q8+s4kDFdTGp0CH[oQs$aHnY"UE1H2EL640g03;M)2]05FIloUK
%+>d'j$11.,^IQgta/=PNjRXq\Rtn[/WTWKCs-HF#(7K5*8V8+=Ck!jG=/["sL^N75Wc8cU.K9TDFm(cgnoYU+Mcu5q3aPdu_0h,>
%#9*W>g:Cuee$X'U;bBVZW.F%c._,kYA%Mt]W=>LEPqQs^DL*/1>@5U0\;u[0$OJ_$Afa48c5'peQWGQU8DBV_V`Yc"OklR`j4,n7
%nU'Um2`;,,c6[ZEpK\(6D&O'?UTuV-hPkO=fQPb;M0C(2/8BG\97_;&BdMj$r+jcE2)s_L0ArVlS.@]U0VGOacNco!]13im)7<?^
%"Y+K6\1Hnkq!?X%W5VnGOYtLO>t0<>oiM;m/QYB)9d>SLgJ^Iu=K"+&CZH.=$(S\%5SZRs:K2a>TNO_&0:]eRA<-Ll1MUW<**Sh]
%9G6D:]5%C=;!EbINQ5^OQkI:S0g1DIIf`q&>CrFe;bb&((crKXD!DW:4Op813h,DQoUV9//,B=D<m[bGc,7q$&n)6MPk)$L's_XT
%cl4=VDDr1alr!q#")gIAR?iP=Q:c#-@"QI=!UqHt4EWpN$lFS]/)dL+&P*(DP&@5KUeOh!UL9%>dSVS.YZROeOqG%.%J'&%D,sMu
%$&aoUCJIG?j'hdX<':4HVt,3C@?";-nF9^HqN,?'"!N.S.B)gH^A0I_oI43k!mp="T+S:H?3qRA]:9j"H65?[-OhnOI5;5`R*:&=
%7KjY#9-r3+@[[C]Y'qV4;XL--P?@h_B%J/5FTh?+>2'=OZkr^\)o%rg5I0X0[*"C;2^4P#@hkrf,FGVc7h0#QTU>W"ZD1\1&u&!W
%SRa^1O#^NG/Y#&\6eiXpfPCS_k@I/Ec_"m8C=.T-=PBG@'dI6!q7<[8c6%B?T!iS8IVJg1C+_6:Y^W6@L-H%$^BgK0_Qh?CaIhJ/
%@tI6?qsl0"1I>1?.F:%=18X/G0F7WknFceUrAJbM:oi13Q=>N$-d0Zg1WY#qQT\nO`lZH5[pNB.h1<1+HdV;SYO,[c"'DaaI^!2Y
%E=;4h3j2a#EVSNR$QY8^f&_!:S]c!5hM@KXCQ)]Z?i8hAL=<9ugO88iO`$*nR0l6j(,c'Rn;g;pE80gOUd[dY*VE0\:G<>Vi/?.T
%=ig).AdpXr*39u9';g=/6aF%7%h:7W/bDXLihmamm0YDinhI"baITU`M>BR*+LJeI=ZKlX3#pXHX0bA[#%-HaV+5;e^o/7p^$N`S
%N.g$[:\]6;DK]@lDghgPQu)Ng!FNaj(9!rNC,*[HI^Q.+i2bt3OgZa5?t:(k_]A8teN]+"W3U,^<S*ApWrCcAn'>p<1-I?0(.b[R
%2h2GbnMHnKA>;7[Y-@siDdG@.d^arfd+m_urPPK)UDL0L:DYnT$=`+iYh*!3h'EK-^SmK-ef>(a=88R\hZI<*#/JO@gDCVfJaGT/
%Tr.FrLuAqLbTjVBWsm-UFS@QG5PRQf;lnRUQ\O9>%gHRLG"jT5cHteQqLE\cISf(n$!6bp<@F\5*=XfPU;`9HY81nA@DXpOMu@8c
%r`H_/1eO]d&.EEm2MIajZ`IEC-(n?fqn];kY#.Aq&/Sg#^NP._o]BGjPNlS0P)mrSd+d)!LBcqe,H)<cJ517=JNT]\C8G<+2*@rn
%!a&T5Fq7::?m\JIL6(GQ$N"k)#GRsN7b\#H]9X)(5j)klPU)2YQ'b+6!gMXf<FXI_%js#%.R;s(n"-bQ+9AO;Ji,l@>8Z3k>6_K&
%<pIO!4mEdZJ5/:0*'OVW&\3=B>&ZhO#k5W$Pi=c+Mu<q3,[dD4(d5b3#$gO]YCOi#J3Mk^7H6dFL>D>11I`WhigdebGVj<rT6ILl
%[ZB37[P]<68oaF`@_kFA^2!4-8MpY"*9sg#HAN_9=VL3aAtuVN-S,dj8i9$$&ciKJD&h@XeV%hPFj)FCg)^QErA>77@NO?4HA\8-
%=b,hV,oTFsbOC=$/Dt6L6qS$fdR)cf5tj(<>d+I=8$ZP-'toJD;CMR.F,!GR(Y7Lna'omjD-O\e+=-Jp51L&OG`)lTWG\BS=B]Jk
%_-Mga_Qm>'W9^FX1f$M'(C+$V393U(bjcq#().l8CIef9`:aLmIN;IlVXcc;>DqMk@Aum5Skc?QH1N$,4:IA0'N=UYH19QN7+ejB
%fK51urq$0SqKHICOsC8D?,>m$kU2N>pA`LU#!4=P3qpra#8C"L(#_loF>iuM\K,a4qkug^hkPLl=ri.9r"1Z-$.^t'b$lG=/.16(
%e*fZ-guZP5qo$5MMpi_dc#uc5@I9iBUfaL<rq5c>Vf9m<drPt^,#RtF0q^4+BQ!^nSu@^^V"6IVS8^#H+-A7;;]B/9[L$kX`:5)^
%!?*u9!]YAlqJ+b\`?d=r_TT95n>TW4S:Xa]#Td>qV6;1g)f8i%qo>EV*N)Q6+:BAt:8WTT0oO5A`mC(TG$Qd9/OX''_P<,\J1\X[
%,-lG\fFG"a=^Ykb$d/k%ISX(tKF-(+bI5=(L9MoW5hE6CbZUreJ>T-Lg]1-&r*B=Vc!@e\b)kn&((S#ZV=+Y5s))85WUG2_2E=3M
%4AA"GMdG%%`)0kK?BW$pi"'22I9B8T=/tALr0ds.TTM/WARk>8[f'0?i&SUn=_,a3/]122.L@=>M`Tj@<?g#\TotprAP1,e3_n>C
%j4.g/?n<<c]+/5%[81^AncfFsal7hbh55]%fkLC%bfh#a'<?G3VqSr\$N"JO@qj6h*2IN\0?LYfEe7#8?1YZ-e[D)BnSng)45sKE
%#2Dh*S,*Z'_H-5jrOetB30_f8mdF!'8)*R`%Qa"%8.,@\^EHHX9-0+2<aBN@&kjmMNf8-Nb`tMFFdm.UWg"F,!#,THmL:hJJCjc$
%qg=)WrDGXDPBT+I=5jmh+D:LT6.04]";Vg.T^o0En66W)__4#JgS=A1lQ&69X%kRqA#lB_f+Bm?.36=\dq:qSa0cMhraj&@5*=!2
%9BY'/$jakfn'%eK=Z[4]/3I[jUl,]WMW5(Hgu=B]kdQK;8\DSQar,H;NFUKA%gb=@\j[?l/D*K+K<d%7glqK++^A3&\jS.?41h5(
%Ycs^J4["a?ra?Q-R$P3M-t4-$a42^?<@G(m;,mCKibbPH'ZkK>l6"TA+]kLQ%n24%fLiMV$5rksp/[C(1ubZ4?I*.5)3qlbCeAi[
%a-\K7ZC=n7YCZBt5\]1s4mOPZh!?.*pFLf:I[>"HVT0^^;Y>UrI^MYaFX^lL`JE_QV*$k[T'cUJOo3:%8(9u;TGBsn:k:<qLPXh<
%f8oa(NK3,8`rUoD'r_]AC<<sd((l,%1ubdob-'d8TL9hlYkX`AO#@!=RBq+TTT%\j\uaepW;[B-Rjj43DG5,*^Sd<#J,_`rO=o+Z
%/<\dr,C:dhHK8/^H7G_*qfOmubZMLS)G+#ikA!S)cos=?LgFku:erE635E,(!hN$]>/M<79\"sdOG#<h&!HT_/-#H&jV2Y`;r-;#
%QfH*p)T?D:/KlMNRLZ.N`)K"DMGeMKA`H/rB4^g^^8_r?ln[5rHmCL.6mNOaEAt2fjIlR`q*==cD(sFZbeEAnl3AlH,m^^?hDCmn
%U2r6kmF;L+6TTn:[SO/=\-?b<&Er@(VU_K*X!t:9a=[K$K\3(;:@Y^un!KWW-$(!bg(\OW2i]YW?c0!KL%'o"q5BFObo*#t0cZ;W
%WmM^"6P`&M"N8#1$9%(SD=>m['\j/`7*mRjmY;aDpF9Tka6=S;C>FdjR/#8=D&N8XfD7YS4XOaF6.G8YJ?Mp'0i\pRKn+Se4(238
%!`m)L*a%9Yp.i5@3bBt=:7n`\mV&OonMZHhjYAl-PsOfGS%iT.?4sIh&E1'F>X`(41kO5'GH/7M6GfJsAQi]h^]&RJr9eQoi<:`R
%(3b\A_E*1*.^k,(cYt;2EE;?(l%^G[\C9>Sa$ZW08's#B0AtI\qL4`WJ[P&0m!a,BeBjO*@Le1Pk1?`OKQXqPQ/9s9>n!G&?b7\5
%[&iAEo([2n]dV$]e+[772^U)#.Sk\lW3dtGJ\_5W"QM2E&S1oql!D6,8FSIXYZMD:-eBpZqLOa2f_d]hCOmfP@LY</?<s/Ui>KfQ
%:\SiCs8!c4KugER>6h<[/?_M%W<)"K*^)WRIKur9']BXjB97_Cr+09Z,Os##;M'SBEUqPmrQefKG=^dc`=#GQ?on9+5JHK!)60Nm
%GYlp=Q&6meNgJ:Bb"XJLTE3YkP.l4\9&^MlKhr/[^[V8H`*J%)Pp0'%^C$\FaC\4ZfQL(nJ&`Xt?p$-rM.ANK&MY0Sclca0NFl(q
%io'\!o3(JaWmYuD6bY<j"UAcM,s;T[<8"rM>VA=%2RHJWOl:5RM3@\bZl]Y0N+P9"*^M\-]W\:r<H?.+oF&:MJ6Q)^3n<)(FEs\!
%s4+QL$5\l!CD]#2HmSp-9m9":0/Y[pA2=T(3>K1;(i!$:;Ve$PR%d0mSCr3F?TS>/fC:s"@/o$lG7RQlpcXi=R2R*a82RBb9s(sZ
%=1(*H<^:n[[q8b^lmm9,/?'sWPqGf#POeS.f'>@!\4PWrob`&AYNm-MRq\BHkk2;']Xg]Fp+V;/JuqK_2ETCQHG2E2]9MY-U2.0G
%KOo@Zqg^8_QiWBY)0d+gGE[A/Y?"RI^emraU_"Q&d^%:&4=o(G>R3OFp=e%iAdN-6)F&0T1``%1*!(8_7M'`S9pLDk?MdV1'urQg
%%KW/"pDN<f8!=("dJ+CUpQb6?F2Z+)&;>==^^s(o)Y=%6_pt9!.uLA?hBGPL[V6SIDq!+*.3ha->L=L4C:iF:\"\DtPP_s>l6@(l
%\.Nck/&BKIOnXMU5Ns1$56njoe4Mpoc6N-_p'9s\pIHoT?fX_\PUcrU36oT1GO=(a#J@-^r(>0MA46_#$<_dQXGu.:%Mi2(-RYC]
%jl5ZI$18EH"$F1t&1Z97<ibegLkJ"mn#pa+V%J;?m<#s?"%75=L!iXW%6K14WIS&G=9AR@Rk_2;C>dE'U@I8@mK8cWBf6$0rVd8Y
%Jt%GBiiJOBNQN[*@\QD:,co6/nF5roCEs\^8<;f9)`fFXfNa9S5e[ZTTtkEBT!V1Xre`d6ldnG"-,E"Kk,,aJ5!>sa69?[M5%T&i
%&/.ga6>?%Fjf8W4Jr9Ep4.6N-a:Qn<!1VP^)a"':KXkO*caM6Wa"Zg86)n:#"n9BE'XWpL1CcRi/W;:`hMUBh?:'Zo&CAliJAAHa
%rYWfDQGe/G5LGh8M5$iG1n>_nQNmtc[HBRuU3G&."0@*^Y>4uX^hpKkSV_=[^B$9[nmM">NLS?)EDM.'VNbd#O6L%U(O9sd]j&(d
%e;];.#J;?=K>$I%mLckEa'4_V?AQ%cFfn^i3/m;npJ]#\b"T<?qfWsul"J%MESltgP>K=7Ism@,ciS%$42Nc:%$f)7:&8c%\j_9*
%i$3(Y^o*tI]X'k1UE/fSY+*l/3AX8i=J%i=as":L8sV2IS\Z[_/13NSlICk/[qB?^'SNIH-5Tc<2cO;Z^q3!Z@Rg0>SD7.!]75U`
%kAW:Arj0@YGL5?[&kg7Aq@^lB`UR/"lMJ($W%/04472>2_0-b6'9;GoTD/?D:FaX(R7ce!rtn!1D.!<#4UM5l5u=$bO&#7fhsrf4
%XOJAK(NFD`*JsXV$N2n@K0"FeeO10nn9O.a(]Tl;3q;o],n]qsf)K[@j_bssOI33H%9W;9Ln8DDAfL&k@.;6tr6_mC3Ic_4Yn2sE
%L09b[[4tSHP5GN`?O7?o?Zos$3,2S>=%U;$LX6HYO!@s)h,E8OYc>YJqZKLVh<lX+<=&Zn.cLT%g+ds,.r"i2#.c?`\J,5n]]0Z9
%=Bb!oF1[fpYTh\+6__E6PqtTR*,2#E#BsF_3U[M\+q71Fh>mip%'!0nS8;]&R!D]inC=lf3\naaaVTe*Mta`=9,F2#Oa[sg;Vdig
%bKI^(H/G^k\&6?6\\,XRV7<d)`;-4SKrC.KirC`f-,CCU1W18OU`ZgHQPg:l)F:?8NG[!o3+/!^!H(Z9cEPn!Xe.df5W#6Nr:frA
%BWN>CUHAB!japQV\;OEg[fQ304`p_P8+BjW@V(.n6'%cDHs#aX$tFoLTSo/;ndk5M1<R0C2?\DZh8dJqCQC3%GqJL@2-$;8?)rWZ
%q>[1OX\6Uk2;dVDl[`l\Na0,Hr0QCd,N74[UhJC%*iJ5eoXo!;"8.(dHeYC5Xqib-g?jtX:mE7AE)!],L4iXnVOBfd?25BQ`7VF;
%S'?<g!kameN`:+]Gsa0J0GoU@,IXS\\:+R=aa2#C6FB+C"[OfA:^<<,273.oiEHGF*c%0PW?Y6Qd-h,V&<a&qiV@+g,oM=\./e8A
%TpfWq3MhE/R&Vlt(G')2/#Om&\,QU9Sb2i2C=4b5[q#9:FL>AXdrkU$opE>LIBjp5`Dt56&u=W>\'EKRVoUJARZCO\5[RB['!NR]
%!>!B0]2j,U<qC4Hb-WgTk/MNp@`mqEU!R`Q3&p$p9Csjk6PW1Y9phs:g]NS:_$LVY$mXr8V%31@dcs3=cV`L_i9TBDZAO@=2A0<k
%[p-gJ%9HJ2DA:3q"l/51"h71e!_e-F5OSP7hH$,G5R<6'MTi5F2)%SI=_%l229p/oPpu*j7!cBd"34-1e#G=bU,`XE`gPjOUb5@f
%eXCI#.el/91b^(qPXJoda%l4\9f7EoRUP1_(5YRJ5?I^]L=cmYG>MkWTGg$rr$A/X*b;QipcicQAYJTHr7d'3jnQm+K>^"t'd&]^
%i?+je"?;P[V1^\nDtU-pc;/k^(]L29n'@q1VkK2rkA^p4P;j\0\ZchsSEY1bWa63q1lX<MfGqZ[el/9UnEqY=)A7EI@_jO'8"_%m
%08-`Q5_MRA1E3m-eC'WQX(=G8@VHEG"p;P7PSKr5od8HN@alR(esnq(C0Pf;dXH.6\T-#tX19G5SfhS7O]S%)8A="`:HU6X`fHb1
%Zt^!WfRm)CS@n:0mmj%Y0CS72M<=,M:N'/@eR._/JVY^F!XJ-@lVnD;d0UXsR9&p0,QHP;)CmFr]3jBb5ptR?YdMk+!dm^\P=c].
%OrA?c-/=Pk_Z$^5!'&B+_Gf;Ye3E;+93+9=3nXfu]eh2>a]fKqO;;(8:dtEeW"T(pO,QgWZ_kh"K$]Ofqlo=I_^"-fXlm#*ElG8k
%EIFF&q!W"*oc@MlX0!8f#5?'*5G6cM4bl@TEQ9;Ob^-95pok2Jl)83fO7T.2Gj)=&54:P1;7?7,^j&.;Peb!lkV</tTBc3D^YQtN
%\Si3snuHUj($'eb>ms@#F2cgg"A5p'YdAW]Q^gHBp%c5HF(6,Sg>jmTi<3e4a^*hej$mY]2uTJ3T(mH$RStq9BWd*$%,f[]I,XlC
%?o'FHq5;#[8s7Q)pt*F8n("St%Oo@'/&1f.!HehQSML.r1dMTHQ%c!>nf-L8HDrn]%Q)Y4bFfl8'J8d#VnXKcPmGeF29sU"[ph,i
%K`ApXn".%ME;tb')5J0sF:kpXD'qV7#ogbYqV'B+lG[I(+WA;;U,Nbbhkp?G(iq7["B0<"%n1_1HOuUO1$jG:oc3E][qoZ`RqHTQ
%71]@/D1=mr&KYejAO^'9,E<fW^Il8%\7?/2E"I(&$?BP*hHeBW/LoO#]N.p?7;^`(J+mp,+cJ\`/lYD_NDkW!,(>Hg+TR(0nLK&s
%S%>aI/eP:S^Z,aoD3l^n^4)Z&3:8-Q%72YW`4:H'o'Ih'.Q/oqYJopm"")r=PE'nl6%l.qbn.??o,Dg`?]U*"^cphbo8g`E@LmDX
%&JoWH+BEA8<miUD,65&9E7P)Es29\JnUYi?Sj#BK5S7tm5n/S[]o<7G-7$'+((4Kedq.7kBZEQ"h*%1*O5o\9^ELVkFSWPh7&O0.
%":u-HX(fCsGJ'i(V\Q@8Mo6k[=ZpI^@Xim8mAI*p4o`Eu<?EA,M18?4X[R6Yi)Ki]4dpR<c0o=6$!8k_i_''tZCZmaMO]/DV5?8:
%SeL^FjW7*n0XZnUNuZH]BiE7<YR![o(=<#CG:SBPYPD:%)4lJ5Tq(3%aVAHa6g7&8<9'ul&)-#p5f/[=-*3j^-A4q[B9Fo+FOIaD
%*G+(\)5p%FDuOiu+"9Jk0B-b81ffflrip:uNYjVSB@:3<lVePo!F-A>a,JLgJW23r@84:2IPpMJU96Ca+Ljo=)aC=pARa_#3ABEV
%Tc15;j85h+>T!c<5?cV_607uXBFnhL"80qBFY4gc`@2,rNU7O(mR^t9CaHlOb_O"kK+>k/Q-N)%0#TPp`BUgR25Lpi:6K>JQ,L=a
%J+m$ZjRBeokEglA>E%EnUdp0s>`2@e:5;K.FMeU4m6qmX\5eeQKPtusa0hRfUqH(cbLLG(kXkF:1'osGB!Z\X#k+M"ZF0218>qm>
%ip.=p.<tq9dB+^.e$\]a5,1)FEb#FZ_c!gX8HXs.%Un20j*D*;ccAT\3`K.).<HaH`6(0ao7tu[9k7Q#V^3=(B@8@t]gF'\;Rb3\
%,q:&Hgp&,oJRPR!MWE<'<5X3GT#R%NV.9Ct];!O8UA2aFa:+99s#`eSRF(N"/4b'Ac"s+CdhX,l^[TS.52PlEe#LTHM*QYBnoA(3
%O$<K-r^9+BTkb!+"UP&588>-2%[;,Oh$:Y7H$MSXj(P=b;KGj9rmeY'N;-&hEr's2fM/4A+\bkmnSJH2,;Q+@RrP7IC+<eneh*=T
%%PqH'U]PV/S\B7,5G.oLjY!:3]=BH*7=ZS$jUCWS&>T\1L3/2><`S'S!!.,i_3o[fbChBf*4BFM'e%uYlo&=G=mb%l#^+QgcdeUJ
%Wk\Oo5't48Lsa_g[]4f%@&PpPAi")XlZsL3MVq!FC(:I]G*ckDEV[(2Uib>Z)Z;V0&Xu2&,2i:kFLiWUjEL)Eq"Mt[,qKL3Ah=d6
%N]\g5mPI+@($.[_QbF6+ra\1:ONhrb]h?BHn:&nnF[:aD@6;H8cQfce)a6q:ZE^g_*AU!;@9##<\GJ>J?FF8R;LBQ\eXAkf&Q^S7
%Lq%NVV5TUaSVE%0r^"4q+UK0SVZ\)=,J25/a*VDNhqBaBoA\MIC&Q#[ljXeO>'`DMV/akH<E\=aho+2^G[<pS3q-iRA)^E;XD2g+
%H_.fN$>&m.JG>SJT%_h)B(>Q!Y.1Ke@^=,^-DlNq0\&(=$Uq%t7i^cM;9c__9(49H5nkXBZ>GCYU8(G[Pgn.W]//_"mSDAI`=_dN
%Tr%opN0UosNWDeDC@O,-'d/b8h.s0Fr<%mpM=N8QG23L+3.Jr[pR^lHI;q1XJe)-[&naW0X=u<;o!k)K!;mU]ACNSWGbu*lUtonJ
%Xo?++lpjT\H+0a5),#Xk-S(AT<6<<9&XP7*1H4;nb'_.NE&,tC=&Sh:[.r3P#)Om[lW(=I9;=Fg-*B3-<=Q+:/f,cYaGp7:qO1P_
%q2?Ae8&<(C2eL,a4qOFYC4%Jp8%c"mb[t^@,.5.S;k*/7TDg4f'G[L<K]7%s$@NX,><kJoLLD)98?<"+eH08s8H.p,(1qOCYVe0P
%;0IgBoFYtc6/3.:QWda"p"=@^.u=f:(6IJ7aEMUUDu+PMO]l`6rnESTU=X$X/I35_/,rq$+i7,d+fo8Gq#o"-qo:eI0bLn5q."%(
%mR*g.Z7=,BG'35%kQXP)$rp5c9]Cf(N228DAl=-:$93R(>3+7d+ftO'5eL+$2tSIsSq75nYlmt@[N=TI"Ool*$3_<$]Ger\[>"b?
%ikPQ_omJ>PfTiPX>TOuOQC:L!O#G#l;E>CrTchkUptVs@6T*Ek%7!5:9^a2Ddo\S9J+gK*o_#J^Gca8>a4,csRm`&[KeuR_gK7db
%KP/$&k6,EtY@;dM3&>d_U7#@.W"pCt&hZ7]kXmr5=kjgo[JYcXUU?7L>YHm,W7%bhC7E\'db:<nqt[(-Z[^e+>9380pf./e#W_#+
%4J8TO;rGce/9.l`pl]aGVRtY"WsreG?Hi^TRpB,V\ol7EWOE@lqpHLp%Q;B9V,H&YMU]2&FX<@MopYd_6%0FQFPRMqi#CHF**[T4
%%0$GiWlTREk<XMH^nka>fSfI#GaaltbON_?cBSXU5'`d6ECUU:YJY*^Y.8lX#qC.Z':Pg82g*%21Z"sn7\_!'I08C*#Q@6jIPcqf
%:,A_qa:G9o&F2&NTKU(3.kn$@FZEhKHY0[1nZ2JtD*>:8M\e#^G$HuK*;P8nXu0RP1b/[C.qRCPg_5Mt=mA:?5R$D'0,(IYXl3d1
%;*"eO"Cie8'ip$C"1B.VT$Is3!&NlGhnT)Q2Ah-NO+VdGr$5HK(b]3oLs(rhd5Ld4K3Uk3">ctR^dVD%:;P(bMThmsmkJ/H6qhBY
%-0WD;ckd=t'A?OVrN7%K+hHn3ckYONCTN56:8bI`f'=)Y"3p5DGtS)HXMg6q>THud"IImHaGJs(2nG!Z"VTgEW<M&:Y^ESLM3uc2
%d[=Bpk^cB_J(&CPA.Rk*VUeo=SbQ)"*H=$ch(*SAX'uRSY81p37?$>&,*QE=ZA/`doo>U<T*+=4VDW6(,Hg2>e,7D-rZ`6R^b(\+
%LY:JlWWH&b6&%j)Ge$WS)2\beCgJrqfc1^Aq<E]I2jWZuH&Dlj7J7:^B(9E6Z3_fC;\702G2fTHY/[B*;W(RG8dnBt1QcfAb85s3
%Tc^u<8CE'g^N[Adft'F9&PE->a-M\fXpIYMR9'qpJ8+qLFn`lTB]"jTZ#IWG!VPs'8['r>>WnVigP8T;[T\S7i;,sFLgpG83iq3<
%+9-aZ!67+dJo;$kZ.SBtka<+,SJ5qnfd\V!d/n>If?D^T.>bd<qUF&$P-52#E=?_%n,-&k`ApD(1>8!B&#@W(AFc&is#:ceVejl#
%lgXj17NT;@,G5G#B5^6%jp;p8fF!1&'7^Ghg3$dl4f)6_I+9%IajmW<f(4e3cK]]3f\Tg*c:Srk)!eJ$I&kDD`l;?A2W`=b`CiLI
%g.6puY&M"$rP7Hs;,?39L$colr`.Qq$4-$1;I`f(@Z6\g-K*/'fuHYG+KnVYLneAr?>1NnW/qAURSp;M3'8MkmkJR#Bm*icpT-$\
%FF'e?Z)(f/C5>dX\0h,dB@P7&?HP.S\)86eIWgBbFP>Jol2$?i=7)H<f2k\gK;5eN<aeN"^fmCp+29@J6:s%OO=4585lV^1V>Uf*
%Q%cMtWt>>\b7F>7h%ubKFNkDoXg.o?gG><B"OG8O$^=aPPl4E(#^GYa=RZa-E&]D-m:>$P!FXhdG<gO5T6h+NZ$=qX`\[-hek<L&
%(Q*3GDbSM-*lMir/i[!+q`P%="4Qmrf1&3$DpU/(je!iW?pVm2=*RZXR^a+Nio3:I._34eR'FgGf3RsJI6SX$crSDTh^=5n&!"#T
%Lm3u7d(+u-m3_Rmm<Jl9RA+1-X2+!2]N\&t?H]b*m*DYRHXd41NpD;ZZTb-ZH?mVV^\s1L-RX85I1h%4Fu+-?D8<W&/5RQ>m8j4s
%p+X9;"c5H.bI_h6g&/qD!cskm=F:RT`gLQAAX\X%+SnT&B95:=oj5Z/75f:,N\_DST0ITdeC5LW()PCV(!795[p\]4h^S%.0:`4N
%>M,71]H6.5`)R.LF_/&n9<>io,=-XD>Y.tEnZG\1m8Xj.$/L5B)JN2Spu_qDi)"DI5:*,S6L^F6-,[Xo\+m8jl7dGGli'p@>:-iS
%in`"Cf)=N]][aB&(q!-7i+M_1k0+H5F``46P6t/Vn>$BM>V2&g1V_F+mDi-('Jj<5)OAD:qG/.+SQG\iqZ"*)eNqSb*HY\3f?oT#
%5dIAl]WD.]cb+20`fSUmIq)Q+'O/;q+[1CfLP:Eob=gJM_%s$QpTK]4,S)iLkFF'*Ur"M=G.HVHo"nC=Mhg:\f(-ff>cjt,bOkfG
%A@8F&jG!q42A;%[&Va-`h_^2R$=6_sf(SXb+#Qi2GXL\$7=p>&#*KkC4.1/r!D=JbMFt!`1X\Eja<J(%or21K7SBi7O4!@p#G/!g
%Ukklq2?Whb;@O\0:4fE>[=nB>.8(9.JXCh$AlMk!9ds@s24kEI'HXk[PU`_kHHhHh8\d]g%![H#p]cFYP5n;[;jd(&>5;7C5G#CH
%B?Rlo.>dc8R+"dB^[4^W6r5cpHei@Ja-ob..>4nurFeaieaBa+1UKVIUttH]oOk33OSDiN#Id2<dmZ>Cj_1!e6!s$BUN&Ute6#WH
%+\YZ`Qt9M0%"ZTeWR^Jkq<`@$FooXtP#D"'\*lh2](<mkn7J@aGJ(jr:OpW0PPB4Z$@4T_8)476bhjE#:"DmCmJG;4TMQBO#b!"\
%9mW8.V\'eDCkm95Fc1M%DmaWNED?7J!;<Jdr6:nIFPEM9N[PtH1?Q\FP-)CdBjAdABP5!//H-9.Gs0.I,7#;tEVcLVchc=W?g_FM
%*$Lh=*FSphG%1RM1P8;qWYAQ!Ebj[h>*QgF6251Y7u&u_?AP'*C#T_&RYI0Ym/)3Q6tLUjOq<i2R<^-$lK#!o58l%3WL+LM#i:V>
%o+p<191LD6>FTML1R=>N+hB5)cpH5ucp3tdR:fF1$)`%cK^8^qjcV;<2(sObgE.7BBrk;^S.boW%lY;`@g0@h*aa)@cb8BEMLYE:
%\1d/ab+HuFqkZ61g\?+`4BAC)U%A?;%(S>N<N?.*`P7s!E<t6)S7f8h"L&'F$40gg-6Fi&,E"sC0ie`P4FH:e540!;F=[D3\j7,;
%;oca%4U8%Hj^ItsD*O:LS/-o2=*?fLJ.*A%>iN<u:&604pJVu$TYPGWNd_uJfY:Y:?[Jp;"#9*/eHu*)$J>F*2&<\/s5B1-:bnN&
%k/52aW4qd$[[nQApi3l2T&?]gX(@EJiU/@hiU!,%WNLa\hDq-QKZfu_q"ElSj>.@.%K@^=5#r3@7sD8:$r^=AUhuq2M9kh&?4IrN
%ZA7H!$@L+qios=qN^)Tck'norf!U$cJ$#=A:d^(N&2"SS^Fi@\APeBET?cI13c6HV1TC`<fYV'mcq8XlR``c%H)F:GEOkI9n>X*(
%%arK&(EYaGn(8!t%!6kVR<3*thQ&S!,k?$^/*@B/9i>P3>Gl=j=4g*.m%JTuoc8[^Wu4SSI2)Pq9+Nf]aa;TKN:*[$C]//%1@(U^
%&N$oi:mUSR=ESaVBfe)<^XPSU-+S&%f+J?GFOL^@]Qu_1c;>m_TFXBS"LV:?1)m$B(6\I6B=lCdJdWPo`,/Qle!X&EiPui`e*K!l
%Fr:Rl7/m2$rtlC[(BS0Z3FLs]17Q.D?UT_1MWuu2E#\1",,.@g41[QV+.`]ZmJhE0=6(Nl1H5,n&Jr+_X&@5:\,c8G'>JIPoS%J1
%^)9+_O2QH%@_Se1:9f<8ED+tC_Z!uZf6'BpmIolAk^AI?8:L):n/=-XLHNM.<@blt\uMETmW's6mKWi45=TaU/9J+2@&8O.oDsO3
%5$hJ?1H7:l8s6m#8inq'/`"AF\+fl)8=)r/&lG.n<L5R2b@pLY5Y]MjgupJ`CU+)okk463B@D/PC?OoBdjciY=&^aa0;@A;f1SL8
%piVSZ#[p9a?"6Z8NdAKr5';`$\s#(<f`;W@glSKKW?)J:V?#/Z=E%p4`>8j=;[)DVTu`:/;Cl8q2FE/%+tYe?8lq=n[Ro*cpb"Yu
%5=[(+mR6GGXSTUg%ih.]RW.Sf"?p<c`j3?A$(i#T]9["JLl6``1j.hH;*\V3r`X2=4To)f`_1^#C]G5Gp9DKW2d=WNl-lI_.IfrR
%Jlu9[GC1H[Fa&T4AkqKJ$k,pid&#PC?eD#;_1h`%hBX4>'U_m96:5l=cR<2MH?#56';):c7VL):=cDqEW,38:Iu_6M9Z)iN^=&`+
%g:tWB9nOkP<WiZ(`R<$65.ruWT0MbT[J92l-:o@'/6,a1>t,$sRPuSpceTfB".-L!q@fo-RpgXbpe2,6ic?F&Pc3d6>3g%gO5K8s
%TXWp(D;2lsae9ijI[[7HYGXJGpgorD]rOnfCe&Z5^k[^/U\u9QU$q)KpjfR-\'R!Y^u;+[n2Y&?T!o<l-<MS/7.Il,!BpFeS=Pa\
%*=?aOk$dJk!:HWL@a$'n>@uLW%.2\u(AR1`qtdY^r_\oc)V.T[LiWElD:^,o.VT@IOgsSQi"qGjH:I+Uj9g^HdddlfNT2LjD&2D-
%?2(h3hIK,rjYlS2.5]-Br0mbf%W`5#,I228r**L>&Z&@=#Ip!h5$I\ja6Rdenp:0)_#<+>g:Etf8<AkP!RfKd!>2JqYQ:&O',;=:
%D6SZX3,KIZT[%l!S^72uM#3!c3]4mf!en&u-2CH]I5FBOKY%`Q\K]VCf?&-_OAJ(0D-pu'13J>*We47*1d^cr$[aQW6]CDDLAh55
%OfbRWrr%?=5CXTIVi&e><$13tRnWK#DK[1CM^mY$mQk]3J.AqI3/\kZe9H6@oQW5^`!bKZdCS<ANHO*ji^F0V8501F4,tsfU>W-F
%f:?]>(`>h#C_<M(`1)RO\9#bBMPG6h>D5.Bp[JApLDsr\b%clt6a1,G!IX'7!TR:ee<u/T(h2`?!'fKKrl<COXW63Ej6O\6(pOVn
%<2-DHA2"u>,8#/6HlP_;<b1FE_mn_#GO(h0L`"BOY/Qf$fIS@md\Y2$c,,74'^Wm]m>UGmH'>AKBD[/MAU/7h^/2I;!jBL-^1!Tj
%oE0t;WK;%_8,2Z]ppa#0<[BsKOpFK&e3(b7ej`o"<[`#L]t%6LQ;f7oee10i(#aLca8"kI%Vc1+TPNqiRP94/U/n[tQIGL."h])Z
%]X%3dAq%mZqCM3bI#]YS%`8@X>;fRo4u7?)$5.gp^qF8&dd<fI8;.q"k/.`@ZXd7,W\"+b&Yc^;s#FjAS>p<4c+UIF-k-XgYi,['
%E6T.*SN"lhOjl/GpBRkRbW4X2lWH9=\NDc*,M][F?g=?l5'_*5?,uS@p+_pQk7+UoV9$at?QNiJH(*9lD<FL'X"5"_@b9`KAWeeo
%.`qX0^%dg](c5?:BuY4<.>_t[ARGCU<uVfE+W3T&BWUqI8WL51'kNrl^k^^!EIW+4gMn^-psnR?f1Cd1R6#T^\Ms1NX(hK=rGbnc
%#m$GRX3cmu?i?1sX4(EUdVZq/+oj?5c,O$d/LX5JKXd#n3R(UIdY6iiMn?%?>Dr6:^nnYM;oH"[`Ws+k`lCo'R^`_-:rll=Q>K:%
%>gp7rFH\N`+rK_Si0".d[\*mgREWnq)?-;`P.g,G)$`F7KKSmt+3iS?IG_0@O0-Po%@ZkA`u%LNC:q16%sW6LPr\mqk=uJ)FQ2$W
%#$aIA:0M2O(\jNQ?%UiW7NM8d]dIK.=s#X4\SLuAg%'3Xd91T`c'3S&o6I"'=LH9?hpnkt]MJ:"q_j39=JZUaroEj%9MEdc#Y)dG
%EC)m?Eu&C-$i:nhT`&O,/>h?V;pL#Ti.hNhEEOR^I-LXR#5NpZC:G6t_aEEf7n5bIkki:Eo,:,.5*b'<gds^lmb\/VlaFHBhlS"7
%r^f8I=YQ4bZDgm)9:E&naA'Q8f.V'!V?B#nq)g3c$lh<62+;eZru?n?bN1Fh83]2^J!JksYEtm>m6An%LQ,IVl1*d%:SR/#(Um_s
%%h+!A^X%pJL\7j%aYDOaCC;BXHT_ntSMna'*Hh2*/6C+P.]&g3KI*B1'aR@q'LH%CE4FaFS\+Z!Hd?.@F<1;ENdFCXYio8]_)?HN
%&TM0]YqG@>$[aS;"B4PP0\8SIejcfA^o]kH^j9/:9L"\.631?"K:'rls3GkuF<_R9dkcB`!#C&k`Q:/_!V@mpYY_``_C>J[R7!18
%eY;^:@FV+(idupE80m\;hbDulZP5?(kD&"$kP2<;AN!RW/Dd;NCJ2ZlZX5A)Bh3'?p1nc3"g4h0ge;M]GZX\V@?=Hi9=(Fqpu$s6
%=-I,G,u)&:lpH?;I.He^+?YXse=I<fJXA]g/r/rZ1Kq-JI!/:'TrbsG\"gk+L=hos.P/P'#u;:a_UTdl3N^"n]X@U1qt5#YFi#J-
%Y=gH.1q7dSU)SI1C<3uGY_Xos[_jNF!2sW]qEEj8KU!$&\h<>Wp&6VQ0VCPhinu9!@9EM\a'o(`l,4;8T&tiK)I4uFgc(eaR1<*q
%7,VXE)r_RhVEdC@Tpn5Mim%9N#j!P3GY4E\YX"kpE)U-K`H0R28t+MEP&JpbJ&'8&lIo8KNY6cN>&%d-3=%7?N5np?ambJI:+ft?
%%/&f,qsdusQfK]?NjmjqQlcZ3Tu'Gu7_h\`"2I*J&XVeVp^qN-oT7YSBQ%RR\:c_0$!jD&A_<1$I&W]4J9CPL.udf+B&6d%B7fZd
%pe5Isi[X&n?gE99M!jm_Rd@?CK(^b'dos9%M\#<[OdI\UeM"^X\J.\+h!;_1W)u\]T4)%iV7cYHZ.</tLGos5/0*sM(d<g6'%RC`
%]FW?7lbhV2A(Ibb^g[@di5IP2/#uA'>ln<IkDse@PQ22pN98EXQ)0ot](_*f,teH`bi/ShMFFG4-#np7U'c1i'8_QZ#<J9rYbW!?
%4!0=5<)q)[9/NtnROn+(DZ/9$G>Y=EI%Zebncp)Y3b1VE?oL:Ng<Qr<TlaUec5_>kH7Q*:J&!cN@D$`dJ*tFS)go4BZPE9#IdF@N
%$\h/_:4Ts.(PGM\?sWE:n6a^,<g&&Ar+LZMo]5nSlIj\fm)XCu6i<$"Op[*8DfF=G:l0GkE=:/4Br7'Egu%M#p"5@Whtc8;[Y0nY
%$Fr!;kO!N9S3N<[%,0h3:a0](:E#Dtn8gF4iJ>d24OoqI*Z%<`nsBEH?GDmSj'UgpT``DfBI'Ad!kgfp>4Rh9B%[qV0mFK^>^aVL
%r#:,[@6VeK(HeT>+G/sO#uB>&<BH.C*n08E%nMt@Ii(th>mPGjkmOH^q=h8e0_9HFJ,/T3\8bXU9iZ*(E;b<.kR]qarP?qQr")7&
%d"aFUiUlY)q#>_<rmk3.<ih!]Wa_)%Xt/L$nh.#%0l^c/:sph]a@b,P=\TJEVjOuSRhX'>dYiqQHII>\,Q6#^ltXjXC7M6DN_hIL
%c<]/4Vj@SH=m]Q:?"?#YrI%<2Er+2_O%5h+l:eO<>$m!Khb^Tf\/].;dsgF$7URg/q>;lM^CtP]pBZXU-egDg_WR5&Koj#i<<)BI
%]*_aHWAhYHZo=$YKXTn0!4`lDJNb2;&]%3j=*0r<ERd.2:nF^SJ[<E?5Jh=[LF?f(#5-$IVaFV"B)_6R*K7MX26^UKXVgE6c:M-D
%9G@C$4o&$mQt\H%T`kjS.QgDNYTAZ0LBC;tP%Q9@a_9g=f]q_KrIOueo6Tu0<+?<=)iC]5:U=@Q;^FP'?\uS6'ka;(6@&*qGT)W;
%g;/WH5d[g^1qJ"$r"iuUo>H.Yd3!Rto)@7ro=N&teLF0lTE!0-,%k7=TTk-s`7MFYppG@f=7^l(E#-hp$I*nA6pr/AEmLf4#n_^[
%.<a8Y5#1tVpOWq29'te94J#1T,qGe;j`u^r+iUgN\'%pj^isi`Y8&.R0#fgS!]kheLF?[:Uh3'nmMAsu\?V^[J%n>i8pG4o$lR*&
%K]^0Y[G^nUW^,Rs%M!XOX[5TN!isYU$))&F=Kmn4(GGK&6J[H`RZ#l4$egoK_7p\"etF*M),3qfN`+=H?agR5a<HF2grZ_Kf6pcf
%Oo"_5#Q2VAn19,,:$@SR4/1b]_-')CbrWkfO)a#fg4+_Fc4<GqG$Lo+VgI8JhftbB;,&[^0?o0QEuq?1p3GQj.u99YFMbZC2eT[A
%OY?X?Q!ImZ(K]Du6NEtF7+a8P"2930r"oE`]4;t^?5E*l>2X:,rJG$O&fJ+Z6?TCJH;l3[oAJa*'S2jU<gF\$%e35p$>ruA#sj5P
%\86Cl&d@*e.fMX^-a"]a5J*Nq-s.k>fA\\3(A*;3?Vd75Q@(OnTn245FYPh-mEB,Nc>)@n=8TNN6:%Q`U@+]Yqr#HEC5@[,BmP&_
%Sh;r^5+D]C9#2&\#nLl.:dK6`%o8am=s@[mZL+\Ofhn:9LUE<b/F:#ibD7!SrNU"fjGsd6\eng'<mRN.]KHmohZKZ4bg=.8YB9JX
%88G%Krb$H1e)pjX71Q";B@i5S.FE.%0eFtO&DJg?r.:]ME;IZPIL<3C(]U7U58f^l'&?#r!r:5nKeJu8\eIQc'N4['g?gtd",tEP
%$0d`C?#PgRI1l8k;,kMuc?a&g%\GIrS;d9j)4BIIjK;g`;3KHLc<99<!cFddBPNk#LZ0o9[tpcM`4(nP(k_(j`Q-WlYee8gB#FcJ
%ftYP/o88HX5:6_aWQl,rhkL`CE>>]pVJ=uHr3Q>DDsV5:\Na&$M!JA?LU6#JNA^?1gi%@38+<9cP,9Z*:nb$SDE:$@8i:uZ;$CHR
%Ea2q%ZEi!u"DlP2CKai!\B#i_3V;IXFu3!F:PI*.gAh+8\t+Yd,95Vaa(:CR8A+"_6r?MH*U_TXKm*gI8tm@gZtBR4lbCb>jWuX^
%pcR!,/HL5pQ#GS7YhrOH7"(okcq:r#-q1Zq`Bc00?6eu(Ic+MKTnT[>c\7ILdCt'[1<?TMN"g?GO@'^2%Td[dL(M,Em,"%D(@.j/
%nM96bs#Kk'08jR?An#F;/;3%'Y?o\]*V+NVSqj>+0!!BSMlLFb;ZH`24.h@RXqUqY0D[$H8.cWc^$!Z'RUJHdJ\o3$Gd5f;B,HOF
%pL]+_-@Mb![@R5Bcka(C<5g^PQR8<UU+kD$V3cA"X!N5PG*_+tnG>DGjZ&dtA:3(t#CIdt?@qD?qu7KSO5.`./&"^fUr*/^PGbEK
%JEKghC91X`f9so!o9Y:;9AEkX9t7\(SpTS#"b!4Y6J.u/ir)tMe9.5-:PCm/<T&`2d=;0Q:jdGdd*q9D57O(VUS]ZF=^8l[6BF!#
%4Q5?-BiC4?^:8EHMhVD(ds16$oL;G!I<F^c:L+cX6_"'^j3eK(!+u&-KUK##=,;3)V9/2qh`hX`n"]nr59C?OA9Y>d5p58r2-%LG
%L:Cso`-[0Q&Y^f`?a6/p;ZUbcJbs3=:VI6ha5!8K,NFt@1i=S)O5-0j5K$Qt"\%eCV2cbT1\J*+=>+P^-U]$jJE(_4^kq+):c/$L
%5M9$BHKQ$->K":&`,3QMeEqo+n`iI:CUHH-mgdb)JNIm>>i[)jq40^*)&<>Ti4=mJ?BRrmADO/um7;9U\[N3472+X+7ga/;]`%T\
%M<RYKAXiedcTN1D09ofDhnDER]JrZW&8f0G+(Nft@^"*-?kJL(dJTVfmO*lWDD"DkSZXHP(H4a[N?,DMFa8fF99XI=QAep5i)6t8
%FiP%jG=:sRAsm;IC\3bYA?l53OX1_9i'ZI.T\BQ5Dd7'[7=@j$]VoM@_@PVb4TOuSW[k:=h#ThHrDN#r^<>]5dP-09l"0VsqhP;j
%<.:tl0HEa\`0N1uP-Re^hPm=M1"c"7)WE*W*="0f901rt_[5?MgpM_;4<u9_:04OqCo5<8!2T]DL`W25kEG.]34.=].0oF9>cT'"
%kSBd]1o57$bb(_'8pm_kZ^k_+n+QA#bi_A""F7g[AUAAa5jK32ZI@]fmtdasAeu7]4eaOg]=s?/;c^dL,sEB0p"k<KU+e\!5PsKD
%6DI)L0.8fg=??7RC'M_Z$6TLrmlZp.MIpbSS4iGrI5IQlDIM>tO)iV-`01d\[;n+n36:XYTDu02fTt2U['NuR*fH*Ao>si"MH(2)
%1qR')$sZf`$s^3P_Q/H71qt*?F55&CI[qSJqp?E#rTO;\]hsmH=EHR$B)i3,d1l)slU*An-pPjt[X!/.OdDL2TC)O'ULu=0V;u_\
%H*k&>"`W"]#/4q;dM68(.m9Ft\r8#N)Y[`=T!78a7q4CS@N>847i-D7<PO(9JJL(1jMIg,dTbi6*;loTs.b!*RSIsE%'*@tCRS[u
%H?\+goqO0?Ok:B2o<Uup3,<1q&Ls<dTF%u"X"6'>EWR=e?)dB:C#G6B,.kHgn;I'&ZL>KCZN'<@0,aK?0\#psJ,CAf<*8>ZZAj,B
%Q%TVHIb,APKq%kba$_tAVDK>K9e,QS0Q,[bjKNT^j$prAF&dR3h'[$l85q/*GEHrFqoeDq2=[EN)u+*i?T_(&;JlIt::8utLXHhA
%pW;-oiEG,/*r,^,DN]J8Bi%5QD\0K"q\V!<'5c1ub5OH%)'dqj82$Q4C?!\4i_eT/AX/!n)-BYS;=Xgmmr+Ilq/0n8:41T#$-lT-
%9;o8?^RJtI)LC>TVL7DdDP&5Y=h!s,J'NuL?.#4h'*7Y8@Ud07rS5?1?m+M&BI_VsegmQ:Y57/KaFuCdE&3FQoRumQ3A&i@]Bo0j
%km(6_]dBL[dJ,r(]tXj:?M7JuiTa8a?Jf.UZ%Lh,pC:/;'5Sgc5gt_UT[@-]Z!/caX[]/J00YSD9`?X)-FSCR*PH`:+YGP;B1K7g
%4=55Ic$As3<n)S*gN/T!9Lr0bX*%s2&(9C8i8+R>?:Rh04LQ&;Y9NAI?G4W?T7(]<EC."So*DX2$md*ih(RATXi-P]jbTA(4pMZb
%7'jMpS*O?n5P^apF#N[]dn'(rro/G$a'GMF?.bE/*j'3nLTc;m?CZ=?4W5#6,`4pQTcjL)5(ph)05Y?Q?f&DeFUY/lj%u)hP^mAA
%p/'aW0ug+@AGnXa3S/uG%=;6j.O.)s,MJ)MQS_j;G1oT1L:;an&./Ue)0<u,W)[m:1*+g;:3a-TJ\pB`)nK0eC6OUI_m&$[)CuGZ
%;a39/;?rJF]tV!u!+:&]X1CY_LfZE2M,*'VrSQSp+]02m`$q-8<=n:br6L_!miA.Ga4=/%#8+LHda[=6^]VXN:B7Zp=u1,t7M/KY
%"RT,npZ15X2bd1K:%#j>2D[!paa/R6Q9&U<#=d]YQ=Hj0br7Nt*-KNK:sei["j^%dDJN?rh%Klt=aN0<B*?X"gGP:4Gl&PcdQ[Fr
%f7/d)o!3(')4kdE5HMCNL3Iu(,?IrP8g*YFkl"O?POah^R4/19ZnYJ1*);@eX[L,h^][CPKriOVgKhN5J]gW%S.K<BS5P9blgZfb
%>aaAFn]jqXha<,mhOU/E3gNa6)*2.dMl-X!44eKnfZ:8^j2ZHc5Sb1)''_'LBq;.aB=HSflVdlp!j"!o-sIe)M?;\8^]H^ub>@tY
%Wa3Vfc>n58FjGg.p\<.,lm\;2>$+;HA[#&e+f6!_lg7u-d5Tk7]k-=.9#PCr="b-#c.SrVKlNMk$<KYhi6&@mO\'ZS?%t#NrDgX9
%8bZ\]1)5;8YkM,9)0%<?_"[OGlA/",N9A>na<IBg^UW9[&6l47Wp,H[0n&!>@gOeKDJf3[jGt-rOp(RtrVVcH\Z8ttnci;3#kk$A
%(ro*70Vj;B;<l#ul4'D54`26OLu2kG&W-F^'>c2:Ugf<"s.^h,,@Z1#4[Ro.WH_(TQ4et@8oMu;]73(n/Bu.G%!$E6n%-6m/]a"N
%Em+GFqtME3Gb2K5s-G'4ViKcl#WdZHN+AKPY7Yc9^f<E"F(6Ym&l/Tri7b*Dg<W9!USt=P.5NHX*dkn[d(#rnM^X`E#fgR:fY\\U
%Rhu"fp#=D'=A8&gL0JJ:`QH]@)/rNeG4'R$@P@&QY/a`;#Q@6^rPNU#dE/MD=@Rot_=YR'qC44HLasIX=@3n^+kgVm,hYH&SU\'7
%7s:EJVKXV<iUF*CVb1PA\7F%jNs\AC7$d4uG!r*s'[b\hr^Zj7FDXc2KONYlakU9cf6(Obi=\beKI/A>ic%\A5U9qc0#?RqUU<q*
%]ZVu]`ma)ah&.!8cD1"0**qS)4FS*\N2qhHid9c'F,(51^npA8p]Mj+#kjr,!;D31UAF](?g\>DffjJ;V7tlC91=IGZb!%9h\&RN
%Q1EAN"2e'5on7@mmAWp3AFETG8:[0*4Ed.s:jk$5W.1a(PW<V%^5o:E?OW!d(KWSL7[G/NSq(I:@oNHE)01@?"Y+J21Jjf/Bbo>I
%)%q0cGD[]@2Ag+04A=j=U5FDZV-c7Vl[JH*G9[Lo4J>-0d%R7Xh?T+r*I/QbY^O;*l=p_gTn;KZ$A.tX@4qskJ#V*?9&fX+dWA3%
%IAD/CV,PM5jkSF7Epr/rY)SX-,i=S#BJI(;,EgRSp->B5eX`ckP`;:Wom4PF&,mOaNu/XGO$.VXA&,%c,(l>T!E%j_QXn8r5@LjX
%_-):HrU'O=Hp7>`E+B3VVMK,bFaE]pCr;/Cn`dj3<mBTU&)11f5%D:q9XB8<;ht"!l,0Te3<MHci>]UW#onCL40,Vse3r(i&Km-A
%cWL+DO^Xr(GCT/_rNS?k(DKnkg.O*QF$UXVYp]]=hO97%a!%lN^hTcN#@gg=WkR35XU1>lXVGuq*&X;r:Yt&AGtQ()n2U*kp>bk+
%YoBAA!Z]\U_<1>t`KJ>hUM%Le&:8kB!fbU+#lcdo3lN-d/]_9Hn2U,NBeT;4U@;qfE$%`%=nBUTa?oDqpXEV*2<)]m\%bi;)JE&9
%o&T'^iYiCu"iRU]'d)JtOee2:!Y#^4;pakkK]=\$;6.G0'u<(E7c:&GFR":kD@4NnPVq77cYLa;Ved>M5_bfGLEkZoV7D.:I.>h`
%6e`<40qt*@Xo`r^.XfH#FPPQdQfraf^XkhmGufljL4?M:![E:oPrr0B\F[([>tuaIlmil"JFJ2p!db5Lp;":8!&Ia+^\u+*N)/=8
%^Nu'6*)`s%7B;KP@gX[D^6eNTR1BLImG<V%:V8#A#IkFS^m@082X+6@H^&s7]Ee-."95,Xfi'.OdbJB)HL_@+\kM$N=%2&V44^W_
%^<!#G3:Sj@YlHCD*_-"=BV6&bUk$s<A<D*Xr(?_UU".8-UqqYJJP246][EPTf!>QGP./%D09Uk;2/./gOS%n[+<I(!PDXr\]]ja"
%&7#U2c\"U.nKolN=Q0g*@8W1=f!C2`:`m2q9Sf#RA)+qKShPsC2p4anAkdZ01f%sF>n/oKpfa\2FckpF\%^+/)bjNQD4AgCB&)n%
%UA`R3/aR;EW]DY,B'P,-\k]o?8DlVbcYUT5"5>"oj+OPH/+BU&>HiRp^>cB-I0`N)O[m&7iVYJILt?ZC:>$f(C#R5\mNUUJi\%="
%57X$uFejOD=7M->*_FtKd&$L0idZ>*qMOKYk&V?^&`\3C53?t'QA)o,pO+#QI5W9l$+YqWE_1Q!TkR[L<npm,6[jL$8Dt*;9!T)E
%6Q\F(7E7@hi\ti^^5;;jTo-8'qqPLfF%9cVnTgRip#SNL;08ks3/BU"]I@n!2*O$BQo[/>C^:-]clpInS\T="=5Z-S@J@D%l,aP@
%kdf4`dD)1FP8UlI5$X_[o*IY)Om/CDrFFoe>p=US!uEVnTj?Y4-14F^W`k=-57e4o9k!p/74"%9h^B4"rl-(J;B,pV&iosXqi@AW
%GPBAMgp"h8iSp0lpmc0#V_/])'!?SgKCKS!ojs#jl>SZk'=11t1<LR,nb$0fXF%c41i!$g<r"+^Po"pnhnP,gf';`n;ahiZ[/Xp^
%4@I'bI1L(f3Sd\8QPIabH16F7Td]>1o6rHh,r54IflCBp^0r]ldf?rAOpSd,+/3O6lI*hNo^,dBnCbIG%/Yo.V42JR$3?0i=ig`^
%]kY3:T3>MnHmBH^-J7!-jfG)nTa?K77CQ2]BaS.`fV#UIbSOn,-;T*FKLM;,&_?R`GdYJVKL5shHLB'`s33UEi@k7Z#8G.qb*r]9
%%RMi2IkE+]^';X<``n"_K$'s2U[\-MMMW9ZeKHU8O?dD2PgbS7G2gf,I^SW7UEi^bP!^_BHo)PS<Br@=TGWl%1'F#r\4^X?[UZ"0
%idM%Qm<bF2)FRrIL=PpMd*+R8&b7dOX^,s<9b/g2(*pU/m"*)pdpRP\mjI-"d=0_lMGMm0(s`Vq*%0NlY:I^H.[oSKqt202+n7q4
%WoO7ocfUa>QB&T0Ue4XBn?/t+LNj-lAPEWJ3k_/6o\Mh!%*P)>=r\=XY[PNln0X,$iSt1s`sY!Tq"es+AT=Z&\-"alHTT-n-hA(c
%N'&lD<k`h_=[&f+o!^D@h7P.cF?Y0jaDfabLE!f9r*<14Z&Rp)#@*Nr=<46tq90-NIcp!3X`<@F>&.:E!_4,cLbgP%A-3Vs@^G(K
%3'pK_)gghY,q^LdYbCS!LY9^=K(C&PUWLRFePHZp3/:T$&N\q]*h&D4#J?=fVmiO*"k_L.`VeX$-Rh$%[GMBb/]C9]6Goga5bZt_
%-*[\W*9i"8/meErP4=9`K2^uL!$BWY+YLeK`Yc+/4HII8GYNBPg2b-@.%t>&QceJnL^H8]o[usgV:jc@Ceo+'*L8V$nRfJE]a/;B
%Xih(WTba7GQg,HEHV&d!Jhn[)=sZ&r>?^$9]W6F<<1gQO&aL#.2=BM@GhEga*$n/mTEmpF%)Ya(%F>>Mf-V>=mTYYA_J!1P2M6&A
%)Wnb4-'2l.DPlm0H0Vp3BeKS&f,TXn\"0?n<bMT7G.e@K#K_peIbIt<J9N^R;/!&2?8/UUm5JA(,,sOT*Ns"R<MRH+?_nCu^!I;4
%p!!=PV['?%o/ZWeRQeMW8NEUo1A9nSnp@IK*J4.k0=cQ9[ic\k3:f/>N7T@=1u`/]YP3^;?DZHZd[L5p%c=ohJ7SBD5ikrLGS@BI
%#]7:H)@hG4V<7k/s3V8fpsdRe=Y=@[AB%>hVj?'go*9`hBWQ72HH%!B;d1,E\I&mS21t\7NXUf9Q8c=G1P_]5jt>O7inN\;=VB^E
%B.WAYipUk0<W$u]hSZ72B?#aO;n'b`Dg-(iUlemcfn0OJm8Od)<,<a%5'lfP&n"c\Npn$6s(Yk161>6p%2V()29(l^/QLe(V\ih7
%L$V"m;8#`6Au6_3[Q]*@Is-[ej`F.CaE7o%>*WPZ3$h[iHg=$'nKTs/$j2B'BD[9[:YRO=p(uaon*@J](cX(<^Fq495:#Ak%3Ld6
%q^64mp'^mTL]+'oA_@n/ctnRhO3,neot\,tK)"-09"82I5X/-dLp0W4`5bC\d-<7tO6sgh%Du&WYO8ouTIYb-2`[Cc&HI84Pfkc?
%TEOGhrnE#%*l65oJhTRgV&#d:QNY-u_ZHI.`Ik\Xal!&9%qBEu%dguP&"%n?oK2NeB`Oc*gE)ls%)[EW*ajLe5TsI_U"c/l%h<0O
%Ogo5&LtA1#QSSIFi?#8q\Ek\BiPkRtm@@2![HerleqEXJ<Mkq9"37Xr/\!&>)8\lF8k<s`3Fpqk&M`t?mpXlZL]nuDH?#Jur)X\p
%o]s8a,KOa%:t3aqbf"9)7Rj:j7!m[NF9";>cC'XA6dt-=HJ+VE%k,L0i?*UZ<W4Vj^RO_$B"2ZHI7&I<<FaA7p*j)r&ObaFgVFcu
%0aEE>dNo1Xj8ItpOE[pSI@(%hh\t2r8T')TKtLWiST08:Rq;a]-NYne>o"dB2:YFNq!)rfM\/0tmGnHq]]T'Xp`,SUoX0sVq#>^g
%rdZVr`_@h:IT6XEI(rdpYOL[CRA0`9qGjs"$bH!%8HC>_Ar3^9M\$!aW<gAJGFAHZI&R&0NB0*Ld3``IoT)D[K,=*XgS-cHBjLht
%9AAr]^YR!Ur+uaY]&Y,CE`]o6dnT&tP\Q^tR`;PlatM:r"n+!I`JpU^+*_UNFN8CecZ6H>FbiJ3lFJlFR29/&7FI6AkA@$Zf2da.
%$Q!ZV"XiJWN`m2f*Joc'Nb/bX0"u>`hIOn[NWS"hXGX#*56;7U$ueCG7=F]iqmTR@,(q2_&ZRtj-WB(QDRrqLI1F%hN0.8M46nsr
%'&V?+\i]^o\fsbnpM^=r\<m@hMdEUWcW`G)58V6d+0C*p!!)XYS\?GHGIprOjmAYDbjmY;.ZQTO#sGp5;,tg7/J8$#kN-LR6pb/1
%#^cWt>YMB&ZjNS>Z8sCf9To=K2tE\H+=7it;jXA`I.&Umn%u\/B*/t?!LoP\I?8Sc(7TG(XRMY^pV([ciDo_dke)9P$!5(RpBpr+
%BEfiOAJ.p_`[>_tfWH+2?PCn0(/L%-3>bTO;:4=^)R8];^(e*M`1CgZ#^fr/Tb;YRJ2SYQJ#Us>m[;"+#&1=bcC.HM^!/0_Jh=Q1
%:^HXB0AUX1c:T4N\sDbgLtn#j%j,\!8dQ)rOq)#!QNDAIkJYu-WoL,.iE,mt/C_3uX:GVZ`$"*f(LL7i1(RL!59M90X$C^/)n`ZK
%eR(WJAB,DdIpBhmOtdXaRe]@:F4MDX<PSQpSu@j2KMMmjYHTt^QT2Lun)p_3jC668Lc[i"Q]!_Y1+.j/R;P[5B8rr;Z7d9-`@/uN
%20=!;kc6f5.6JR(E1,c:Tk[/Hk["M90E5_D1W4QA`I(!;VSO,>N+uA'bQAO9fA81VaY)!m7<50/akQferGbo$&W\d_'=SL;7BTC^
%esN>e4eAE19GE-Ub.=gh!UV-X;dV4@h?#Y7B1mV&*gTd!mE3&E5.Gr1#Le['cWiiFZ&>'qf/7<DkXIp%prerJHs6I3NYX:+\B2_.
%b?Fm>eK`)s"s&a^E1T06rQ24F/6j>=>EikbU@7It?gClMM+`G_B?B,8i`h^[+U[HrT0M'(UT$Jt:=0>ilbgO1SoI9c,\0%kCb[P^
%Klm[&4<U.2+q=Xuh]8.aJPT!lP8bPb(Lg)iE-$0k7lT3hP[>igN8d\SWhP7SU.aq9fs[\c(q9oJW48WZ%6C:bK=HpuKL[@U<tjbd
%^/h)@l<kE6T>.t$4[kf`Rs*,p#54:\NYcnR%.NFNmJ;EK7b`O%c8P3;DU6W\e'M3LQhNX,p.frOlrnkrIrr^o7C^*&[$c<+XnbHN
%QAA9\2>"Pq7di5'E2]FVB(,ns_Q.q9]1[JjE9RG^Nt8\2#=N5cW*0IaomiWBN<eE3[?(=c[^HRq"B-[U9(krl+agCq'49_15ebn?
%R(u$>V"oRKVhg.U#OUt;Q3.bF$fWeIr#2LR_lV>ICQ^&6K888_O92qU=i@_\+C)(%,at.[T14'sK`>jO*t0?=I*AKV`KhUY<"08K
%H7VU9:.)K85LdJm0PU[(05_[ar^7ud1f)4Q>k]!=CK(U$*u5g]mnn3M&OkcglM6"cnf:<)rm'rdRr)!!)%"551C5h]FFSJ6_f*u=
%DW4sm&1E02)*d#kX&FPlk_j\P<?MX+,Y5(8^;d',?XKS3(UGOqO;'4.cL><$)(,>,"Wi&,!ku,)-cPdj.kAh:#WII*^KUAa.lmLl
%daF[J:rTn`XOB,tm*(k[#;-f%iTVl],N7O>kKek!e1h'#FDW%fZLtoE\CtTkM[iOU;[i\6M#Sr-gf#J^\E[861GB1Oc.!MQ*V'`d
%g\N#*ECUs(2br'js4&qk.!'6#r_==Z"^W0OcT2uWJ?/X<\7X`4an'M<[s7&PYg923X>:sq`HUpEI[#45/L;`p4#KH3S>)1TS+3OG
%r.P1CXpa[LYOt/&pt:Eh:?O7/2qAj[jJn+^$Q'71)7KofTI)Q6!?MQETI9jV"i'iVo\3bVq9hdR#DO?IECi0>FsQqj*TlKtE5B93
%512+0GCer4W'LN5<?)M79uU[e`u-dq^VEk;(O1esDe7=S#5RFlEOjPlmAi>:l!QQl)e8Isn[Y8:8E*A9feE)on^T,,!@FB$$.7&B
%qd8liii@JlqRP$\(#,l)4GnX]:PQLj&F5h.!tq6s*!ALKhpNq;!U?&GnL\SX=;pUTTCaG_`Z7n]DO4V`m%')dM;XI7.Pq??ckL^m
%c)@i)V<0cF/?Ld[c'\aLRhXs,^7*N,q'^;c1T.Q.<@"Fr:5Ss\HHcj>nF<7$TBd3Idq:TqAD(l^C'6^H8\&/e&N6CH+HgBn$WF7n
%>m&40Y#5ZF-9`N5H,e[NFQ*Ym664?fd#D";IF[C^%N5[milW=-PQ#nC]#:`R:;^6kn\ZRe<7e9A5iAYtYPhq0o'ltCW,h4^g2h:b
%h=k).nJh8oT4^u:#Hc1!IYOI$>iN'q&KJR:M`QS>Ge,.@\.5'`2.ARM;cfJ!)c"oa?_^_Hpg#\k-<H',\-o@rgN\tp*mBK[V[Q&#
%oW/Zmqo67=.^;96I%Bh^>4YbLq"easK*LF!-6"sM8#m[76'mRZW[Yj$Vd-3&\-<LVFs7DJNHGg*#Ms<W1F8Rhi7R:GIu'orn^<&_
%SLb,AFtr:Z=?H!q0>6h4[hFT+9ZO9r+b!H*Dli=bCB!mI4VDiTe+SfU4,bVFcR"iI]YEU$OQgE;f1TH.<Ht&ujXa@UCX#uG(-m9$
%>G\7g/bl)sK21H=BE5N7*ILnskP@^Ko;=<bC/.SCih,cfhi)1_kCS9RWjilP$A.4A)<^TpdtI%nGs<05MP[j3Bd(%aYOLLVogHQE
%$h#5]aK9(`j/Db:^(+9^%C#9m>RdPl$J+o$$a[Nu67g`s_2.jIGCsu7Z';4dFG+e.Uf$m.(Y2TfJicN8j*d'8d,R?U1>*eZ3Y'q3
%0AQ?R2$f$B/)P321n#3,>S.@NMHG(uN#Ob-YN$Y01p>Vh&Z@)`U>Fb;E,WF82Or5<'(Ag>Y>,!R9Hlte4p4o%5&?[g`[S$A&>>K^
%Ze.<U6/99giao_/WgdSE$.<29"JW)VUH*IqUUI;SA3o2Zo0I$9R&&=g3Ug!edLV.7c:rEZ`;d;h58XQR-14JY2Oq$=*)_uJeenB;
%#g6@#A1iUULo#$&A?tq#X*HoI+*pKjG`%s[aV-:i'!"-5Ql#OhH)J'r2VVB@=U2*%YPtm,Ho,^D3ALA-^(Rrj<(KJ`D67L:[[O^i
%%E*Jbm3'kkLJ7@-n8G^V%e8M'V[rR'1[ZXg'^M6/XWi$1GTod_I.O_?T+$*+M`0<;N9q<@%DnZ:B7R2Zo?eu%Qfd65&S=7R[c[7'
%>#k+N;!_a$r9!k8ZVHj=pmV'0]Ut.pN>4^XE>(83R%l8!91$cm/%BQ9dZAT-/h3:GNPCqVPEAk,G77H,DUl4H2+sp1+^9#h@8AsN
%@3o@^RB[4(;u=KPL>N8G:B)D?5lFCk?$;bmT5TAT/TK*h$IA<(o)i2SJqcDfc+"Gl^5[>D[=Iuh\Kp1J]cUc*%QQ>%_Pq_%nMM"H
%$-pYiMI0=Ki!X%]-_p8NM?Xa_H#6g>RTfsmSF<c7j)B(K`$FlW8A]e_qHO2J\eW-li+4?0#CMksAnPuMJLO(P2%USCT"'/B&IDHS
%0URVDQo$=6=Xf6<8<KQ4l0&.l9B[r6+/Xl+O/s(;L1]Bc'^p\^3Ho<JjUeW7]mgM#qSlog;\\abEV3+40hJV<AFrOM+aq.DIMGH5
%;+[l>(NDc-`G]Zu<J(#9bHmTt@IXI%+7mI(AAq\Nh+;G$jdgN0Sch7='hn%dNhV=)]""#8rd0Sg4tM2)n<9*.0YG7J8T5MANOT@u
%`>$WC/oCe_,X,S.R1bX"f(8^.?Xtcfm;Dgr_P`.e(ie`X5'iuQ?3hH=>t@A+<ih(\:m5lVJhI5GnIGn^6)AQnpc^lLb@l9i_o4:;
%d/G!WKXLcW9=tsGajZsVPQO+p#rLOJd(dtL>'ALXJ+YmP;Q%RJmLt\*lES;%E$34b^.FfKGa0p3Er9sElRZh9o+,pBis.1t2WRWp
%cl:;ro/1K@ej'&lY-+@D9%<ToLp_Aq.J?GRS#`k^i3iGG@AC`#ZYbnR+HHajiP)@0J!PR<%do4+!g_mPE>Y=KPq*>PVel!_X7N-=
%m13HflDR,j>O<u-fNR$ZYLn:gJ$#Ul)!9goiH2\Sl[_*GO]:ItR:UbjK]dO6IESr7iGL1R/n@(M;742>%#!!VE]Y$+0B:%+pfD[p
%;f)AoPbR6p$m,gi]RpT:K_M?C#'%Br>T*3FSf`!3VEajZk5Ai[XkGUGp2nD"gno%CE0nTFDg+:01mT575Zo,iD2k\[&b/E"P?m=X
%)SN_HR/ej0E8iXc`g=)udt'[4<]H-q6n`p]bsH-T3n$*uRUNaI'CUfm+J/)/nXZ0X#BJLBchd1tqKEc3/bt5'^H:C'F0k%=f9R3f
%D"F+*^l)YiQNr4^0aEH"gl@Q"`#[qahJOD!SSZ!<Ml]hD"BA@S%e*>&,C)<%E=cl`=T]c=a.WAk'0Ji/kZP;Go#TqWfdu2Vgl)a&
%TnPiC=Q`[:q%$?]KNu-gXi,/E,VZaPT*DK2S`<%-rP&%=rrIuMk+P&k@6)B^k85l?q"I,?^ZBZ:LA2BPR*PGQ.:)?4&>6dni+Wd!
%@n.j'n,HmFEp+>XME@A\3ug:\pl93=S%VBub%h8YF[$`EUL?U/@R6<`k&^2_dd*>KhlH%1i3P6S-DDlp%SaaNb8luE?.kuo7B9d7
%[@`<E\hg&Ij2-L%@a\_WFm(2XrQ_i%HnW7EiZ,nF@QEt_O,dI7[Smli,b.eBOadr$!n:$0J9r0)*uVAI->)0`X&!@+T6=,_E&ss,
%r61a$$GNjaN2X1l:+Is#+tbqC_OddJmPe2QI%L>sJ%R>I`rce#XgrSXpg^NPEW?QYKtiJJ]&1&sjTEcWaJ&bqe,#hb58^`%`=O1>
%,*(1W[5m5=j=0E"&%Y]UpNVqEM\?u&KKE,l]3)8</AGHZ270p<=4i>5'Qa];D\NYjfT&=.!;IHnR1_a#!!8q^HEP*`kq(H;:/h!B
%FUcgAW9-,FcPUqRd1XN18^j&@'(igXH]6TTFY+4bF1qAKNhk!9W6r>Q5!O!4OT6f"L:2N<6&5-mIH`q-Xd1FGOVgn0n,cZ\(@\;d
%0eV]Sg0b4CQfO7s93!+;3p+t"8R@e$=Ntlk;X_9.L]e!@H9Dedqc>#e9*t*_5;.h8q)qauMS$JVl?d!/.\2+JNan-:0ns-`i*gmk
%i)Sb?-p##MjtJ>(Un^IX#0Oln/7U*44T/!i-;5$ITDdr00;<:h6C8!H;_9<Ln85T+"2E5IOs7po$XCn4YE58._ZP.n(""dT>_U8g
%erOl,2u(b7F-`bH"fq:GV1GB%TeFn<1U!QoTrE-5[(qp8lN0oH<ITqn[<t`pS@=;&.tl$uX;cABb0S=A+Ci>>'=c1N@DP!Pm3s=E
%<T?u2qeY/N#('Ek`:hXUq4gBq-8&M,iR\7)?(it%S3IraGNcr\TYRs[J9WBDVKcu\EtMcnd=(Z-?,[sGr7Pl8d]0>rfi'khB"lT<
%mcB5M!9+eSFEH5/`p148#Y!k1J7U\sWG/OpM$Jo!!ADN7?MKS1jCf`'4'[_nAaUm-2+?,%4+HYQ07N4YI#n&5+T8.3=3(6q=pi'\
%5+[[L>Hs>29!(>u)F`P?2rB6jjd8a?Y2i``_sFts(JKsr!k0F,e0p>r`m^.q7D6"]%tiJu/SJ($GL0^")HR?>G\q^dW4hKbB<!.S
%^JTq?ik7dp'DLn]:N_a(4G6?cKQ,(9,4ebr%#Fq,j/\aI%d-FXLFOoj06B=T<bZA[^T^Ur3/65"o!)c=H@!iLB8otnhoo$T%USD@
%gS"K$LnE/?JLT4.*.ih+3,)?lruOZj=,\>_Z.,D,g$+>d1X5^]ON^4dKbKeuo`t^1aq8>s%?_k0BSlj5IFcJKlZ40;;)mUT<JUc^
%=E/%7dW$ajd#]en!`_rOPaGDaaFRIP8BBFjX7aHN"@oDuH-+%5W0bFK:ISN6)k'GOO#(][g[N><&$HrN-r>V=[S_Qd)F%lsHiJ.@
%4jK-=;duAFSl7.&e8No1I(DsI\J^eT7D`??O*62!cMVKBT1j`I-Z3%:q60:5?C/muV$7)XE=Ko+k;S%g:p1XrR9hfP9DU=$3:>p#
%EO`pY`QZ@%m#:gumoB`^<[G`P\Au/o[p$(a16MeY_'&b4^/NS^&3*3c<t+)::;=0I]PT=_nrDZmDSj#Bcq^_3OhWlO4pc.Wnpkip
%Jn]a+5Oke+_b#7O]D20/^Y]m-lFZR^-H&:N<Q*6c5N&C%&I^?g?^prbVi$qoF+#EM3OPde)I3NcB_Z((@'jU&7leWH0><KGbP%.a
%TjJrD=kItFk=:g]!hfmApKS&E-eufDm+j`fn0K&2'`C$eVe[6#G(Z5C'm0F`!N,264/+hhNaK`$5XE&SjWa7?=2E1-frg$6:**5^
%Md]ph6.J)6pMFPS2&l'`X4&6TGV;(ARp<gKc+l"%ja9V$*]A\G72>nV&'*#\i0eW%Vt-\[f"'Xo@KS=6aS?bZ/u8\C8F?-fX<JNt
%;H66H404jKHb-nYUDCA,QJ@tE(pLr&G=:fRS$=*<CWBVJVKM,>]:2N8U@G:!;CgIEW;H$jX)YqW[7C0=%VBfLqNj0JrA8t`?30S9
%HlbE.?NaKk]b>co.=ri[GmWJ<r6$[V=A7k69:]:Io/U6IFU,R56YKK3-9=>"]*#_<`I7]Vr2Bs+FUQ*Nq].m9Kr$),"i].)>bPGj
%htH;)X;%f>5'19Wmc'^uPj6O<$jZZ"\BlQTM_V4YBIg.u[TB^D*-g9]i'd]VW%)M"qu+#1R((h'Qe2@qZ5%QsUYC1$_>WiArtlf<
%>[>'<e%eI7fKII-lAKF"Tm>?h"s,55l7P@ci>Sm\9Eflf-tqT*l^o;X3oVo<s6NO)Q"Q`h7$*?LR!WSV-%c)>SST_i5%&8+hKNqe
%mW;+GnuHmt(Y_G>Fs=_B&1camT/2^"-%Xt5n#1<k[a(A.:%.!ZpcJ^be2lRNAb=\6LTikBl4SKDl[SWJ*<i.CA4H,0NtA+ZUlg:^
%ViF'Vnsm3qXe``9iTHZmA)]K%#t+Gl[<!b/diFhN&FfcCR:dPp9K)g6YTNDaNf0(ofP7<O3,H1Apf)b;4WVD,IoY4boB56dCUkjR
%nBUs`E5]:!,k52sKR2q7iL4uaMmju"=[TeWX_S;"'WJ3spaFrb\93#qYePJtrVZ]o^]0@NI1=f&Me"Yt!WEi3*5K@&Y#K'LUMWUl
%NUU1E-JSqX+Y?tlEpsJ%OpQa^D9a:!nXMr_2eWT!UZeBARfkiZmsu*Q:'W,2S5o[J3YlYLjdLK'0jnOcr^#BeWt<'i_%[-aSP^Y+
%eWELE1,f7%'Q'Q6Ju;bkA*P[ngNdq58:$:KT3!^uP\5m1UN>$BJY68f,)%9QZa:c9g)jQ^j6Zu+K9uKaO8cpDRb$=d'3cMpG@0Mc
%H"A=#K1A`3cO3(F"+;+N+0(Z6;SDK+GE@IV@5c%&BmZ8C"5&qf_OFa3P78!7K9o^i?NbW-;%mo5LYP2\JQ\KS*\uHnK#\?[3BK:f
%KjS<S+7o-6e57pRjNW8AF@r(I+_-.8_$G97LdAO*/p]c4F9N$jfr4!Vgg:f%^Y4^G54]ILo/PDmVD'E-Plb79@-ko:4$?_!ndtZ5
%.qR?m.Zh-%YX5!VUEHsG<IdKI0kqbKm(%eedJMo9g@[SKQ3$8apXS<][_[QA#G+J'WSM+7[:-@f!`%co^b!)$j5mcd##0%Q`4Adn
%RddM8j,)7pMYf8O'e@^V5hk5;H_<eD5B5W,8!Og`g<P6*p`=GGd1't%9%!AukD`D&d*@.EOs`[nD$+dM@8IVaY^e%2!8:>`.D3D]
%FkY#2f5%T^DMSMYEQ*12$CGg=_`^b[KB_6$AL6)P%LN_(U!M8t)eHZ,@d?J?s1gR9>b1rSE2-X_U*sW<ZfRQbFpMBbB+dAq>aKQ\
%J?u&q0qkCk,EN6,`5YYhcK:13pY3!Q<0l_,Mb,UuRYoa/k6F/9*F1bkWf?=:Im%s:39Q5B>T/o1ht-<&obgeBgUKG@8@h2p6Z(=q
%=Fr+k82sk^OFDJXcge\VRKc%in5;-t=51K\q8NmKL;tHW8PVbl[/pd3*+&65C^i?`Cki<GB5[2kBHmO;?.8j-N:fDC'd&JFeqc"P
%+O><p/VeU?cIF`6;#K<BMPNK<pX/76s)5[4(EEbpYa"7[9naY7o7IO\p"B[nm.``icbdNnR>9+N#GKU3;+=7@5b_.'+A*Z)1T7b$
%?=PSC<7*\1;f8@o`(Z93a6>pq8Ka9!FOg^'I.[0BZT$=p4LiKk"nZJq;$C82&&;;X>k7FA*1ho$d9&_*7Vfn_S^0qB''-j.a2aM\
%TT+ELkMY?&9Jls>km"`c]5_d^_:F$p4NiQSLee[a!f]sJ>ju^dhp.BJ6]JG:AaQRo-%CrkDf`H$\jkg'CS#DBaQ7"+!mif[$/5`t
%j2^+Wbdq&`X9\,3E?Ig&"i:Ot?-G5BJK,H]@<oI!Znkbu.4H/j>m_4&<l!Rs_u]B#am8Cja0/Vo5\7,rlbDF[Zrj&TQD%KYN._,8
%)N=hQ:mT:0*^aDST9/4bg-;#=+u@<5=9i66U7c#o.1[[h'ib7fq5pDrrTp.>psE.p?^IWBNH60'No>s@GR%D@h5OLH(kTSjE9.c*
%TZk,Z@Vn`Ak`8Ro,;:_g!HD=(jR29i?P4B+T_67l+?USZXioee&Bp#d*cTr;rIFjuU\M$dYs%mR0H(9("O,*+Et_$?j9eAI3au3E
%V$G+[?]oVN/RdKVO1aH+6?m2^$CKr<(F`d6b"F0LkR6&0_18cp!8\L&?oFD_o72mMcjEFug$RtY/$[S2/"<<g+BiIc/s+@i%%F"D
%%SK5:k[^+fDrsU;T($(V_GsJ/2*!L1YV[BO87$7,6sloq5s+*pJ@>q`#rekI?7>!\R-JKua,-6F>Ks(,[f+^)I(=Pek;,I5]V6H;
%f..OpG&=5a!n$eOGq6-U'H<Hel*A_P$i4VmT*Qbf,F'&][N-VgPiSLoAI+kf]JHY`T&rO&=N8P"228.I"^LdrGf/t.+7+s:-$+I/
%$lonfZQe9T<PrgY>MA)r"!Wp>n.>3LX5@*j+KjUHlp$;PE"kU,V16deZu$dq2]W<e?BCD5^dX+!W0+gA"THe\4DX!Ldrh!b/Le,N
%Ub`rce>Qj@nM$Vo\iJ)sO8O-]/mLt@hlpF%M:-S8_G!_S)\e&_MFuBAJ3XoX84W4@(5R&*?:%ZN!Hc.WO2nm_SNQh)8l@RoY!r<X
%?`'"qN+9q(Hd5bk^jtC?na7)p[=891K/4>>rZ5GH@8YDeH>6\P52,sP)\UN"C'4srOrbD#pIJ0#&T&Siodq+S!T&!B"rmeNi9<1I
%#0fG2M]6X"jb68<7F]-[jTe3]E!n;\0``V>$hIr`a)<^`^%CjhCSa)5%cof8QA^Jq@::8t9\lGE8\ckE[22hMp'&!8XqG]#;+6^G
%Z/&:tOiipP+8&2&f:>"rN75h9l&F-O6q''[8sA4qkpb%Kj2<oGq$#\7/8dJ68q$NTm"kW7HdiB*>n(!3Jk!CC\9(d$_)!kJe--(F
%_,J8k_r:(jL,9/6Zn;OYiob]rr7dM\=6<VXXeC&)X@dFaijT'\F/=G%%oK;PKa$+,k."#h(5OZi@u#<G4>($8F_ZI$Z,%tOi8*d8
%Jq$tLM'k3^/4B5WUIN4Ua8>=3q\-f>OQf&Om&PrZ'>>-F9-bq]Y1Ni(mnbk2U`:cI:KcK]Gdm7\J$eV'DT2(Igom!,jE\5nQn\Xg
%5O#Z(7eupK[:mtQ&+$p%*Q_gg\QO*f7/]--B/5lrj2OV6`hD^S"+Qsno$31RaNfZ!oT.!WJ8Z5kn"\XP'j!jR*ch\`3ns"].td+M
%"deV@6Dm\Op,itWI]F%rMA"dP^$m+\ql+uoG7UkANd!umc4TR6\W0f;P8#i9jND)\6%&>r)*t=?l'C"-d0KH8L][M-Q;9X6:1nGC
%lA<5OXCe/KM-[25T(Mq+e@6%*c`nV,]#d&>B(&%Y[1m-'8<d!S4poVb[B6!SoIhbQVa,6snY$2V!mKg//NPrnA_J#GT.(iV+gD6D
%$dc"`bX]!GLM@ffJf2_JIkF,3)f9A94$m8q\o&teXW$n*ebr#qeHINgrQ=/81;L&V,-6AB>)2FI=_K$4kJ;ju(p6At/@85T7.YP[
%-EO$VIiW[.3,Z@NMqK:WY`tW4!+oHrXbBA^*D_b''(ZOO6+R%P5D63L5!'*`ToAHAEW`Ef>ln;hZota)q'sfXs'%f9:-nA/U39No
%<$N+?r]Z\?C"NSjN>G"e@2hmg[pX]MKZ!JkY_'8tS<K7A8GgmKSTV@jH)fhYad31iZYnUiF#??Jn4K#Ng!'Mb?g%ff7$kF(\-9fC
%nhot8iM"gZ0&/Eugi,i`'Br_%1e._1/iaVL-M%afl(SS*)sMHt"'d-Ys4-g]'0C2`A4U*j(V.NN`6e%o5piPpR.R]FE<N[/-!?[5
%*9-3$WM5Oq\1++2-C0NL;O*Q]5ZsC1&fl\l'POGWRB];7`sd4%D#,9IhW&"s=uLurnt#lKBhD!o)_GH40P9"SQDm")FVER)Wm`h.
%0_g1^TH/_iAkQQ@U9<pD)J0ZJYJdmN5H"+DE"nfcD;Yt34L-ut;+H,Z$Kb_-#?7qThVfss]ioO<4ph8Z,(I5A#:1CQX;I'dbLuu#
%+5md!b4[*C+5U\8d5Y?e7f#,sa)F>\heh\Yn.-\7Jo>p*HNRk#eBd-58.R.u/3EoA`O%Z0R\8%X$\J?.rbg@a7!`oo@(M;Q_pJ]P
%kI\Me_%mugmH&Y5)f'0i7;O_#M&jgZ15+o.J1F[#@17n]HSqmW*anj-,"B>%4YFmA\KG=mdK5Gt[L7i`]QSXr@CKX8ETuF[in.V%
%U&L^p?ITSVE)k]6E+km_7>6d9FB)MY%0p\"&0L1;.Td&Q;PfZT#K72Fr*E0lY<atFZl+:CPdsP%%0@Ug9VSNHfanj+(?Rm$[+Zgr
%7QC8Jm%F;IVtG,0&'e/m"o\BjO,6<8/5cLbEB:t_4_mRC4q$Ys7V<ncn/:nQs8S(l9<32.RP*)CW;j(`"Y/#F`'$Fk8'V^""Y(qS
%4!^8Z"_O$1V98W.cK>u7gM>&gSYG].l\dL[\AX2JhrcbApF4\#M.O<HEf0#(<j=isJ*2[V%jsnL(W'sS2uN'Ur@("2HBL_.a`CQf
%K>I(Emco=Xg&*K?#2$RSrQX!U+<B9*_MHdQn@,[/-@3aojE(YGKoAk7G:l<j+#0V.@N;uIC;ojtMsUcVDtUhQ*bl&.Vm1["`h$]!
%H4I9V5!UOG,&2'&IS<'Pr36)l\!*p%cU#RBL=aqMqe9jg[4n,>SKY'YdCdCp8SHf3E-FZVS/P9A;*dEiMWGtLr&2-F[P.V:[Z5\/
%+.E'BUWPn4HhBi(.D$Hj%h6q&hDu:69ohIlA0/X8V)-&^!SSKNW=qSMH2t2FUuHrup:&h=dNK<Q1@*sS_b:ee^g>Sj7?@Os0K9r9
%CdG3`.aJGRnu36;:f?(oH-0*)lbHXu_fgcZ(a[AC\)aMP)C+G?RUIsm<&d_)-#m!jTD-JB?%^G.^dT?n4>m7P*3t,G?DtsNg.\s\
%8)d3[+VpLQoAjg],SI\(&,P[bl"1D<!'/M:AtQ`&K0G$[d4hb.9`jrq`H5Tnf4G<gIN1N/fX\!Kp2a1RNQpV&#Fq1q7885m@"psG
%dfC42AC*J.:Io,jP?ibMSsFgEcrJ^EKV>*=PK\)X%2S/LDZm!a+.Lm^G[.Hte6p7+VL%p]PP&Au/lnd#K%Y)c)8fVk:D-YtLXA"`
%;UW@;<De(?BT9pRW-m!=/0]P'RKW_8,l//&N+-BbE#a8OqKTY3Yp-.CaA;5B`\0#)o-g'_r'U*7WMsAlc8l-G[)#U(mNh/hBpJc?
%enO]3-JVK3MWFfTH0<@F,qX?.\>.Mb8l[m"]J0-1\850M]Al2.H7]6'/ht@Rb\2EC6"O0a]1PkkIUP-P?SGgRr&%[WW]?hfSP25_
%6UbYOWfi>4g;mI>!'#?AJE=<+4JN37X,DO)GZ6>p$.FKo$gLiM(3I%MN!f=e3=?5l=UUS7[?P6(;Sq&:M/[+V!FHXmau;Gn=Mu0R
%f"6Z:.,f8d[O)n)fCY0sb@eaU'hD+8bfdV@P.Oh(K0Hm**?-'9bI`:56LgsXShDH*f'4</;'9r;f:,TJ$qbd<m8?3c%WJ=/A'a7g
%HD^o-LBN9Jo_Z`*Cna8*DdiBbM,5:WcOK?R]ZFdd0s;`?22[93"ht<M%)ZLbl%cDm&UY0tLSU\S()/\*-9QY=JdGrM#nH[p=jK>*
%>km'!It_en'-1s-RAVC?3P*+,gONpk/XfJeOU`rH2RMnY$*Y&&hUBLa#4"k=%]5+>m#eraPj_1/(ZBr5`X)XI&j&g93*4uQ>j+BD
%Y_%0L[LdqrI%(-QHf,N;*L9?Ok2MmXL6K'>=6#pmeknBMJ_5D8CceS+`uhHIcC(C/"60O+7`0!s;/He2WM:q'3e3[YIh);iQ.L2J
%-7Apk=dFY]f)7S5SmR`,I9g&bX??I+V2EBL@LnYQ>,4@7;mR8Ant!\*)ZqpPd<>4&D='%_@\6U*P\Y&ZeI;EJ`:]>nMuWZsFas;_
%DPBf1Wn=E1eZM)0DPD4_n<l5K*f=7r[iV[@$"IVeFZk*HVBcL4gnS>AMSD$SNs[gg#Naa,"p!S->[;hoZ6#UrJ/Q-]P2[@>[Xa!4
%3/nSu]rp`(M2M8KFD#2]?tOI?)/;W=k[q;Q>e'01C.''6&_jY$fE#qFG<Q':BunZVbW5:b^muHM?GTf)6sd[4\UmHfe;\inTs=]H
%i[#!-[125H\D='N+\nS7hgfpL$\2T&G86rb`RPEM[)u\\nn.$1_rG1SUJh3Q]<srUi2-i$YERJKNV3HuGha&\,RkHX_`]un;-AM[
%`3jX^`lc'8.:n$ahMnC_DmW:>EUiIGnF.`R*SNAYo(5NK*>t7O]cm;;42!"f%.`6rCsVs)N2ZmXGu*Xr?37efO5:I*HOI%RVP)LS
%L^Wg.*\2V`Ord)5.TaXB!p5=[N#Z:3C>fhi0KUNoh.O&AARVfMT4bKcQjq\tN8:&J'8&AnhYtc/ke-Cq$(a7!f9,lE=?#E,I$li6
%IcT*b?8.a#cAa"T=khoB/=l82K@tWM8b"!?T3'ZLqXOV"*ttA+SB@JaHF:kVohMY3C1tk(Z45A>9X=n-P0O)qqZE@C8LGKenTR<N
%On-VLJc-n4rDZ/n[prFG9#@&q3il);bL$J(09($e+-m8STU1I,N2sNm0[R9ZQ4_@?][=_=;Qbo28O]78Ut`,1fn<Sg1e8OH3su-J
%rR)*5)q,E`A1)@oF?9lrYtl!@.ouuuE`0I.FNDY'l]K^>=6BFO#`]ME]JM7b\ba3n:\b05_IDJ_j$#.%H)*_0IOs:L0_i+q<b^K&
%<.3>(F+Pto"Od_]hrBl;7=uAFe\]4jWiQT3_C?p+#W4<eWiXInEEAD-_GduF\GR+JQ%mPC-o`p"3aR18IOP##c[M[?KUr='EI_Cl
%ijnOi'o;!+1OmYGf(PTtNi)"@*`J>LFC<pMH7_3p!cdETRM1pq.q<MLk8FV)1o[9HNIA/>:WC>F:%'$^JNT)L2r0]@.[CG8M/LF9
%E2`QD2gNODNCmu:\tJ@6V.(6Aff.eBD)]_!E8a\2pV49U=@"#CG9!j)gB<F/JB%R.3@%<4H-"T-][\rg=@9sn@^Iufp17-QL2=m\
%_Fhb^jlgIt`]mJHKLo';ID`)+6P]Rpaf0C7k$!sJ:-WBEq1)-q?8D_[^"_`jj.`GX#&c-CBU8]#LEh!L.rqL/_<(F\<[s%NQ6$rd
%Ye;clgbDe^dN:P.Q--mG(%m^hQ;&"gHUCaMoVm^VF9>#h*&B7br&CE2;i5:A(&BE6fc=[(q\9*9G02#b3FAs7ic3q[!s&XfMk#=^
%1WcP=4;e8Q\/g%f)!r-LY`++/N(]lu(_OBm:`Dgh=t\%!/Z>o8rYY?>+#AD)g!YHuFZX:$4R"om]1:@ZTE:N.K1RTf"Y+JK49;$N
%b(Zaa<Z+]$P9WG.7]Z+P4HYCV(2Z)$)pc%_kilj85AUqW2a6=/$fcLgF;rc>10HpTZ>KPon)@9\Db\,)QN]mrdp$Y(UApB&?$GE_
%>0ee:dn[l8Mn3s+XjVs7,aReo8F>iY1uQ7/,$MXIh=Bf_nB:Y;M;Y?+RSH'0j"`h+[%_C<:33,.DEB`3op.DN+C$c;[e%J9Z/<a%
%!b*W8b'7BS:W&;\E^1b\i+B!o\.?dA2Mq\b9SoYCp>Eo:=pCK6,&EXZGbSJF17tg]Z7LY'VL9!^aa7P8=q:E%)!-%\hp2-MXu8fu
%j@`(q`isT(ZfrX[oLt'ab:q>TNT2Y$'Vb/B&r,<-f^A7tCG^^KC/$C4hi7Y+Z1=EkY@.[aKfmiC)"W_.Ehm(6mSdRjdd+$TP3#q%
%Hm5e!B("#@WOaS"k1)m<:jCX-LfG+aMF41R<+t=Y,k3#q]:`EkC7s]b7l%mADY9Fnk9B$AEHM>1+s:,PrY(6`k=;!.VRUL%V&H&i
%odB_k?k9\`%c2J?1pe<>Ue/gHf*D*`l(@q>puBdUC/R;"\A\@QBIb]qNGI$ucH*"%T)6Bq8IT9kUcG)\lsVQ[f3d_H59IT9:j*'D
%+%C;f$\mr(oF"7IpS]sc*EYsNIr75:A,JI^J[l:ULX&2r'W\)>m2:fnEF,-fE)460k*"dr'4[(h'hHo?@Sgepk8XCYpfIBTR8";[
%hh&G%U^HtKRb<@jE;WnEl]@)\p.RA[VhiQBfta'r5/O5XLWBUS*GN'S5T4.Od<<H!$Zkke/RH<sc)W"t[90V]3;NKTLI@i=S^5q`
%C-7;dJ"#=RTD5C,.r5soCJAG>#jC`[Ic@Cchse+[^Ch1,7Fk<NDj9Qh58\@]b#sU!J="2($f<kK8C8QY_e?YZ)*^U9+^nLu3l]/T
%lhHh^bF7_pdoZo)5\?6_@ef(5i<RW7BbN"Q4ibeO!RFpZ0=3bpb*G=o'YWAq"+9*gQJeZH'c:-ZL=_6elfWQV(VrsAg+s<<Wj@+4
%S`Y\$S+R7U=;F&gcps7[f_X*6%"3W_o>6IL-%Ck!O^-^_MJ6WPZ?X0%ZAQhA-4@Ul78pOIE-_I@A>>_$n(;:]<Y5Y<1)^6F(S6?d
%8M26h:S6S=*ou:o'?$-(oF&%*29B6/AZ?uM>@^)o\bo"ba6SA^[2oLlr3<J_0NAO+T:UKUl9""NLj$,r.q,8U\ZGs*kA's'O&i_u
%4u6Q<n)_7+nDW)-!]eU>%$2g]efqBR(RDBD]3r-s3?gA\W`Ho25NM2"j(<a/01L(`==8g.r6Vq8*5f%RUJZr6@F0u%I/3;8)2?bc
%#9&YDV6CHkL)"GFis<a<!$&j2i5'LdQ?btOllb#clfs.5Abkr)o7LFnMIJHr%Q)Q@iK8>Sn//F*6e9a"lY+F',:Bf6f`hh9`q00u
%ho<BsEVuu38sWQ#6.%G)TjsUo_$Yl>6bJS)ia7H9;o2[bO@u_V,Y0+9@3&FQaY93T6ZCd7SAo`NZe.5$[*nF3/6sO)EJ%CXS9BA-
%""A>K.!iK;%6j9I89%PoP_5]O8P0#pi_Os1^o>8]QLMVhX.Nnbl\$Gdc'TXPfMD')(hu,`'\VT20_&+*-NCPS6/g*>7Od9I1A#GG
%3u8]`[.IK;Xm21nkiWaaFU!SbA`uS5B,=8/>i8,@KgtH7:'AOn@ED.&Mh6/\9^H(O9Ooa/Z2P,6p"KZG8mcXc`Is!m.Wjg.d"2C6
%M4#j:i_=9CjNDTIdNO//-U(Qqa3>h0eMX>H)iL9;rJVuHJja1crD"(UK;r^>`q,`N&.^Ne"Mtdbr=X&>D=%-\dtY_%.Jgs%G&ldM
%74E#jB+rb]W+g%+Zir0ElfFa8C>T?_a4Qf6@4Xk458B[2B'Y!5_e'7WWngs^m(>&:OdT3m<u"uKq3ENCV$@KA9*@\j87P[1G\UDM
%90)_BPoFC0A,FF$a>IX._4DAHl9`JR0cV5kWCT`8Wa:j+!7O1N*2(M>'2MMpgpQX2.a`fq\0-'0)9"sYJ-s>:Y:)>g]GS]uq!j*-
%n0l28=21FH>jO@)mH09<p<U#4%DkVg;[Z4-2u7GY?b6a(9ER207!=3PlH'h`8k8`r!.K>khse+[n&LiMX5SO^HD9MoP#rScRAAmV
%G#@TK2VD7.OC)k7,ou:6coEMs7&nd8q.7mD%;50.%?Hcs#`QUaXc=@rQp]"Q_e8G='6BZ6_q8><KC)gfJ7X76P[7E!MfXa15Uqho
%'tYD96%I+,1U*Q'2K&ds9?CWB3OXu0l$bJ&2J?;'ZIb6KXVO+:W(RX[+:0jB)9oX*O4Mo*OIT!;k3I%p'!MP`"\,*Gp.RF]oZ-I+
%ZQWb?+m:)S:Kl6r+[-OT"9.Dc(RqW#qQe!7Fb99D?V$`CPf.[NREs!/Ebe`;!crC[Q#^(D2g`@3'^K%+NIJ$\.N3R#jCJCYO$qs=
%&8SN;e3\ORT"OE?p"(>^Nq=c%.A;lU&o<`)?nQp=j^%h5Jus772,/9'pfq<hP.L]8[[N?R'_GEZI$bk5XiN:].8H[g]$$-P@^ZZ:
%.SCF'$`jQ&R$?jp"k`\\JF[=)CqSh;^q,Tm+Y4FMWII*\pVB8BZfF1#%V0#t=_fWgINf%;%&##q.=,D2^,p\(]ENS&IZ0dadSu@H
%cnfsH3t%4)V9:"L5,RI:3dk#_EBK<Z`"V]S#/^EnaX@*B[ZB.QULGJ@TkRl=Y(L9Vh]u86W=W<6QgA)K:95OGq$hj;R+\-"k:*9%
%/U%@&Zn.nq)'Z@Om#sI;e6,9sJikoqhlrt-hN8;ZJR4%M')_fWRoPhi*ge9"?<&_619eu$8A?q-Ui.da_oh8q4pdP9#[8HFmp;W8
%Z2f:JqXg9g=GDcb>N1#o>jU5McskWpHW[i,]cYQ,qt/j$294a6cRma'j^(8U?4V*)WkAd(%"40C5t02HTai0NDce,t[>n^W$XTC/
%YtN9'Z/Z[V\<@sYO-kKJ)#<K7K=,J_8%=B'DD.h]!Zg^k&`"W6P&;;?_/tNgYhMNuQTPcc3"J)]hq*<M#K5tB8JKPMUd.eOr[G<&
%aT'SuNfMF84[8.H;G4V,*/q^F*b(a[^%kc894567mICLl>8[Oql^^L8*7;*sO7FgLkYbZ=NdO9H8sr^o'PJ6XCH?6?>6BnMM(hSS
%LI%M</Mo(iq=0(^B$:nhf+U1')*)I^M4;&faZB39'6A@P[;G23YSood8%5t],_)#5>&qeg#3+V\Hm@C.@$&NqA0tcG>a(dikGUqK
%5:RpDZK<FE#!(h.!3#phfV8Ye/R(kQ$nh.E0Li7bE5-VgkKl5&A\Zr(lnaFqgeaKC.Aj:ND`0Z<E&@iTa_f9@#&,D6K1J!TqJGF9
%'P+JBn-j8R>?p6n_IQn)p6mdWB&HaXVm*.u/JhHUL.thj^K9nTHKA(\E-48-&69*nSZ`rD@:Q'C?eidEiNA,LYo-9sVfTW)EiF@9
%.H\p`A?nM1V9Fa(5bn!#GOXsaqG'U":@hIVIceB6\"Rk>`8UCLMU.kE2m>C):ZTDUPY;3%G"F23O"dAO9C&Hudg85ISV(AUQ<kW/
%MJd!0_eUlS"X^S;*Mu\2[ub8L-l.8I>AB+6,MKq2cu(mMpcd)\XY7T"qq7VSgCh1/eMk7si/&kuO)UUa!E\iPEU0?qj0'=%>KM9b
%o-aCT=1l@jg$*Q0\WTs[[uEN[n)<pK@!UB?88gl>#K]o`::2Q(>#\0]gEN&KQ%9P'D2YH]!"2lHXRX)(gt.DR`pi5:ehA1@3^9MQ
%#>D?mFt?+^;GRqFI`rb..]F`i5&As;C134,SfCE/ZVC<Np-%],]a*B&=K'YFLQf!'U',l$'N"8SbNog`io;0-=_qi9LC(J//Y1KT
%htXTaJhV-N/dY`/bV(S!ZH9Vn$.?<ukkd.74RN%h7$_LH$mP_H:IZqcP(dXSY!s/K%^!)GFP9U!;GC0qhh:ft6f3e-[3_;50SZ)U
%Ffd&s7%Sfa0Wt`$::*^fb)=,mjrnilq*r+.Hk4=F:=TRRI[5KR2(Vo^'R1+PHY$FEV[fe/e!)T(-5-sS9Ld[\JTJc_CiPDG=5D&o
%i(eR2iK>K5@+lf%:c@5**_fY[9V%Sclb_Q!roL7a99(,foDi0#GT:nE4+cro.B&+n:k`KU51FBkgp7gs0_SRAHB1/E)iO=.;bNfG
%*m8b0Kh$[rG\Ke"/gc=ca3lB7qX0C/_q6ta6`q>QflU9c!ZDR5ST5jgAU"\:D\F/&2YfXJR#5XAFD^S*qI+1^'gXB<1D2M^h0qWq
%r`-H_i8s)oA]F:TenS19?TCZ@M?"8!LF7Qi42:Gs_M!UGc).X7ctKe!ViDmnS:Jdc(AaM@a!%;s)>HV/$iY/$r(QJ68Ya0,kgfQ.
%,\`Jldo9Ap/HWtA]M\!OO72*faiP0KTANH"#Cd53%goER<iQP_Ze$Nu#G"u*<l<1p42MVTD=%-m*:gmE*3AL8c`te8r\eq[$Ebj/
%n;ne^m1'VjRN6W1L:Q-_-04BM(F^.?[R<83QR?HsNEkCqATp&u0N6hu0GYJQ&]Rmq1.^BDq0Vj'b7AH2!8gHErKP(Vfnfc]"PRsN
%&W<'VW-hA(lf3D3JYV]p&q?[2Z/Y/,lbaO$nHcO0ptOF].OoiTVk_C$ek\^Fr3k>SR,^G6MZm/%D+M`9)>+Rk<m]sFIiLF<"Fl+H
%mh#B%Xj0:CJ'T??.#qfL3HV1uEDsGZ`uJopq":GEAmC9=`7NN\=6WTG=]]hdm,+3rM9\)o:\`;?a':p#>GL*BAfTRsL;0:"ILKi)
%c#kA?6d#s:Wa&B5n;sO1981Ll-!0%$O!g6RX:lVldu9/[A,E3h*HRnSmD:T9NtQ$t8t^6Emus^8DA+8s;u88c':"V?_B4NWn\Dc!
%6pnTn]-///cM\$[?Ve%$*=_TT=6DT`lJ*^1"0,YrgV?#6inR^R;@6&^]Am=;XmY;hF.KP3i\9tHNK/Y@R;ML5ej"O!gIF[5<'57Q
%kOh1C%ghnF,Zkt5_J5`#Mk@-c/)Ya'SALWAIgfTl)1S_LH(Q;D#\eHo]Hj`UVMq&D2a;nX=iC6U&V$BJVjeb0-)PE+aBNRtb*>Oi
%ieU4L6%=Pp4#_LI9NtH0#(aA!(f$UJVm1YLlBXEO^fAgSklXg[I<N^,e9@q.\+-j+o[D85-bp:"8AF'sE.3h;,<j@W<"N)&m2#]<
%fNhha/-]A4H,6HK%UH7*p'&K5[M^`8D=,3tLAje7!u6pKLHgf1.NP!#,mr#3bLD#$!'F^/ZM%tG49c\Y735JZXfM7OG)hGnn42ej
%Q@b8.!@Bi:-`CCD8S'kpiO]d<g*6hOWo^:#e1UZ9m/(#I1!%<J:/f=#fDg)]f3$#"3l3)+F.p$4IT/*.P7+dco6qN<8&_PiFT51&
%d@1*C%0\J_)"-#0"SH??r$]lboB]mMYZ5n/in*CTOaYHn($FVGG$ie$D"*snP,,_@M8#f@$)"9[^?jAE)?b0>@JIc[mDIR:.Z,mR
%(81.YVR9'nGS^a43in.A`'AQ)1H2O91W9*>>f>?N%n#NQKiI-pC%l_I)o2/qaap'H1oin2YA*gA)7&Qg(P=P%XX<?LrPII3p/*?/
%nqn?9Ri&lM4=[r2%lZ9'o0n#C-lPh`fL=k3d-ttun9fPon@,ZD<9tXDpdR)/>Q1aDg2r(j\2FqP#;,f!GF<_,0uu/[iRa:B0)TSQ
%*#8'bB2uGunP4@/HmgE:"8r")>5NkHL+9,ulCOq7:m\(i,8;%XR\l]EkFe25AYN-Ydi95c<_U+\ImWmVk)s.!fJsoEH-+q`7!X'.
%dg>h,G)lDmS(1*T]S?[ba),]D7d^+G=<p*nPfM(Q*5l1YfF:"0%=]>o/+*f?mG4eD!N2U*(`q^>0)%=7n[0[X[7geVq6^@<g2VVH
%D6I=Y-/.WBS1lq>/7PiZ^Wk&:cs%CDQ2]l%!lB*'$(4dQTl#<8'O&.*M?P)iA?Xm7JjL;I^MMhik]am<Bd9hG?oUBH'\FX'Q2h4[
%M`CoX<u9="b<jPME2\/]q"`RI>HC,X1#$esLh7:A_tA\<p"3`8E02USIZ-.p-eS4@U7MjQ2J3S+Wau?T`@;PN:gH97.-:]B[%;o?
%KAdtm+0!Q%>'784ge0H*ITgPQo;PYZWs=p!fmHb5^p9@q9A`ANgtjMQ!OAWYk9aH`p;+5=kH`OW;TTXJMX>lOAT8MS$@\!CH?kZb
%@%u@86,6]ncfPKP5*V*L8q>)O]%<T/L`Ca!gW@q=o0(0AM%BN#[\M]`mEm0i"tqW%VqGFAM"HY[HIdgrK,eDY?LYNPD#a>oG!7M9
%IS\).i?>UWe.(`da"(hJ#^b8pdo,j9phX3#kj-G,Q9o5lke;M+I=Ec[VYI]TEdt#%Wh\"n)mCoNM&nHI5q_[`N\Piim/[QG;;UfO
%U%;3f#,*.D$Ufkhp$'K/`_A5>Srq.3BPD:0E^dXb1"bR;$N=-.rF+pf;OIG*/XoTDnp1]uq9*#O[JLP)O[f7/m!2dQSm604bCXA1
%TQ5[5FdM>bKW2ncLIJV3+*EE9Q^AlJnlNZ<;1']qjaEh`H'`NNh$ru&:#"[L$aJifj,8*I&\)-:(4=cI=Xa+Br_-YN+gh!UI,J99
%$*WMZ%[NBSFl602k'4daFH4f4lgr*0T:ZDt?.2rb_A;'=J3pHT&1raa;G<0p4e<l$CTWm1rc-TfJ>;&(:BBb$\a>J2QE3FIaa#\&
%W7V]j3F.2g<./=k'O0Ja\$>D>`q\O)*4+%DZ/p?c_(i!<\mVt840^#p7er.<'Yn]Upb[/s/Z],e34KF*)80)[M._RsB(1Sj'3d$k
%[cj;b*-"B7E'.NnPm`'\fS>-ACFS2$^(A[\dP6['2>B%IDu9nlfB`)1SEAK@Ao0'Z!$hm:Ck8`=di#[3\:hi6APnWk8&,Z1FS=?!
%m$*RX_hpnSK\0"q'3o"[fh.Kopbo\?O-e5*r!u"I59KX:L1cn6,b^Gb9E&GnQ!0;ZDC!=#H"g,i6\KTpL&hb'cQXX/No*6,Vem_&
%igaSim51`l[ZkrYEd#77F)&>:A#nDVn5b'"EDD-gc]sQCZG?teI/LRbI>!M9,]d+^NSj]U8ct]jPc?oP%UCLPhhK'SW*7puROWl:
%D*G'O!e#jTK4%gsX!0In`d@'dm/6H`=<ESJb%&JVNfG6B7n$qYN3%f>[##e)Ph2e]dm,-KR*d@/[6G)cj2"$=+3)o6kI&e[ZE^,+
%q@T0.24=Sn*P3?[U.,=\nZiH>:q/\*rSt+C*9(;]L.C"@>m.bZqNK#*8T,DAg)Y0_?ks"PB[8@s/%"XR_tnVK(2I/%6?K'BNMWit
%C2kCEd'o;Q)H*Bj,NX=\;*>e1O=,1*D#oLhB_bqcT#3K,70/><(-R\S.@r#N)f:I1@c^lgOp)fj^:a)SG2O_dl#=&V_B]SL&,>5>
%Ba!h/E5j,7;c_7Oc_f7pI*T9(L4-Ymg.%A[MqJ9W^(?A"]g.qX%`mum&SQ17038U-3bW:2<#5*;/rlct_7ug,YYaNFd#WkK!LQ:+
%(bFB?Fed%h&q?`GCi1o*<@BN7BQ"](f3VjR<O1NsGtcP0]*o<a;:Wth^7>ec*+_V?ldcDO`Qlrs^T)O>\o-u6m%Dj80<1CZqC#<[
%h'Sb=Km,c>d&9>>GSfNaPhQY<YX@^(_cA7-/o$_3,YL+jC>oE#4!=nZdM&K^.e<_q,6c'G,gf-1"^H'j9JTRu*:*9[nr5Y9EtYXa
%BHg,MPqjG_>@'!DQPc+!_bjBlQFN:MEUdp$nS5htFiP>!;:K,`q"u6ULsR!X,cs0E2s(h>JlV3,&CIBYbQqkk5,S>1+cb!+q'$IY
%Z>.@T5WM\P]nP:t)FgbcM?)1J6nGs@(%C\<E4'hUVY=Lq*t@J+&h:`/`*2^8%jZn8;8m2t3RB*baeJC?:]u>a<PC/<Q%7bHp$jN!
%S\NRLl9$i5U@E@\\84tKYgP7`%ATq'4oY7lhF?</r-_6ZC?"A>Wf+`:=6,!be[$I;=>AFO$+*cfKAj=DG/,-ee7mg@DFP[E-*?-;
%n1UBs"uhq\J5rbm(aqP1\L\Yj%XDYT+Z`;kSeq@cq>,k3*NsQH0SrMMT2=C:Bs`*/,X<km&ko=/WS13b&6c#75p+;ao\6l>TIbtL
%,NYp9\Y;kJ:6tM5lINiWE(]%M@36t>,5s_P182u8qDi5\#l$fl-\Wjoob3.Beg#ro&jPgiY%Zi!j[%4G%prNUnhr$tmW\8`_rf!*
%&/DhN@64Dk05*#6rUFth+V:bVCE>Ft0Z#7'3.REmIGTa!^T>Z5cKN*.YtC&Y*d^n^j/.lH?d&9P\AVETd7qpEp"04(l;s2P^WW/\
%g6G=nqgCA(LA-Pb/L<NTcp>!G\kT)hWPB+7h"NP<if&e3#Ntq(5F=]?+lsC;I3oAXm4X%.G7J#Y;P.r)('>@BKi\'t-1[]_<`G#B
%3(9/Q$F=;6clb13!>#'T<:-MYnFLIE`Sa_$=Q)?kZWQPsg9q\rjdc\/I^`Taq'E?V:"d/^1Ko5AHM:pAX]a[H8Tcn?>Es+$M_&+h
%X-ZZ*L5@*L6EE%\.Eu=Un000rl,F):>BZ[q,lF#98l#@$>/N/t>3'9"a`_\\n.]p:JVi$<=ndG(Wbl+890e7;j0Ub^)-6,]XLfIU
%"`),(YCdg3#Z"[Kn3RQZ00t=+"r+/i7l=J@<sc5`WZ>DYYlI%F$O[j].#iub:^O<8lW/!drI0h+%)^89,sAIX('/$[RP7mAEFB2T
%7Y_.je8u=\!,j(0@[PU^J%;33qLD,eO<MOs[?LfPX(]L:29':-o9-D$W24R;"eYa'#D$HH=CDs2R)iIEB7a!*3VaZEQlr-AA^qBM
%9$T'Si^EgAEXL5MLJ6/)pMJ2;@^)HDq#kT*a7U&r4;oM)PQJHG9S8TW0^;3'p>2iih_3b8<I;mE&q4K#\6l#jA-"P/p^CX>:6Fb=
%=>&@uOEXMLQ)+]/qes7drH1-"[VH'K0&S#""m?jZfPAXPO`.d)M[LG6X@T%IF$8&G'BbtLEu&1#4SRRo!5,-B0Yh7$\7PWYK7PX]
%N/jII/uYb\f9!n>;4Q9J+r8S^pA7?:91'dOa,r%;0/Wm-2XVup"Y5'1L0Q=XC:%K.]+2,O"?2RP9n.'N2TKa!JI4/9;AJ-u=8g;0
%'I!#90+k//Rp#IVQ-d.k.8gS@rHV?e*8Eq2m?bQdMSTLn_B]uB[uNuZ=lV?6]cX#RK]:\l5L6]n:;:L''@>73"YDO8#Lb[k34#S\
%:V?\p,()@WrK&q\eJcnX?0_6>71<B+#ThR^U;?Adm2X+URnMQaU[aYsAd,V>0(q$AQi[bOc(M@YA+H)MU91E5#t:A]1nC#[CW+g$
%kLo]))4+B)570IAr)07IajT@L-'1R)'49n)<RQnW&<\"JQ@j[piq<4Z>T^1N(XXAY-rlg?j;H'D)V'MnhQTYeh$3*:goG7j]8/J<
%1\5&)bg"TM4EVl=CA*6Nnnb)O4AMQU[VR4Hf.J$sgP]pfmY>es6<M00>+^g2c'<g]q+fLBXR>#VpLq<4:LUrO#C8kbjB*b,ci.ER
%5D=',:jIi))-'uXPM7acc/a,BP(0]?i*?gL9!(>G67aJs!q#9PJ0M"F$g\7^T*f[,9>IAL383EX?_b,;XPcc2jhnWXKpMV)RCTlD
%7Xiu$$q1450'E;$5d<ZM6G90;b32+lqqO<#@m\+h;0=j9]Q]4_^@jkngX3#74Z6U>`O>/m/`:X`1q)6u#,B(f\(+(Bp570S0E<Wh
%Sug&!m0ts)T?J!fDMJ9mUD4t6QeN>1Ho07URbeh,Y362)Sj*.J'j_\9Cp(;alR4;!6?f*_6egX4kS1/EBTlsB.Q<\J7E@Xs+4nsg
%,Ck\*iQ8=]0<F>a>Z#+#@3*5Ic<h9.diA^GVPU_nSUo>/hs5:Sl00nI<1gh4RqE0#gX4:NPF;l"bc'4bBUrJf0Gm:FHn:r7"iH`C
%\,7E;%/0()rN:^>a"7R!m9LB,"#%usc#3MDYXSp'=/PCdi2'iZ(;?C1bPjNaf=-D8e/O9uf'$m;r]%_1lg[2ai^F$Vj`KuJ5)<(n
%!u=IY$#q8?r:"L]+ri'"4#%'2r7O[[5p,D&Z'>ECD"ni6JDAh<<I_2Fk<H+spC%Q?jFC!n4EcV"%6%Hd2Snu*=[:`Fh^A`!_cs?*
%CA&+(Gg:]S9j:2B]>eZ#iY*_]5JZa&7ca&Z%;-c4Z6i[&9cQgm8b1J@V**4N@)pXo_i=Kg`H?[ioA+[]."Xc<.$"C.*OKh,cVA3W
%IuMYp9H1%:^pIYYZs_X6'/!MRS'ZKDf5eX=K_i7XF<4e-A,M)S?V0JGEO##@I!Rpm`@q2U4(o'MA's@l>&M7S"iFZ;9-iR.fiVDH
%ot=#[K8di_Y0X%n?$'fO6R8^RIs#p7+jjEap%F.?GgcSQoEp)?-Pc4XC,.:++V@0[a>qX(R8]@KM@K_gX"QPhl!bpS4mCa(aIf5?
%Q#X7<K3;8,-^8g9?l4;)lO.g59EQ$!H.X+s0f,ncZi+<?+&YjGm%:%K0P0-@(duD_5?l!AKu"<!R.SoWG^,-<QS`t#/WsPoKtiV<
%UHVWN7m&s/(^j>Nh5e6O)b%,q3^lYT31nQLc/asN2X_j$fOr(d@Wr%l:k@%sYX<!=[M4<hes@s`g`&Su9u;WuK^6KJ9(tpC=:^!0
%L0-?tSY5M-l.$7R&'\b$r6rjW,2^<7rET-P(!0(0gHe^aiDrl^9KV#?DSu3X@1"W-S\mBFN30u)9/fOrkL\n%mno/<P&?n,!P5+F
%]j4bM%Wp*Dg20ub$7!<(=8!+&ESMOQ`kEB<gpgu4XF_L+J?2ra.eHrI_a<&8RCYWhg74@ZQp&o@#g[5akF*aTTq!8*2pt%90C[cM
%[e*CWH%N-9!3XV#qK1Ti73`cd\u_PRnJ@gDOVo/Z8DKQ)gui@YrO??Vi?A3=K0l%r;68/_^CjsBOK#H9j(k?E0WS"K^S"0qK-[s,
%S%pR6;EgXof%1>9Qe<dCKD'-^lt?^(RUWGn9\I/'#KF0#U0GXYjd/d-_[irqO'Z%s2d0d=>LtalHJj$6R2F:c?NT_6'Y$JI7p1tl
%FnhMp[bA@Tc%&qkLGeX^RapDf^O1s;.Msn/MA(`W^bXp\=2WVr7?XRJ7S'!Ym6`S*-p.pn$n&1kDF5QnW$6J568IIS\fA*P@H;c+
%kR$qO@+?Pl>t'`h;&.&onaYlLYT8Ug`,9QJ#'!s(,h1T7JIc8fW!taQ:Udum_@M)B92W>]'7iUSEH(lQ0\T,qq!o!:F()VN+$[g=
%&Q`IndI1I_#16=/HPpsKKlCC.$\C<W@W$q[p1&>!hrZe*^kOM\*)Br\8HbW.2?Q(Q^*f:rmHB2I%o!V&<LV/Z:mIJGPK[oc%8oGR
%;>[C[o_$UFqNP:oQc2BrphV[Tpj"lISb+7Laagj!:BOkaX%EqUh,6==UAf4C>$k"`WE<<FS;?-hn['UDB;`"gi`6aCNm]C6p/'W8
%GfS@Hc)K/j=/+10[CtO+cT8fFla+Fp!W%2)F2bCZlqDP6I3>h7C,-e\NrI7YUGn&Xh<%c0H,bQQNI?lA*,ERF$&U/o.cu(tC!\s+
%3@at$Me^I?Kj)?d!jX'^1^RDP*Nk9&,eg#Z1R[!2F.rouh7'6<1TG#t?>,B(c2[JO_<K^^DQLSG)t%!g."KbsKFdjQXqSsnadR-I
%pDWHS!5]a@$;[&Uq<iUa[bMi&s*?We@c[_,d#mpSis.g(5^0@E:kcP+:or9=#a@%n@j,K$XpatZlkWqubp>ZjTCi=V`3"29i3s[$
%AWPEJ[C]G6LsoEUA=KM!K'Ck+oi*0W!IloGY@"eZ3JY<JDQ]rS`(!@pYS^2UhXFC./I2>60WM+k]W]'<+E3P&QPCr>[cldTcd<.C
%>L=)?&s,@=gfMKb'J$XQh8ugNCK3>]=7lXa"/GV<m;R/j1*Vb1*e`-&H%o"O9Q*+j]3SC)!CYH43^'PE%l_f!P;!7pV+*XuY!"#M
%@903g5^qQBg)Y@QHlnE"o!L6hYYU(/1MVi:VtdR::7@3;#%JP\*tI[:&LTTuKF=A>6DJ#_7<Gdtae6d(5m;QEKsoe)LIL%X\\`Y]
%n=HjgZ7]YUg#$b*Z$^PPM)T/t?$UA1Plg^2h*u*jOoBa&o;"<o9_c"u.a.$Y7n#qjB&&Y6@)H==poH$if3`%G\Y"UdB_c@U*u$Z8
%mHK$"*Dlap\;P2/><$9gG7)>>21"F)has5>ad2P2d;MBbg1I<=)3s%;pkj:+dF&]t*&5q((4`+i&CP(gcK69-O.0:4hR\1R4%G"r
%2`mYie_UK9bmo#c!'cM\[efuc`,b?p]7\E?1^cpF@:;0aT4@bsfPt^gi%RkJ`j7'[P4_:]IGAs'Z^91s^]l0([sQerOjO9[T;\AL
%kEr3NM19TN"jsdr/e"W!^mW%'86*[KOldG2W,:bUlth'4<VUWK+*4)UG`!e)oQm@g,-$ailqKAYdesE'7b6#o:eIH/W;O*__U]rg
%X$=YMns3b%@P`k]mn?.U3dEurWOR+fGY[@C$_%Jf0oa=CWf8B#p$.7G%@r-G8R"1;K*R8LQ+YWYD(N7WUQK'Op0?hdT'GW?LImpS
%3BX2L5Pd3[/hf+Ti`r.rd3"\mTm[OWPFJ3aW<s:i0fNcdS-3)]<h:AFFt`eYN:,_$7%Fk-WR1O:gUC2YbJSF_[UUH'p#KAo7gdiB
%A]n<kGRW5%m'WS`*BjqNf2[8T$s-";,d-j,C2r4,[ffLo<nG"\1gc00'Q8JmIXW.I+WPWb"c_CQ^ojHTkKR(mk&!cT]]EDZ(:@[o
%%JrnNI1:pt,Mo<h^BgHq'[/=Y#/T`7,k\=<[Z7$8_NeIUh8"LLbpj_U!7sX,!cF_X^b0KL(cd66c,(j?qRsW%8*"jCRra0G08V>_
%LEPrg5=!QU$1l^@GY2\rAXk>+dJ7UrEBdH'/fBu%PH"0:^j41tj-F=6fO)\unSNTh,lB^^\4o_d(lL>]Y,*<tM;/S$0e<2VZk!KS
%5J'Nsk,L<gDHNUsR6YQJkqV>$Z'@`!d$Y?H6"V)eT5g.^T>pS%+&F`B];nY#%@1kHgX3kQ^WEJW_Ws3_\4g*8E00p4_g@Y-r,(d?
%Q%%HA&S1ReY483XG$$gh*o@M,[&_[#ii;b:1E!Ql2_8<`4JO8NqOA+]^Wg.'YPoE@iR$$L[QVS)=nMkVr_l&-3kpI,;8j:o,]h*#
%kua2S\8Ui!+/Ghg3NP=KU%QBq&7Xs@JG.qZp\HW<QQ9'Uf2d(_*cZpcr_1jiFJl1)Aq7A5R8ENYjGkD;1Mn--Ur<4QA0:B9<d<8V
%BUF(\gibmI5atp#KXVUl@'ekXjJ,7B8"Z.ds']FYOqZ2u%_^eU]adV'PgiV[rgCo_RoSa\i[B'km.aT683alDm,c-h?a20?D!NS@
%H-9>F2t%HA7q+,;TsPs0olV,1P_#R?B[qo&O4ici`n"#?)c3qo;'Mo0<X">#2^pK''L2mtWi7/b$jp%YF7^?%*lhkaJ<_'G,3<jp
%\em6:(uDt,C34,2$^nEb%huL=9I7.=$&m.q5@JZ!S8HM;M75``/*UODP`g<PE44.\^J&NDd%8kE7b#S&pnt-<7Y^k=$77+t'<l79
%63O\J(YK=bGR\eHnQ^/jfUSc/WS'gKU+C'me\&[1LWWiZi0^$h_SR)I%-Zt.W,.^Vb?N6W5%=7)m:J9`<IPh2]_QL)4cgr8mVGXm
%&_E*+;cn-b&@fAKAoOC-85P&Q1k`=&C!%^(='@jgHZdDlm7T_$78kK>P[Kb[JI[t*-cn_:>>.eQ_<*]iXr_-M%E2N$kD0M0aX/:0
%LX/CpFb_Q^j\sh!EZPGID^_h9(+2'op*8`rG;:MHqGjpNVc`lJ<p;I//(;OKE,'O5b;JYuZ0cXj'AOhH&_gI?4Db7=,:(G617BcV
%88J(2:6H1T@:.e.7toqO3WWE()oVkZ(!\+b,gi12,W5/SJhpao#\N[E4<p18Rm-DO>"WW\jtIF0Wb.t@B+a5WJ0BH'7*;B\KJ$0L
%f'\BDUNn!g"j>I0N_,%UBe"8,bob3(V%'@J<DGdbIb3(8@TCa\8Wai;$%C]IN\TA%+ZbB!.>BFh:n<*S+2Nu\/PFI6cKSrpB8*cS
%\QmCQQ[_9Dk1)f_i41nu\W^QLCr?<q-s7Vek]L'(9Cm/L8@])[-U&aL@S/+b#s`aR<+)HLP&$^b9:,g\KJj><(.a42=@as`5C=XF
%9h(,;Mc99s6LZX_[tOO9%cA\/UQEpIKqf@&?OoTIZl9uacq[Nt'3DG6p*!ZV,9j@L?0r*-P\^&O^[^Qi5/G:#qks&:0-YnB.gU8@
%TMeB+dKPQV3\;8%ntG-.T36T*F-TOM5$/oHeH(I!'"2tOf\$-kW#"5PIuQ0R4)CK967`sI_\.`:MBNJ:F!YGY["p"5;mj*PB"%HG
%UTq_nKVjq9o]b!!H>9Q=n9s'50ML!i@"+I;CT`'SBUEs&K@.qGhk@kHY58HJ0A&KoL9JduSXKcAYIGYJG1$,"IX8':"<c3o:Vgks
%Pundf44r%ZA8:ZqIZEb^_P(=17mnO1HahurV=tomibP?si&[$i%GkbBUj=l@h.IXl#VK/-\0Fh`KT6fY,kS]H'7u^?G\>Y<\QM7Z
%j>Mkd8a#F&l$e=9U!QJJ&!&C"ld8+Eh<6n.kO_aKTNk(3rDC3S_*6mGqIA0]<;j=OIcj5"W/>_@3-b-+Uj%el2R"m:,IKZsSr'Kb
%_>ZEm%b@o1jL[q0W&>b=K(Q%r1PS&)=$CS,Yl#cTRM_]3T=)t0!rj86lgjnS-te9j-jF/7CF*>^&k?ES;<0'%/aR?'WSuEmLc+h;
%kdOuC]Z/1jmac303/7'PPVBXFRIl%cs8Ifp06dHYKLV1Fkkt\W=<.6Igop&h+Un!8niWVr3#(f-T4N[VK2D%c`FgoD%<(,Kbr'Zo
%gQAL##1`f^Ro!1l;7mrCCkMtUG3*%)AemoEIsTg/>`<A=JJ!cE&3@PHlHstrf2MR"#bBjS#dLFHp+_CG2)4>2W4"V2V6(J5FFL,A
%6Bsk?o'NI.c%g;RlrVSuaau:m<l(DNH^3**#F7URfEnPq#0,!_kP2jugV;L$IY&*FMpV1NC'#(U7HFTPb:$tJFnNQKpYl5:eXOtb
%BEnHT[e^kPB^,2@lI+gC+O1_84q4AEgKV:\"VW;Fp1P\=CPGTtGJ3mZDrZ0#RYVe'F%PVFp:Hhk^*qp+ak(.8!IjZQJU;KJ4BlK>
%BA8U64=.j[n=`,fO2Fa$Pf9Kab6YsO'V(!LPJo=0>.fs5$1=]QZDYa]oYYt3?\D,oRlo1FQpWbs^[+S@XS?sCVh*1t)>5`pCX)TN
%B/aai@B*\,a3IOR"fHHRZV%BeHBL4i">a)l/W-:g;_m&<WZr>]I4+]Tm[*n$fKSSN=l#liLC#rp^:0=m)Vhba!c"hW>0:G$%L2>H
%$L=)%@<gL5da%m^)MEHaX=I)[B^a%Z],&ItP0_qe?OPr2Xr@'*R/^I)7q!DIkUj<p#^F0Vh!'R\C*PTp/Rgo5AGqi^0$0\Nc&DjC
%bd^+SDJNKZ)6+g9HG4g0>%@>g0;RbZ_<1^4ccst]0oC3?d^DQ'"*gd"L1YHoQos<kL6&HI#]I7\02PDF@-H[nP$I$!\O;@A$l6*h
%F*]+E;CdKB5_`Z?]F'YcID;$n[C*2F(KU/Tb=d:l#)lX9/!Nojf>gDL/*\NVYnB!I@;QfbQp!Q9r.T:B5@-%t7&p5ofB&F][5^ep
%,qO;D\nT)d$#Y(?;W1P)7jG[W@4*]6PdNZnHQIA$U1/t#-rs79Du=S&H*tH3RU.8KV3#3C=Zt:49(_>kX"t1k4'@a931>"V%I!98
%o(r?%_l`P=e'!9Jkc0bFFplA"kKsC5N?W3b9Z+jC^_:pgUO9WAUKoSI";,k[hM'ic_Ya;`Y>;IS'ou'\oK[5A^B**GLekso0kPk)
%56&-??Mf7'o18H\^K4CV\B2N):a%ADah3=SClOMDr.A?*\A6JW=N`c>n+'oNYO<)@)O/Y!!pf*7Zpn0dWPf*1V%top*a!m(Yn!DJ
%,-A6HZA$Z^lODV=$8q76KZsS;(k2Rb@d-H^$-]$"%(nIHg3cf>3g<(IiRVho_rql.?SRn.0^WU.?IWbEKuh`+-V<pHDS.>N)gFNS
%dt-8!nA05)@=6sS:rGD=eXC23OH(E+%BC=`Bo3!GQL3/Oklu\o^0q./mSG\@[ch?=1+^o/AFUq1n!..!i([c%PbOeW;cT/=r3Sk2
%,0h'S1gccDHrO(#k\)?Vp2fc(#2auEB2WSD?f?csO3G,lUp1A7TN]Tm7/lVBM-Z#s`6Y@OlW;aM<g;q*gP@&V"LU)OHJc^U8SrO=
%'Wphi`Q/sQbsLF]#4m9\s6HfM=bec<@rJ-rX5gT0C<hG*jEV@+2-rhmcJ_="Z8e7sMq8,O24<E_mtd-dL$IBpVpE:6':l:rD]?$r
%c4GnH;FNO&o,$ei<D_ZB7d@k]@3uTO\P-5+lEoP;8MHA0L'FX,!-m<BAiPf%X860Nmm4b2C>s&M,&%iG728soW>J(YCD^np'GGqD
%6)M*3rdD"n(s3_K&2>GArf?'LURIdpqmAOjiM6+r$\,pN]$%:HI"(t=rq#%HfDjt$s6bC7qnN#`s7ft#]>+@4huE<Jp:#PNf73VF
%?iSSnrtVd<)ZSue5Q%/Rs8M!/J+Ea@h1%B_j+$ijs8D7Zs67jZrPsD8!WVXRr99jQr'1/Q:]L?BrqWaIs*+M8Dh%V5rqtNCroIMd
%ol#?VgRnMLf73YaTDn]MJ,A!8rq4UPrS.ABYQ$6er1j-"ro"su_gh^Drr(aQJ"*I!Wr~>
%AI9_PrivateDataEnd
